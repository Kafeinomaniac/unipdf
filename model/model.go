//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_f "bufio";_ed "bytes";_gc "crypto/sha1";_d "crypto/x509";_eb "encoding/binary";_g "encoding/hex";_beg "errors";_ba "fmt";_ea "github.com/unidoc/pkcs7";_adc "github.com/unidoc/unipdf/v3/common";_fb "github.com/unidoc/unipdf/v3/common/license";_fee "github.com/unidoc/unipdf/v3/core";_bfc "github.com/unidoc/unipdf/v3/core/security";_dg "github.com/unidoc/unipdf/v3/core/security/crypt";_afb "github.com/unidoc/unipdf/v3/internal/cmap";_ffg "github.com/unidoc/unipdf/v3/internal/imageutil";_ef "github.com/unidoc/unipdf/v3/internal/sampling";_de "github.com/unidoc/unipdf/v3/internal/textencoding";_cg "github.com/unidoc/unipdf/v3/model/internal/fonts";_fe "github.com/unidoc/unipdf/v3/model/internal/sigutil";_bac "github.com/unidoc/unipdf/v3/ps";_fbc "github.com/unidoc/unitype";_gf "golang.org/x/xerrors";_cd "image";_a "image/color";_ "image/gif";_ "image/png";_be "io";_bd "io/ioutil";_eba "math";_bf "math/rand";_da "os";_ad "regexp";_dd "sort";_af "strconv";_ebc "strings";_e "time";_eg "unicode";_ee "unicode/utf8";);

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_baca :=&XObjectImage {};_dcda :=&_fee .PdfObjectStream {};_dcda .PdfObjectDictionary =_fee .MakeDict ();_baca ._bcaff =_dcda ;return _baca ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_gdca *PdfPageResources )SetFontByName (keyName _fee .PdfObjectName ,obj _fee .PdfObject )error {if _gdca .Font ==nil {_gdca .Font =_fee .MakeDict ();};_cadac ,_deggd :=_fee .TraceToDirectObject (_gdca .Font ).(*_fee .PdfObjectDictionary );if !_deggd {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fee .TraceToDirectObject (_gdca .Font ));return _fee .ErrTypeError ;};_cadac .Set (keyName ,obj );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_edfg *PdfAnnotationStrikeOut )ToPdfObject ()_fee .PdfObject {_edfg .PdfAnnotation .ToPdfObject ();_cfba :=_edfg ._gdc ;_cdg :=_cfba .PdfObject .(*_fee .PdfObjectDictionary );_edfg .PdfAnnotationMarkup .appendToPdfDictionary (_cdg );_cdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_cdg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_edfg .QuadPoints );return _cfba ;};

// WriteToFile writes the Appender output to file specified by path.
func (_acff *PdfAppender )WriteToFile (outputPath string )error {_fbgcg ,_afacg :=_da .Create (outputPath );if _afacg !=nil {return _afacg ;};defer _fbgcg .Close ();return _acff .Write (_fbgcg );};

// ValidateSignatures validates digital signatures in the document.
func (_egdgad *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _egdgad .AcroForm ==nil {return nil ,nil ;};if _egdgad .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_agecg *PdfSignature ;_cecgd *PdfField ;_aebfg SignatureHandler ;};var _fbbcf []*sigFieldPair ;for _ ,_fcgge :=range _egdgad .AcroForm .AllFields (){if _fcgge .V ==nil {continue ;};if _gdgaa ,_bcdca :=_fee .GetDict (_fcgge .V );_bcdca {if _cggga ,_eccfe :=_fee .GetNameVal (_gdgaa .Get ("\u0054\u0079\u0070\u0065"));_eccfe &&_cggga =="\u0053\u0069\u0067"{_ebcb ,_edgef :=_fee .GetIndirect (_fcgge .V );if !_edgef {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_eeeda ,_cgfgb :=_egdgad .newPdfSignatureFromIndirect (_ebcb );if _cgfgb !=nil {return nil ,_cgfgb ;};var _cdea SignatureHandler ;for _ ,_bbbbf :=range handlers {if _bbbbf .IsApplicable (_eeeda ){_cdea =_bbbbf ;break ;};};_fbbcf =append (_fbbcf ,&sigFieldPair {_agecg :_eeeda ,_cecgd :_fcgge ,_aebfg :_cdea });};};};var _abeea []SignatureValidationResult ;for _ ,_dcgea :=range _fbbcf {_gefec :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_dcgea ._cecgd }};if _dcgea ._aebfg ==nil {_gefec .Errors =append (_gefec .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_abeea =append (_abeea ,_gefec );continue ;};_fdba ,_cgdfba :=_dcgea ._aebfg .NewDigest (_dcgea ._agecg );if _cgdfba !=nil {_gefec .Errors =append (_gefec .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cgdfba .Error ());_abeea =append (_abeea ,_gefec );continue ;};_badee :=_dcgea ._agecg .ByteRange ;if _badee ==nil {_gefec .Errors =append (_gefec .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_abeea =append (_abeea ,_gefec );continue ;};for _dfdeb :=0;_dfdeb < _badee .Len ();_dfdeb =_dfdeb +2{_fefff ,_ :=_fee .GetNumberAsInt64 (_badee .Get (_dfdeb ));_ddge ,_ :=_fee .GetIntVal (_badee .Get (_dfdeb +1));if _ ,_ddgcf :=_egdgad ._acgec .Seek (_fefff ,_be .SeekStart );_ddgcf !=nil {return nil ,_ddgcf ;};_egbdd :=make ([]byte ,_ddge );if _ ,_bddcc :=_egdgad ._acgec .Read (_egbdd );_bddcc !=nil {return nil ,_bddcc ;};_fdba .Write (_egbdd );};_cdcf ,_cgdfba :=_dcgea ._aebfg .Validate (_dcgea ._agecg ,_fdba );if _cgdfba !=nil {return nil ,_cgdfba ;};_cdcf .Name =_dcgea ._agecg .Name .Decoded ();_cdcf .Reason =_dcgea ._agecg .Reason .Decoded ();if _dcgea ._agecg .M !=nil {_acged ,_ggfbc :=NewPdfDate (_dcgea ._agecg .M .String ());if _ggfbc !=nil {_cdcf .Errors =append (_cdcf .Errors ,_ggfbc .Error ());continue ;};_cdcf .Date =_acged ;};_cdcf .ContactInfo =_dcgea ._agecg .ContactInfo .Decoded ();_cdcf .Location =_dcgea ._agecg .Location .Decoded ();_cdcf .Fields =_gefec .Fields ;_abeea =append (_abeea ,_cdcf );};return _abeea ,nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_afga *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _bggbb []*PdfField ;if _afga .AcroForm !=nil {_bggbb =_afga .AcroForm .AllFields ();};_cdgdd :=make (map[*PdfField ]struct{},len (_bggbb ));for _ ,_bggcfa :=range _bggbb {_cdgdd [_bggcfa ]=struct{}{};};for _ ,_gecg :=range _afga .PageList {_ddffd ,_ggca :=_gecg .GetAnnotations ();if _ggca !=nil {return false ,_ggca ;};for _ ,_eccfc :=range _ddffd {_aeecf ,_bdbda :=_eccfc .GetContext ().(*PdfAnnotationWidget );if !_bdbda {continue ;};_gdbg :=_aeecf .Field ();if _gdbg ==nil {return true ,nil ;};if _ ,_dfaee :=_cdgdd [_gdbg ];!_dfaee {return true ,nil ;};};};return false ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_egge *PdfActionURI )ToPdfObject ()_fee .PdfObject {_egge .PdfAction .ToPdfObject ();_fge :=_egge ._fg ;_gfa :=_fge .PdfObject .(*_fee .PdfObjectDictionary );_gfa .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeURI )));_gfa .SetIfNotNil ("\u0055\u0052\u0049",_egge .URI );_gfa .SetIfNotNil ("\u0049\u0073\u004da\u0070",_egge .IsMap );return _fge ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _fee .PdfObject ;Popup *PdfAnnotationPopup ;CA _fee .PdfObject ;RC _fee .PdfObject ;CreationDate _fee .PdfObject ;IRT _fee .PdfObject ;Subj _fee .PdfObject ;RT _fee .PdfObject ;IT _fee .PdfObject ;ExData _fee .PdfObject ;};func (_acdd *PdfReader )newPdfAcroFormFromDict (_gegee *_fee .PdfIndirectObject ,_cdgeef *_fee .PdfObjectDictionary )(*PdfAcroForm ,error ){_dcdfa :=NewPdfAcroForm ();if _gegee !=nil {_dcdfa ._edda =_gegee ;_gegee .PdfObject =_fee .MakeDict ();};if _geceb :=_cdgeef .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_geceb !=nil {_aace ,_edcd :=_fee .GetArray (_geceb );if !_edcd {return nil ,_ba .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_geceb );};var _cbcgb []*PdfField ;for _ ,_dbdg :=range _aace .Elements (){_fdff ,_aaagc :=_fee .GetIndirect (_dbdg );if !_aaagc {if _ ,_ccfbad :=_dbdg .(*_fee .PdfObjectNull );_ccfbad {_adc .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_adc .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dbdg );return nil ,_ba .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gcggd ,_cgdcf :=_acdd .newPdfFieldFromIndirectObject (_fdff ,nil );if _cgdcf !=nil {return nil ,_cgdcf ;};_adc .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_gcggd );_cbcgb =append (_cbcgb ,_gcggd );};_dcdfa .Fields =&_cbcgb ;};if _eeaf :=_cdgeef .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_eeaf !=nil {_dbbb ,_fgecee :=_fee .GetBool (_eeaf );if _fgecee {_dcdfa .NeedAppearances =_dbbb ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_eeaf );};};if _acbg :=_cdgeef .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_acbg !=nil {_bdddc ,_adfc :=_fee .GetInt (_acbg );if _adfc {_dcdfa .SigFlags =_bdddc ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acbg );};};if _dcffc :=_cdgeef .Get ("\u0043\u004f");_dcffc !=nil {_bfcdd ,_ddcfca :=_fee .GetArray (_dcffc );if _ddcfca {_dcdfa .CO =_bfcdd ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dcffc );};};if _bdfa :=_cdgeef .Get ("\u0044\u0052");_bdfa !=nil {if _adfdg ,_bbfe :=_fee .GetDict (_bdfa );_bbfe {_gafb ,_afeb :=NewPdfPageResourcesFromDict (_adfdg );if _afeb !=nil {_adc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_afeb );return nil ,_afeb ;};_dcdfa .DR =_gafb ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bdfa );};};if _geadg :=_cdgeef .Get ("\u0044\u0041");_geadg !=nil {_dffd ,_gcafa :=_fee .GetString (_geadg );if _gcafa {_dcdfa .DA =_dffd ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_geadg );};};if _edffc :=_cdgeef .Get ("\u0051");_edffc !=nil {_cdgf ,_cfbab :=_fee .GetInt (_edffc );if _cfbab {_dcdfa .Q =_cdgf ;}else {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_edffc );};};if _egeg :=_cdgeef .Get ("\u0058\u0046\u0041");_egeg !=nil {_dcdfa .XFA =_egeg ;};return _dcdfa ,nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_bgcbd *PdfColorCalRGB )GetNumComponents ()int {return 3};func (_baeb *pdfFontSimple )getFontEncoding ()(_cadd string ,_ecfaa map[_de .CharCode ]_de .GlyphName ,_abdc error ){_cadd ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _fdge ,_fcff :=_gfdg [_baeb ._fagfdc ];_fcff {_cadd =_fdge ;}else if _baeb .fontFlags ()&_efdga !=0{for _eaaa ,_efcd :=range _gfdg {if _ebc .Contains (_baeb ._fagfdc ,_eaaa ){_cadd =_efcd ;break ;};};};if _baeb .Encoding ==nil {return _cadd ,nil ,nil ;};switch _gbab :=_baeb .Encoding .(type ){case *_fee .PdfObjectName :return string (*_gbab ),nil ,nil ;case *_fee .PdfObjectDictionary :_fddgc ,_bced :=_fee .GetName (_gbab .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bced {_cadd =_fddgc .String ();};if _fgge :=_gbab .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fgge !=nil {_gffa ,_ffgf :=_fee .GetArray (_fgge );if !_ffgf {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_gbab ,_gbab .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_fee .ErrTypeError ;};_ecfaa ,_abdc =_de .FromFontDifferences (_gffa );};return _cadd ,_ecfaa ,_abdc ;default:_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_baeb .Encoding ,_baeb .Encoding );return "",nil ,_fee .ErrTypeError ;};};

// GetContentStream returns the pattern cell's content stream
func (_baagd *PdfTilingPattern )GetContentStream ()([]byte ,error ){_fgbca ,_ ,_cdab :=_baagd .GetContentStreamWithEncoder ();return _fgbca ,_cdab ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_fba :=NewPdfAnnotation ();_gccg :=&PdfAnnotationLink {};_gccg .PdfAnnotation =_fba ;_fba .SetContext (_gccg );return _gccg ;};func _ffbea (_cagg _fee .PdfObject )(*PdfColorspaceLab ,error ){_dffc :=NewPdfColorspaceLab ();if _ggcd ,_fcbac :=_cagg .(*_fee .PdfIndirectObject );_fcbac {_dffc ._gabad =_ggcd ;};_cagg =_fee .TraceToDirectObject (_cagg );_cgfge ,_dfeg :=_cagg .(*_fee .PdfObjectArray );if !_dfeg {return nil ,_ba .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cgfge .Len ()!=2{return nil ,_ba .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cagg =_fee .TraceToDirectObject (_cgfge .Get (0));_dcgc ,_dfeg :=_cagg .(*_fee .PdfObjectName );if !_dfeg {return nil ,_ba .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_dcgc !="\u004c\u0061\u0062"{return nil ,_ba .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_cagg =_fee .TraceToDirectObject (_cgfge .Get (1));_ddggd ,_dfeg :=_cagg .(*_fee .PdfObjectDictionary );if !_dfeg {return nil ,_ba .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_cagg =_ddggd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cagg =_fee .TraceToDirectObject (_cagg );_ggge ,_dfeg :=_cagg .(*_fee .PdfObjectArray );if !_dfeg {return nil ,_ba .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _ggge .Len ()!=3{return nil ,_ba .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gadgb ,_aegf :=_ggge .GetAsFloat64Slice ();if _aegf !=nil {return nil ,_aegf ;};_dffc .WhitePoint =_gadgb ;_cagg =_ddggd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cagg !=nil {_cagg =_fee .TraceToDirectObject (_cagg );_gfec ,_cedc :=_cagg .(*_fee .PdfObjectArray );if !_cedc {return nil ,_ba .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _gfec .Len ()!=3{return nil ,_ba .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_aaabg ,_cccf :=_gfec .GetAsFloat64Slice ();if _cccf !=nil {return nil ,_cccf ;};_dffc .BlackPoint =_aaabg ;};_cagg =_ddggd .Get ("\u0052\u0061\u006eg\u0065");if _cagg !=nil {_cagg =_fee .TraceToDirectObject (_cagg );_adbbc ,_adgg :=_cagg .(*_fee .PdfObjectArray );if !_adgg {_adc .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_ba .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _adbbc .Len ()!=4{_adc .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_ba .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bggcf ,_caec :=_adbbc .GetAsFloat64Slice ();if _caec !=nil {return nil ,_caec ;};_dffc .Range =_bggcf ;};return _dffc ,nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _e .Time )(PdfDate ,error ){_agcdg :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_fafbc ,_ :=_af .ParseInt (_agcdg [1:3],10,32);_agfbfe ,_ :=_af .ParseInt (_agcdg [4:6],10,32);return PdfDate {_agfda :int64 (timeObj .Year ()),_dgaac :int64 (timeObj .Month ()),_gfgad :int64 (timeObj .Day ()),_cgbab :int64 (timeObj .Hour ()),_fdcba :int64 (timeObj .Minute ()),_dbead :int64 (timeObj .Second ()),_adbe :_agcdg [0],_eebfg :_fafbc ,_bafga :_agfbfe },nil ;};func (_dfga *PdfWriter )writeObject (_fbbcg int ,_bgega _fee .PdfObject ){_adc .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_fbbcg );if _bfggde ,_ggeff :=_bgega .(*_fee .PdfIndirectObject );_ggeff {_dfga ._cdeec [_fbbcg ]=crossReference {Type :1,Offset :_dfga ._egdbg ,Generation :_bfggde .GenerationNumber };_afabf :=_ba .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fbbcg );if _bfaaa ,_fgccf :=_bfggde .PdfObject .(*pdfSignDictionary );_fgccf {_bfaaa ._aaedd =_dfga ._egdbg +int64 (len (_afabf ));};if _bfggde .PdfObject ==nil {_adc .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_bfggde .PdfObject =_fee .MakeNull ();};_afabf +=_bfggde .PdfObject .WriteString ();_afabf +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_dfga .writeString (_afabf );return ;};if _ggfc ,_aeddd :=_bgega .(*_fee .PdfObjectStream );_aeddd {_dfga ._cdeec [_fbbcg ]=crossReference {Type :1,Offset :_dfga ._egdbg ,Generation :_ggfc .GenerationNumber };_beggb :=_ba .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fbbcg );_beggb +=_ggfc .PdfObjectDictionary .WriteString ();_beggb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dfga .writeString (_beggb );_dfga .writeBytes (_ggfc .Stream );_dfga .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _abgaf ,_agfacc :=_bgega .(*_fee .PdfObjectStreams );_agfacc {_dfga ._cdeec [_fbbcg ]=crossReference {Type :1,Offset :_dfga ._egdbg ,Generation :_abgaf .GenerationNumber };_ggggec :=_ba .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fbbcg );var _gaabg []string ;var _cgdfbc string ;var _dbfg int64 ;for _cbdfc ,_fddcd :=range _abgaf .Elements (){_acea ,_ddaf :=_fddcd .(*_fee .PdfIndirectObject );if !_ddaf {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_fbbcg ,_fddcd );continue ;};_ccfegf :=_acea .PdfObject .WriteString ()+"\u0020";_cgdfbc =_cgdfbc +_ccfegf ;_gaabg =append (_gaabg ,_ba .Sprintf ("\u0025\u0064\u0020%\u0064",_acea .ObjectNumber ,_dbfg ));_dfga ._cdeec [int (_acea .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_fbbcg ,Index :_cbdfc };_dbfg =_dbfg +int64 (len ([]byte (_ccfegf )));};_gdcaf :=_ebc .Join (_gaabg ,"\u0020")+"\u0020";_egde :=_fee .NewFlateEncoder ();_gfbgb :=_egde .MakeStreamDict ();_gfbgb .Set (_fee .PdfObjectName ("\u0054\u0079\u0070\u0065"),_fee .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_gcdge :=int64 (_abgaf .Len ());_gfbgb .Set (_fee .PdfObjectName ("\u004e"),_fee .MakeInteger (_gcdge ));_dddde :=int64 (len (_gdcaf ));_gfbgb .Set (_fee .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_fee .MakeInteger (_dddde ));_aadcf ,_ :=_egde .EncodeBytes ([]byte (_gdcaf +_cgdfbc ));_ecgab :=int64 (len (_aadcf ));_gfbgb .Set (_fee .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_fee .MakeInteger (_ecgab ));_ggggec +=_gfbgb .WriteString ();_ggggec +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dfga .writeString (_ggggec );_dfga .writeBytes (_aadcf );_dfga .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_dfga .writeString (_bgega .WriteString ());};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_feff *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_bfgg :=NewPdfAnnotation ();_gcgga :=&PdfAnnotationPrinterMark {};_gcgga .PdfAnnotation =_bfgg ;_bfgg .SetContext (_gcgga );return _gcgga ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _e .Time ){_ebabd =modifiedDate };

// ToPdfObject returns the PDF representation of the function.
func (_adbge *PdfFunctionType2 )ToPdfObject ()_fee .PdfObject {_ffce :=_fee .MakeDict ();_ffce .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fee .MakeInteger (2));_agfc :=&_fee .PdfObjectArray {};for _ ,_bfgb :=range _adbge .Domain {_agfc .Append (_fee .MakeFloat (_bfgb ));};_ffce .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_agfc );if _adbge .Range !=nil {_dgeeb :=&_fee .PdfObjectArray {};for _ ,_eacda :=range _adbge .Range {_dgeeb .Append (_fee .MakeFloat (_eacda ));};_ffce .Set ("\u0052\u0061\u006eg\u0065",_dgeeb );};if _adbge .C0 !=nil {_gcbfb :=&_fee .PdfObjectArray {};for _ ,_cccgb :=range _adbge .C0 {_gcbfb .Append (_fee .MakeFloat (_cccgb ));};_ffce .Set ("\u0043\u0030",_gcbfb );};if _adbge .C1 !=nil {_eggba :=&_fee .PdfObjectArray {};for _ ,_dcgd :=range _adbge .C1 {_eggba .Append (_fee .MakeFloat (_dcgd ));};_ffce .Set ("\u0043\u0031",_eggba );};_ffce .Set ("\u004e",_fee .MakeFloat (_adbge .N ));if _adbge ._fgega !=nil {_adbge ._fgega .PdfObject =_ffce ;return _adbge ._fgega ;};return _ffce ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _fee .PdfObject ;_cddad []byte ;_gdbc *_fee .PdfIndirectObject ;};func _abcc (_bbbd *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_bbbd }};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_fcfe *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _fee .PdfObject ;Name _fee .PdfObject ;};func (_bcgfa *LTV )getOCSPs (_fbcc []*_d .Certificate ,_agcb map[string ]*_d .Certificate )([][]byte ,error ){_affad :=make ([][]byte ,0,len (_fbcc ));for _ ,_baadd :=range _fbcc {for _ ,_ecacf :=range _baadd .OCSPServer {if _bcgfa ._fgegg .IsCA (_baadd ){continue ;};_gaeb ,_bbaa :=_agcb [_baadd .Issuer .CommonName ];if !_bbaa {_adc .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");continue ;};_ ,_gabea ,_gecfb :=_bcgfa ._cggeb .MakeRequest (_ecacf ,_baadd ,_gaeb );if _gecfb !=nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_gecfb );continue ;};_affad =append (_affad ,_gabea );};};return _affad ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_fde :=NewPdfAnnotation ();_aade :=&PdfAnnotationProjection {};_aade .PdfAnnotation =_fde ;_aade .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fde .SetContext (_aade );return _aade ;};func _cceb (_eadg *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_cbde ,_aecg :=_fee .GetDict (_eadg .AP );if !_aecg {return nil ,nil ,_beg .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _cbde ==nil {return nil ,nil ,nil ;};_cbff ,_aecg :=_fee .GetArray (_eadg .Rect );if !_aecg ||_cbff .Len ()!=4{return nil ,nil ,_beg .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cede ,_fga :=NewPdfRectangle (*_cbff );if _fga !=nil {return nil ,nil ,_fga ;};_bdad :=_fee .TraceToDirectObject (_cbde .Get ("\u004e"));switch _badc :=_bdad .(type ){case *_fee .PdfObjectStream :_facad :=_badc ;_aedbf ,_ddcac :=NewXObjectFormFromStream (_facad );return _aedbf ,_cede ,_ddcac ;case *_fee .PdfObjectDictionary :_fagde :=_badc ;_begec ,_fbddc :=_fee .GetName (_eadg .AS );if !_fbddc {return nil ,nil ,nil ;};if _fagde .Get (*_begec )==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_aded ,_fbddc :=_fee .GetStream (_fagde .Get (*_begec ));if !_fbddc {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_begec );return nil ,nil ,_beg .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_aaafg ,_befd :=NewXObjectFormFromStream (_aded );return _aaafg ,_cede ,_befd ;};_adc .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_bdad );return nil ,nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fee .PdfObject ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_aabg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daef ,_fbba :=_fee .GetNumbersAsFloat (objects );if _fbba !=nil {return nil ,_fbba ;};return _aabg .ColorFromFloats (_daef );};

// SetImage updates XObject Image with new image data.
func (_dcdbb *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_dcdbb .Filter .UpdateParams (img .GetParamsDict ());_eggcf ,_gfadg :=_dcdbb .Filter .EncodeBytes (img .Data );if _gfadg !=nil {return _gfadg ;};_dcdbb .Stream =_eggcf ;_abebg :=img .Width ;_dcdbb .Width =&_abebg ;_gecc :=img .Height ;_dcdbb .Height =&_gecc ;_cdfge :=img .BitsPerComponent ;_dcdbb .BitsPerComponent =&_cdfge ;if cs ==nil {if img .ColorComponents ==1{_dcdbb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_dcdbb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_dcdbb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _beg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dcdbb .ColorSpace =cs ;};return nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_aefd *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_gbfb :=func (_dadc float64 )float64 {if _dadc >=6.0/29{return _dadc *_dadc *_dadc ;};return 108.0/841*(_dadc -4/29);};_acfed ,_ddbd :=color .(*PdfColorLab );if !_ddbd {_adc .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_acfed .L ();AStar :=_acfed .A ();BStar :=_acfed .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_aefd .WhitePoint [0]*_gbfb (L );Y :=_aefd .WhitePoint [1]*_gbfb (M );Z :=_aefd .WhitePoint [2]*_gbfb (N );_faef :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fdfa :=-0.969256*X +1.875992*Y +0.041556*Z ;_edd :=0.055648*X +-0.204043*Y +1.057311*Z ;_faef =_eba .Min (_eba .Max (_faef ,0),1.0);_fdfa =_eba .Min (_eba .Max (_fdfa ,0),1.0);_edd =_eba .Min (_eba .Max (_edd ,0),1.0);return NewPdfColorDeviceRGB (_faef ,_fdfa ,_edd ),nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gfcb *PdfTilingPattern )ToPdfObject ()_fee .PdfObject {_gfcb .PdfPattern .ToPdfObject ();_dafgf :=_gfcb .getDict ();if _gfcb .PaintType !=nil {_dafgf .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gfcb .PaintType );};if _gfcb .TilingType !=nil {_dafgf .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gfcb .TilingType );};if _gfcb .BBox !=nil {_dafgf .Set ("\u0042\u0042\u006f\u0078",_gfcb .BBox .ToPdfObject ());};if _gfcb .XStep !=nil {_dafgf .Set ("\u0058\u0053\u0074e\u0070",_gfcb .XStep );};if _gfcb .YStep !=nil {_dafgf .Set ("\u0059\u0053\u0074e\u0070",_gfcb .YStep );};if _gfcb .Resources !=nil {_dafgf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gfcb .Resources .ToPdfObject ());};if _gfcb .Matrix !=nil {_dafgf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfcb .Matrix );};return _gfcb ._aege ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_cdbf *DSS )addCRLs (_dade [][]byte )([]*_fee .PdfObjectStream ,error ){return _cdbf .add (&_cdbf .CRLs ,_cdbf ._bfagf ,_dade );};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _fee .PdfObject )(PdfColorspace ,error ){var _gaab *_fee .PdfIndirectObject ;var _cadbc *_fee .PdfObjectName ;var _edebc *_fee .PdfObjectArray ;if _bgeg ,_ecbc :=obj .(*_fee .PdfIndirectObject );_ecbc {_gaab =_bgeg ;};obj =_fee .TraceToDirectObject (obj );switch _dgdg :=obj .(type ){case *_fee .PdfObjectArray :_edebc =_dgdg ;case *_fee .PdfObjectName :_cadbc =_dgdg ;};if _cadbc !=nil {switch *_cadbc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_adc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_cadbc );return nil ,_efbg ;};};if _edebc !=nil &&_edebc .Len ()> 0{var _deaf _fee .PdfObject =_gaab ;if _gaab ==nil {_deaf =_edebc ;};if _bfga ,_fedbd :=_fee .GetName (_edebc .Get (0));_fedbd {switch _bfga .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _edebc .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _edebc .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _edebc .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _bbec (_deaf );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _edefc (_deaf );case "\u004c\u0061\u0062":return _ffbea (_deaf );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _eefe (_deaf );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ccef (_deaf );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _gccb (_deaf );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _ggbf (_deaf );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _cbeae (_deaf );default:_adc .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_bfga );};};};_adc .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};func (_gaded *PdfReader )newPdfPageFromDict (_ecbbg *_fee .PdfObjectDictionary )(*PdfPage ,error ){_dgbbd :=NewPdfPage ();_dgbbd ._eddb =_ecbbg ;_dbbdc :=*_ecbbg ;_fgeed ,_deaae :=_dbbdc .Get ("\u0054\u0079\u0070\u0065").(*_fee .PdfObjectName );if !_deaae {return nil ,_beg .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_fgeed !="\u0050\u0061\u0067\u0065"{return nil ,_beg .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _adgc :=_dbbdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_adgc !=nil {_dgbbd .Parent =_adgc ;};if _dadac :=_dbbdc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_dadac !=nil {_dgddg ,_dcacb :=_fee .GetString (_dadac );if !_dcacb {return nil ,_beg .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_babe ,_cdedbf :=NewPdfDate (_dgddg .Str ());if _cdedbf !=nil {return nil ,_cdedbf ;};_dgbbd .LastModified =&_babe ;};if _eecce :=_dbbdc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eecce !=nil &&!_fee .IsNullObject (_eecce ){_egac ,_bbbca :=_fee .GetDict (_eecce );if !_bbbca {return nil ,_ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_eecce );};var _abbdg error ;_dgbbd .Resources ,_abbdg =NewPdfPageResourcesFromDict (_egac );if _abbdg !=nil {return nil ,_abbdg ;};}else {_dbbag ,_gbaaa :=_dgbbd .getParentResources ();if _gbaaa !=nil {return nil ,_gbaaa ;};if _dbbag ==nil {_dbbag =NewPdfPageResources ();};_dgbbd .Resources =_dbbag ;};if _bgdfg :=_dbbdc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_bgdfg !=nil {_fdbfa ,_cdgg :=_fee .GetArray (_bgdfg );if !_cdgg {return nil ,_beg .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cgafc error ;_dgbbd .MediaBox ,_cgafc =NewPdfRectangle (*_fdbfa );if _cgafc !=nil {return nil ,_cgafc ;};};if _aefg :=_dbbdc .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_aefg !=nil {_ddege ,_fbdg :=_fee .GetArray (_aefg );if !_fbdg {return nil ,_beg .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _bfcaf error ;_dgbbd .CropBox ,_bfcaf =NewPdfRectangle (*_ddege );if _bfcaf !=nil {return nil ,_bfcaf ;};};if _eafde :=_dbbdc .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_eafde !=nil {_gcbea ,_baef :=_fee .GetArray (_eafde );if !_baef {return nil ,_beg .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _aecbd error ;_dgbbd .BleedBox ,_aecbd =NewPdfRectangle (*_gcbea );if _aecbd !=nil {return nil ,_aecbd ;};};if _eaeac :=_dbbdc .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_eaeac !=nil {_egae ,_addbd :=_fee .GetArray (_eaeac );if !_addbd {return nil ,_beg .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _dfefcd error ;_dgbbd .TrimBox ,_dfefcd =NewPdfRectangle (*_egae );if _dfefcd !=nil {return nil ,_dfefcd ;};};if _gfeea :=_dbbdc .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_gfeea !=nil {_dcbd ,_dddfc :=_fee .GetArray (_gfeea );if !_dddfc {return nil ,_beg .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _fcfbc error ;_dgbbd .ArtBox ,_fcfbc =NewPdfRectangle (*_dcbd );if _fcfbc !=nil {return nil ,_fcfbc ;};};if _baedc :=_dbbdc .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_baedc !=nil {_dgbbd .BoxColorInfo =_baedc ;};if _bfgbb :=_dbbdc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bfgbb !=nil {_dgbbd .Contents =_bfgbb ;};if _cceg :=_dbbdc .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_cceg !=nil {_fggca ,_cgdgb :=_fee .GetInt (_cceg );if !_cgdgb {return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_edafa :=int64 (*_fggca );_dgbbd .Rotate =&_edafa ;};if _gegag :=_dbbdc .Get ("\u0047\u0072\u006fu\u0070");_gegag !=nil {_dgbbd .Group =_gegag ;};if _aagga :=_dbbdc .Get ("\u0054\u0068\u0075m\u0062");_aagga !=nil {_dgbbd .Thumb =_aagga ;};if _dfceb :=_dbbdc .Get ("\u0042");_dfceb !=nil {_dgbbd .B =_dfceb ;};if _bfagb :=_dbbdc .Get ("\u0044\u0075\u0072");_bfagb !=nil {_dgbbd .Dur =_bfagb ;};if _eceaa :=_dbbdc .Get ("\u0054\u0072\u0061n\u0073");_eceaa !=nil {_dgbbd .Trans =_eceaa ;};if _edcdg :=_dbbdc .Get ("\u0041\u0041");_edcdg !=nil {_dgbbd .AA =_edcdg ;};if _fabg :=_dbbdc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fabg !=nil {_dgbbd .Metadata =_fabg ;};if _eedce :=_dbbdc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_eedce !=nil {_dgbbd .PieceInfo =_eedce ;};if _fafda :=_dbbdc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fafda !=nil {_dgbbd .StructParents =_fafda ;};if _eeba :=_dbbdc .Get ("\u0049\u0044");_eeba !=nil {_dgbbd .ID =_eeba ;};if _aggda :=_dbbdc .Get ("\u0050\u005a");_aggda !=nil {_dgbbd .PZ =_aggda ;};if _beaaf :=_dbbdc .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_beaaf !=nil {_dgbbd .SeparationInfo =_beaaf ;};if _ggfdb :=_dbbdc .Get ("\u0054\u0061\u0062\u0073");_ggfdb !=nil {_dgbbd .Tabs =_ggfdb ;};if _agafa :=_dbbdc .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_agafa !=nil {_dgbbd .TemplateInstantiated =_agafa ;};if _gedbc :=_dbbdc .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_gedbc !=nil {_dgbbd .PresSteps =_gedbc ;};if _abea :=_dbbdc .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_abea !=nil {_dgbbd .UserUnit =_abea ;};if _ffgec :=_dbbdc .Get ("\u0056\u0050");_ffgec !=nil {_dgbbd .VP =_ffgec ;};if _befdd :=_dbbdc .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_befdd !=nil {_dgbbd .Annots =_befdd ;};_dgbbd ._ddcca =_gaded ;return _dgbbd ,nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_aagg *PdfOutlineTreeNode )GetContext ()PdfModel {if _ccaa ,_afde :=_aagg ._dbcdc .(*PdfOutline );_afde {return _ccaa ;};if _dddbd ,_cfcea :=_aagg ._dbcdc .(*PdfOutlineItem );_cfcea {return _dddbd ;};_adc .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};

// Val returns the value of the color.
func (_effa *PdfColorCalGray )Val ()float64 {return float64 (*_effa )};

// ToPdfObject returns the PDF representation of the function.
func (_fggbba *PdfFunctionType3 )ToPdfObject ()_fee .PdfObject {_addg :=_fee .MakeDict ();_addg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fee .MakeInteger (3));_dcdce :=&_fee .PdfObjectArray {};for _ ,_cdaee :=range _fggbba .Domain {_dcdce .Append (_fee .MakeFloat (_cdaee ));};_addg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcdce );if _fggbba .Range !=nil {_defbc :=&_fee .PdfObjectArray {};for _ ,_gebdb :=range _fggbba .Range {_defbc .Append (_fee .MakeFloat (_gebdb ));};_addg .Set ("\u0052\u0061\u006eg\u0065",_defbc );};if _fggbba .Functions !=nil {_dfefc :=&_fee .PdfObjectArray {};for _ ,_gabade :=range _fggbba .Functions {_dfefc .Append (_gabade .ToPdfObject ());};_addg .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_dfefc );};if _fggbba .Bounds !=nil {_bccfec :=&_fee .PdfObjectArray {};for _ ,_bbecb :=range _fggbba .Bounds {_bccfec .Append (_fee .MakeFloat (_bbecb ));};_addg .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_bccfec );};if _fggbba .Encode !=nil {_egddd :=&_fee .PdfObjectArray {};for _ ,_agfad :=range _fggbba .Encode {_egddd .Append (_fee .MakeFloat (_agfad ));};_addg .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_egddd );};if _fggbba ._daffg !=nil {_fggbba ._daffg .PdfObject =_addg ;return _fggbba ._daffg ;};return _addg ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_gfcd *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_aggee *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_deecf *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToPdfObject returns the PDF representation of the page resources.
func (_gebae *PdfPageResources )ToPdfObject ()_fee .PdfObject {_bfbag :=_gebae ._edaeea ;_bfbag .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gebae .ExtGState );if _gebae ._bbgg !=nil {_gebae .ColorSpace =_gebae ._bbgg .ToPdfObject ();};_bfbag .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gebae .ColorSpace );_bfbag .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_gebae .Pattern );_bfbag .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gebae .Shading );_bfbag .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_gebae .XObject );_bfbag .SetIfNotNil ("\u0046\u006f\u006e\u0074",_gebae .Font );_bfbag .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_gebae .ProcSet );_bfbag .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_gebae .Properties );return _bfbag ;};func (_adaf *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _fffd :=_adaf ._dedcg ;_fffd !=nil {return _fffd ;};return _adaf ._gefd ;};

// PdfVersion returns version of the PDF file.
func (_fgcff *PdfReader )PdfVersion ()_fee .Version {return _fgcff ._daae .PdfVersion ()};func _ccef (_cdcg _fee .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_adc .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cdcg .String (),_cdcg );_defb :=NewPdfColorspaceSpecialPattern ();if _fdde ,_gadc :=_cdcg .(*_fee .PdfIndirectObject );_gadc {_defb ._cfbef =_fdde ;};_cdcg =_fee .TraceToDirectObject (_cdcg );if _ddda ,_aegaf :=_cdcg .(*_fee .PdfObjectName );_aegaf {if *_ddda !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_ba .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _defb ,nil ;};_fcfeg ,_fdgfb :=_cdcg .(*_fee .PdfObjectArray );if !_fdgfb {_adc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cdcg );return nil ,_ba .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _fcfeg .Len ()!=1&&_fcfeg .Len ()!=2{_adc .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_fcfeg );return nil ,_ba .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cdcg =_fcfeg .Get (0);if _bgfg ,_gcbc :=_cdcg .(*_fee .PdfObjectName );_gcbc {if *_bgfg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_adc .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_bgfg );return nil ,_ba .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _fcfeg .Len ()> 1{_cdcg =_fcfeg .Get (1);_cdcg =_fee .TraceToDirectObject (_cdcg );_fcdg ,_debed :=NewPdfColorspaceFromPdfObject (_cdcg );if _debed !=nil {return nil ,_debed ;};_defb .UnderlyingCS =_fcdg ;};_adc .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_defb .UnderlyingCS );return _defb ,nil ;};func _dede (_ebge _fee .PdfObject ,_fdeca *fontCommon )(*_afb .CMap ,error ){_fgege ,_ccdd :=_fee .GetStream (_ebge );if !_ccdd {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ebge );return nil ,_fee .ErrTypeError ;};_dbgf ,_abaff :=_fee .DecodeStream (_fgege );if _abaff !=nil {return nil ,_abaff ;};_dcaf ,_abaff :=_afb .LoadCmapFromData (_dbgf ,!_fdeca .isCIDFont ());if _abaff !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_fgege .ObjectNumber ,_abaff );};return _dcaf ,_abaff ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_bfegd *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _bfegd .Range };

// ToPdfObject implements interface PdfModel.
func (_cbcf *PdfAnnotationCircle )ToPdfObject ()_fee .PdfObject {_cbcf .PdfAnnotation .ToPdfObject ();_afcg :=_cbcf ._gdc ;_fbaa :=_afcg .PdfObject .(*_fee .PdfObjectDictionary );_cbcf .PdfAnnotationMarkup .appendToPdfDictionary (_fbaa );_fbaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_fbaa .SetIfNotNil ("\u0042\u0053",_cbcf .BS );_fbaa .SetIfNotNil ("\u0049\u0043",_cbcf .IC );_fbaa .SetIfNotNil ("\u0042\u0045",_cbcf .BE );_fbaa .SetIfNotNil ("\u0052\u0044",_cbcf .RD );return _afcg ;};func _dfcgd (_cdfcd _fee .PdfObject )(*PdfFunctionType2 ,error ){_fadae :=&PdfFunctionType2 {};var _edbge *_fee .PdfObjectDictionary ;if _fafd ,_gbgg :=_cdfcd .(*_fee .PdfIndirectObject );_gbgg {_gbge ,_fdddf :=_fafd .PdfObject .(*_fee .PdfObjectDictionary );if !_fdddf {return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fadae ._fgega =_fafd ;_edbge =_gbge ;}else if _dagde ,_baafg :=_cdfcd .(*_fee .PdfObjectDictionary );_baafg {_edbge =_dagde ;}else {return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adc .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_edbge .String ());_bdaee ,_aeccea :=_fee .TraceToDirectObject (_edbge .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fee .PdfObjectArray );if !_aeccea {_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bdaee .Len ()< 0||_bdaee .Len ()%2!=0{_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_beg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fdded ,_bfdf :=_bdaee .ToFloat64Array ();if _bfdf !=nil {return nil ,_bfdf ;};_fadae .Domain =_fdded ;_bdaee ,_aeccea =_fee .TraceToDirectObject (_edbge .Get ("\u0052\u0061\u006eg\u0065")).(*_fee .PdfObjectArray );if _aeccea {if _bdaee .Len ()< 0||_bdaee .Len ()%2!=0{return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fceg ,_febce :=_bdaee .ToFloat64Array ();if _febce !=nil {return nil ,_febce ;};_fadae .Range =_fceg ;};_bdaee ,_aeccea =_fee .TraceToDirectObject (_edbge .Get ("\u0043\u0030")).(*_fee .PdfObjectArray );if _aeccea {_eabbb ,_acacf :=_bdaee .ToFloat64Array ();if _acacf !=nil {return nil ,_acacf ;};_fadae .C0 =_eabbb ;};_bdaee ,_aeccea =_fee .TraceToDirectObject (_edbge .Get ("\u0043\u0031")).(*_fee .PdfObjectArray );if _aeccea {_geff ,_degaa :=_bdaee .ToFloat64Array ();if _degaa !=nil {return nil ,_degaa ;};_fadae .C1 =_geff ;};if len (_fadae .C0 )!=len (_fadae .C1 ){_adc .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_fee .ErrRangeError ;};N ,_bfdf :=_fee .GetNumberAsFloat (_fee .TraceToDirectObject (_edbge .Get ("\u004e")));if _bfdf !=nil {_adc .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_edbge .String ());return nil ,_bfdf ;};_fadae .N =N ;return _fadae ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gbde *PdfActionGoTo3DView )ToPdfObject ()_fee .PdfObject {_gbde .PdfAction .ToPdfObject ();_fac :=_gbde ._fg ;_faf :=_fac .PdfObject .(*_fee .PdfObjectDictionary );_faf .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeGoTo3DView )));_faf .SetIfNotNil ("\u0054\u0041",_gbde .TA );_faf .SetIfNotNil ("\u0056",_gbde .V );return _fac ;};var _gbabc ="";func (_age *PdfReader )newPdfActionLaunchFromDict (_ggeb *_fee .PdfObjectDictionary )(*PdfActionLaunch ,error ){_ggfd ,_gcgb :=_dcg (_ggeb .Get ("\u0046"));if _gcgb !=nil {return nil ,_gcgb ;};return &PdfActionLaunch {Win :_ggeb .Get ("\u0057\u0069\u006e"),Mac :_ggeb .Get ("\u004d\u0061\u0063"),Unix :_ggeb .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ggeb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ggfd },nil ;};func _gdfde (_egce string )map[string ]string {_aaffc :=_cdbb .Split (_egce ,-1);_fgdc :=map[string ]string {};for _ ,_febea :=range _aaffc {_eeac :=_fcdb .FindStringSubmatch (_febea );if _eeac ==nil {continue ;};_edaa ,_dcfff :=_eeac [1],_eeac [2];_fgdc [_edaa ]=_dcfff ;};return _fgdc ;};func (_fecea *DSS )addCerts (_debb [][]byte )([]*_fee .PdfObjectStream ,error ){return _fecea .add (&_fecea .Certs ,_fecea ._fbcf ,_debb );};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cdgcfc *XObjectForm )SetContentStream (content []byte ,encoder _fee .StreamEncoder )error {_dbfe :=content ;if encoder ==nil {if _cdgcfc .Filter !=nil {encoder =_cdgcfc .Filter ;}else {encoder =_fee .NewRawEncoder ();};};_edfbd ,_dbfec :=encoder .EncodeBytes (_dbfe );if _dbfec !=nil {return _dbfec ;};_dbfe =_edfbd ;_cdgcfc .Stream =_dbfe ;_cdgcfc .Filter =encoder ;return nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ccecc pdfCIDFontType0 )GetRuneMetrics (r rune )(_cg .CharMetrics ,bool ){return _cg .CharMetrics {Wx :_ccecc ._cbgg },true ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_babdc []byte ;_gbaa []float64 ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_aca :=NewPdfAnnotation ();_bdce :=&PdfAnnotationLine {};_bdce .PdfAnnotation =_aca ;_bdce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aca .SetContext (_bdce );return _bdce ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_fagfd *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efae :=vals [0];if _efae < 0.0||_efae > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfda :=vals [1];if _bfda < 0.0||_bfda > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfcae :=vals [2];if _bfcae < 0.0||_bfcae > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gebb :=NewPdfColorDeviceRGB (_efae ,_bfda ,_bfcae );return _gebb ,nil ;};

// String returns a string that describes `base`.
func (_fbfe fontCommon )String ()string {return _ba .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_fbfe .coreString ());};func (_aeggde *PdfReader )lookupPageByObject (_dbde _fee .PdfObject )(*PdfPage ,error ){return nil ,_beg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_abfa *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ecfee ,_fece :=color .(*PdfColorDeviceRGB );if !_fece {_adc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _ecfee ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_egdg *PdfFont )CharcodesToUnicode (charcodes []_de .CharCode )[]rune {_dddd ,_ ,_ :=_egdg .CharcodesToUnicodeWithStats (charcodes );return _dddd ;};func _eaca (_gbff *PdfPage )map[_fee .PdfObjectName ]_fee .PdfObject {_fad :=make (map[_fee .PdfObjectName ]_fee .PdfObject );if _gbff .Resources ==nil {return _fad ;};if _gbff .Resources .Font !=nil {if _fafc ,_cecd :=_fee .GetDict (_gbff .Resources .Font );_cecd {for _ ,_fedg :=range _fafc .Keys (){_fad [_fedg ]=_fafc .Get (_fedg );};};};if _gbff .Resources .ExtGState !=nil {if _gecf ,_gfaf :=_fee .GetDict (_gbff .Resources .ExtGState );_gfaf {for _ ,_abaf :=range _gecf .Keys (){_fad [_abaf ]=_gecf .Get (_abaf );};};};if _gbff .Resources .XObject !=nil {if _cdbd ,_caff :=_fee .GetDict (_gbff .Resources .XObject );_caff {for _ ,_cagbg :=range _cdbd .Keys (){_fad [_cagbg ]=_cdbd .Get (_cagbg );};};};if _gbff .Resources .Pattern !=nil {if _ceab ,_efbdf :=_fee .GetDict (_gbff .Resources .Pattern );_efbdf {for _ ,_dag :=range _ceab .Keys (){_fad [_dag ]=_ceab .Get (_dag );};};};if _gbff .Resources .Shading !=nil {if _bccfe ,_aaab :=_fee .GetDict (_gbff .Resources .Shading );_aaab {for _ ,_cfbeg :=range _bccfe .Keys (){_fad [_cfbeg ]=_bccfe .Get (_cfbeg );};};};if _gbff .Resources .ProcSet !=nil {if _cgfa ,_dddcc :=_fee .GetDict (_gbff .Resources .ProcSet );_dddcc {for _ ,_dgac :=range _cgfa .Keys (){_fad [_dgac ]=_cgfa .Get (_dgac );};};};if _gbff .Resources .Properties !=nil {if _cgbc ,_ddag :=_fee .GetDict (_gbff .Resources .Properties );_ddag {for _ ,_eaedg :=range _cgbc .Keys (){_fad [_eaedg ]=_cgbc .Get (_eaedg );};};};return _fad ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gada *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _beg .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_feba :=field .V ;if _feba ==nil {return _beg .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gae :=pageNum -1;if _gae < 0||_gae > len (_gada ._facda )-1{return _ba .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_eccf :=_gada .Reader .PageList [_gae ];field .P =_eccf .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_fee .MakeString (_ba .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_eccf .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _gada ._cbcd ==_gada ._agaa .AcroForm {_gada ._cbcd =_gada .Reader .AcroForm ;};_aaef :=_gada ._cbcd ;if _aaef ==nil {_aaef =NewPdfAcroForm ();};_aaef .SigFlags =_fee .MakeInteger (3);_eaac :=append (_aaef .AllFields (),field .PdfField );_aaef .Fields =&_eaac ;_gada .ReplaceAcroForm (_aaef );_gada .UpdatePage (_eccf );_gada ._facda [_gae ]=_eccf ;return nil ;};func (_cddf *PdfReader )loadAction (_gabg _fee .PdfObject )(*PdfAction ,error ){if _aba ,_egdd :=_fee .GetIndirect (_gabg );_egdd {_adff ,_acfe :=_cddf .newPdfActionFromIndirectObject (_aba );if _acfe !=nil {return nil ,_acfe ;};return _adff ,nil ;}else if !_fee .IsNullObject (_gabg ){return nil ,_beg .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{_cggeb *_fe .OCSPClient ;_geecf *_fe .CRLClient ;_fgegg *_fe .CertClient ;_eded *PdfAppender ;_becc *DSS ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_gagde =keywords };func (_bebd *PdfReader )newPdfAnnotationPolyLineFromDict (_gbc *_fee .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_cfdd :=PdfAnnotationPolyLine {};_bgb ,_becf :=_bebd .newPdfAnnotationMarkupFromDict (_gbc );if _becf !=nil {return nil ,_becf ;};_cfdd .PdfAnnotationMarkup =_bgb ;_cfdd .Vertices =_gbc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cfdd .LE =_gbc .Get ("\u004c\u0045");_cfdd .BS =_gbc .Get ("\u0042\u0053");_cfdd .IC =_gbc .Get ("\u0049\u0043");_cfdd .BE =_gbc .Get ("\u0042\u0045");_cfdd .IT =_gbc .Get ("\u0049\u0054");_cfdd .Measure =_gbc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cfdd ,nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_cdbba byte )byte ;

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fadaa *PdfOutlineItem )ToPdfObject ()_fee .PdfObject {_ddadg :=_fadaa ._cgdg ;_cdbdg :=_ddadg .PdfObject .(*_fee .PdfObjectDictionary );_cdbdg .Set ("\u0054\u0069\u0074l\u0065",_fadaa .Title );if _fadaa .A !=nil {_cdbdg .Set ("\u0041",_fadaa .A );};if _fdffg :=_cdbdg .Get ("\u0053\u0045");_fdffg !=nil {_cdbdg .Remove ("\u0053\u0045");};if _fadaa .C !=nil {_cdbdg .Set ("\u0043",_fadaa .C );};if _fadaa .Dest !=nil {_cdbdg .Set ("\u0044\u0065\u0073\u0074",_fadaa .Dest );};if _fadaa .F !=nil {_cdbdg .Set ("\u0046",_fadaa .F );};if _fadaa .Count !=nil {_cdbdg .Set ("\u0043\u006f\u0075n\u0074",_fee .MakeInteger (*_fadaa .Count ));};if _fadaa .Next !=nil {_cdbdg .Set ("\u004e\u0065\u0078\u0074",_fadaa .Next .ToPdfObject ());};if _fadaa .First !=nil {_cdbdg .Set ("\u0046\u0069\u0072s\u0074",_fadaa .First .ToPdfObject ());};if _fadaa .Prev !=nil {_cdbdg .Set ("\u0050\u0072\u0065\u0076",_fadaa .Prev .GetContext ().GetContainingPdfObject ());};if _fadaa .Last !=nil {_cdbdg .Set ("\u004c\u0061\u0073\u0074",_fadaa .Last .GetContext ().GetContainingPdfObject ());};if _fadaa .Parent !=nil {_cdbdg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fadaa .Parent .GetContext ().GetContainingPdfObject ());};return _ddadg ;};func (_dfa *PdfAnnotation )String ()string {_cdda :="";_fag ,_cgaf :=_dfa .ToPdfObject ().(*_fee .PdfIndirectObject );if _cgaf {_cdda =_ba .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dfa ._gbfd ,_fag .PdfObject .String ());};return _cdda ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _fee .PdfObject ;RichMediaContent _fee .PdfObject ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_bgdg *PdfPage )GetContainingPdfObject ()_fee .PdfObject {return _bgdg ._abdg };type pdfFontSimple struct{fontCommon ;_bafdf *_fee .PdfIndirectObject ;_bdff map[_de .CharCode ]float64 ;_agcc _de .TextEncoder ;_bbged _de .TextEncoder ;_gefd *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _fee .PdfObject ;LastChar _fee .PdfObject ;Widths _fee .PdfObject ;Encoding _fee .PdfObject ;_dgfgf map[rune ]_cg .CharMetrics ;};

// SetDecode sets the decode image float slice.
func (_efde *Image )SetDecode (decode []float64 ){_efde ._gbaa =decode };

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_ddccd :=PdfColorCalGray (grayVal );return &_ddccd ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func _edabc (_caddg *_ffg .ImageBase )(_dbbc Image ){_dbbc .Width =int64 (_caddg .Width );_dbbc .Height =int64 (_caddg .Height );_dbbc .BitsPerComponent =int64 (_caddg .BitsPerComponent );_dbbc .ColorComponents =_caddg .ColorComponents ;_dbbc .Data =_caddg .Data ;_dbbc ._gbaa =_caddg .Decode ;_dbbc ._babdc =_caddg .Alpha ;return _dbbc ;};

// Subtype returns the font's "Subtype" field.
func (_dfce *PdfFont )Subtype ()string {_ggece :=_dfce .baseFields ()._agbcd ;if _ffdg ,_ffgca :=_dfce ._ddaad .(*pdfFontType0 );_ffgca {_ggece =_ggece +"\u003a"+_ffdg .DescendantFont .Subtype ();};return _ggece ;};func _gcde (_ffdede _fee .PdfObject )(*PdfPattern ,error ){_bcbgd :=&PdfPattern {};var _abccc *_fee .PdfObjectDictionary ;if _ddae ,_dgecb :=_fee .GetIndirect (_ffdede );_dgecb {_bcbgd ._aege =_ddae ;_cedeb ,_gadf :=_ddae .PdfObject .(*_fee .PdfObjectDictionary );if !_gadf {_adc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_ddae .PdfObject );return nil ,_fee .ErrTypeError ;};_abccc =_cedeb ;}else if _feca ,_bccae :=_fee .GetStream (_ffdede );_bccae {_bcbgd ._aege =_feca ;_abccc =_feca .PdfObjectDictionary ;}else {_adc .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ffdede );return nil ,_fee .ErrTypeError ;};_eaefc :=_abccc .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _eaefc ==nil {_adc .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_bcaca ,_dgega :=_eaefc .(*_fee .PdfObjectInteger );if !_dgega {_adc .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eaefc );return nil ,_fee .ErrTypeError ;};if *_bcaca !=1&&*_bcaca !=2{_adc .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_bcaca );return nil ,_fee .ErrRangeError ;};_bcbgd .PatternType =int64 (*_bcaca );switch *_bcaca {case 1:_acadc ,_edeg :=_eaecf (_abccc );if _edeg !=nil {return nil ,_edeg ;};_acadc .PdfPattern =_bcbgd ;_bcbgd ._egef =_acadc ;return _bcbgd ,nil ;case 2:_dbgdg ,_cbfbd :=_gccgf (_abccc );if _cbfbd !=nil {return nil ,_cbfbd ;};_dbgdg .PdfPattern =_bcbgd ;_bcbgd ._egef =_dbgdg ;return _bcbgd ,nil ;};return nil ,_beg .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// ToPdfObject converts the font to a PDF representation.
func (_ecd *pdfFontType0 )ToPdfObject ()_fee .PdfObject {if _ecd ._fceff ==nil {_ecd ._fceff =&_fee .PdfIndirectObject {};};_efcgd :=_ecd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_ecd ._fceff .PdfObject =_efcgd ;if _ecd .Encoding !=nil {_efcgd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ecd .Encoding );}else if _ecd ._daad !=nil {_efcgd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ecd ._daad .ToPdfObject ());};if _ecd .DescendantFont !=nil {_efcgd .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_fee .MakeArray (_ecd .DescendantFont .ToPdfObject ()));};return _ecd ._fceff ;};

// AllFields returns a flattened list of all fields in the form.
func (_befea *PdfAcroForm )AllFields ()[]*PdfField {if _befea ==nil {return nil ;};var _dgdb []*PdfField ;if _befea .Fields !=nil {for _ ,_gfef :=range *_befea .Fields {_dgdb =append (_dgdb ,_cedba (_gfef )...);};};return _dgdb ;};func _edacd (_fdga *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_fdga }};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_edagg :=&PdfColorspaceDeviceN {};return _edagg ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ggcb *PdfColorspaceSpecialIndexed )ToPdfObject ()_fee .PdfObject {_fggbb :=_fee .MakeArray (_fee .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_fggbb .Append (_ggcb .Base .ToPdfObject ());_fggbb .Append (_fee .MakeInteger (int64 (_ggcb .HiVal )));_fggbb .Append (_ggcb .Lookup );if _ggcb ._gdbc !=nil {_ggcb ._gdbc .PdfObject =_fggbb ;return _ggcb ._gdbc ;};return _fggbb ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_bc :=NewPdfAction ();_cb :=&PdfActionHide {};_cb .PdfAction =_bc ;_bc .SetContext (_cb );return _cb ;};

// ToPdfObject implements interface PdfModel.
func (_dcc *PdfActionNamed )ToPdfObject ()_fee .PdfObject {_dcc .PdfAction .ToPdfObject ();_ag :=_dcc ._fg ;_babc :=_ag .PdfObject .(*_fee .PdfObjectDictionary );_babc .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeNamed )));_babc .SetIfNotNil ("\u004e",_dcc .N );return _ag ;};

// G returns the value of the green component of the color.
func (_cfdf *PdfColorDeviceRGB )G ()float64 {return float64 (_cfdf [1])};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eabg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_adc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbabef :=[]float64 {0.0};if _eabg .C0 !=nil {_cbabef =_eabg .C0 ;};_bffe :=[]float64 {1.0};if _eabg .C1 !=nil {_bffe =_eabg .C1 ;};var _dbcc []float64 ;for _gagf :=0;_gagf < len (_cbabef );_gagf ++{_dbca :=_cbabef [_gagf ]+_eba .Pow (x [0],_eabg .N )*(_bffe [_gagf ]-_cbabef [_gagf ]);_dbcc =append (_dbcc ,_dbca );};return _dbcc ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_fafa *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_bedga :=_ef .NewReader (img .getBase ());_bagg :=_ffg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bgca :=_ef .NewWriter (_bagg );_faec :=_eba .Pow (2,float64 (img .BitsPerComponent ))-1;_bbdb :=make ([]uint32 ,3);var (_ggec error ;_ccda ,_bfgf ,_cccd ,_dbdcc ,_afgd ,_dabbe float64 ;);for {_ggec =_bedga .ReadSamples (_bbdb );if _ggec ==_be .EOF {break ;}else if _ggec !=nil {return img ,_ggec ;};_ccda =float64 (_bbdb [0])/_faec ;_bfgf =float64 (_bbdb [1])/_faec ;_cccd =float64 (_bbdb [2])/_faec ;_dbdcc =_fafa .Matrix [0]*_eba .Pow (_ccda ,_fafa .Gamma [0])+_fafa .Matrix [3]*_eba .Pow (_bfgf ,_fafa .Gamma [1])+_fafa .Matrix [6]*_eba .Pow (_cccd ,_fafa .Gamma [2]);_afgd =_fafa .Matrix [1]*_eba .Pow (_ccda ,_fafa .Gamma [0])+_fafa .Matrix [4]*_eba .Pow (_bfgf ,_fafa .Gamma [1])+_fafa .Matrix [7]*_eba .Pow (_cccd ,_fafa .Gamma [2]);_dabbe =_fafa .Matrix [2]*_eba .Pow (_ccda ,_fafa .Gamma [0])+_fafa .Matrix [5]*_eba .Pow (_bfgf ,_fafa .Gamma [1])+_fafa .Matrix [8]*_eba .Pow (_cccd ,_fafa .Gamma [2]);_ccda =3.240479*_dbdcc +-1.537150*_afgd +-0.498535*_dabbe ;_bfgf =-0.969256*_dbdcc +1.875992*_afgd +0.041556*_dabbe ;_cccd =0.055648*_dbdcc +-0.204043*_afgd +1.057311*_dabbe ;_ccda =_eba .Min (_eba .Max (_ccda ,0),1.0);_bfgf =_eba .Min (_eba .Max (_bfgf ,0),1.0);_cccd =_eba .Min (_eba .Max (_cccd ,0),1.0);_bbdb [0]=uint32 (_ccda *_faec );_bbdb [1]=uint32 (_bfgf *_faec );_bbdb [2]=uint32 (_cccd *_faec );if _ggec =_bgca .WriteSamples (_bbdb );_ggec !=nil {return img ,_ggec ;};};return _edabc (&_bagg ),nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ggba *PdfField )IsTerminal ()bool {return len (_ggba .Kids )==0};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_gaege *PdfWriter )SetOptimizer (optimizer Optimizer ){_gaege ._adgb =optimizer };

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_bdcag *PdfShading )GetContainingPdfObject ()_fee .PdfObject {return _bdcag ._gbadg };

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_eaebd DefaultImageHandler )Read (reader _be .Reader )(*Image ,error ){_decd ,_ ,_dcddbe :=_cd .Decode (reader );if _dcddbe !=nil {_adc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_dcddbe );return nil ,_dcddbe ;};return _eaebd .NewImageFromGoImage (_decd );};func _ceeba (_cbbg *_fee .PdfObjectDictionary ,_agbd *fontCommon )(*pdfCIDFontType2 ,error ){if _agbd ._agbcd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_adc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_agbd );return nil ,_fee .ErrRangeError ;};_aggef :=_abcc (_agbd );_gfce ,_faegd :=_fee .GetDict (_cbbg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_faegd {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_agbd );return nil ,ErrRequiredAttributeMissing ;};_aggef .CIDSystemInfo =_gfce ;_aggef .DW =_cbbg .Get ("\u0044\u0057");_aggef .W =_cbbg .Get ("\u0057");_aggef .DW2 =_cbbg .Get ("\u0044\u0057\u0032");_aggef .W2 =_cbbg .Get ("\u0057\u0032");_aggef .CIDToGIDMap =_cbbg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_aggef ._gcea =1000.0;if _aceb ,_ggdcg :=_fee .GetNumberAsFloat (_aggef .DW );_ggdcg ==nil {_aggef ._gcea =_aceb ;};_begga ,_adcfa :=_ddgf (_aggef .W );if _adcfa !=nil {return nil ,_adcfa ;};if _begga ==nil {_begga =map[_de .CharCode ]float64 {};};_aggef ._bbeg =_begga ;return _aggef ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_daf *PdfAction )GetContext ()PdfModel {if _daf ==nil {return nil ;};return _daf ._eee ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_fbdb *PdfAppender )UpdatePage (page *PdfPage ){_fbdb .updateObjectsDeep (page .ToPdfObject (),nil )};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_fee .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_fee .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_fee .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_fee .PdfObjectBool ;_gfae PdfModel ;_gbadg _fee .PdfObject ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_cfac *PdfFieldChoice )ToPdfObject ()_fee .PdfObject {_cfac .PdfField .ToPdfObject ();_feed :=_cfac ._bdcdc ;_abfe :=_feed .PdfObject .(*_fee .PdfObjectDictionary );_abfe .Set ("\u0046\u0054",_fee .MakeName ("\u0043\u0068"));if _cfac .Opt !=nil {_abfe .Set ("\u004f\u0070\u0074",_cfac .Opt );};if _cfac .TI !=nil {_abfe .Set ("\u0054\u0049",_cfac .TI );};if _cfac .I !=nil {_abfe .Set ("\u0049",_cfac .I );};return _feed ;};

// RemovePage removes a page by number.
func (_bggb *PdfAppender )RemovePage (pageNum int ){_ebac :=pageNum -1;_bggb ._facda =append (_bggb ._facda [0:_ebac ],_bggb ._facda [pageNum :]...);};

// Add appends an outline item as a child of the current outline item.
func (_gfbfd *OutlineItem )Add (item *OutlineItem ){_gfbfd .Entries =append (_gfbfd .Entries ,item )};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_aedd *PdfFieldButton )IsPush ()bool {return _aedd .GetType ()==ButtonTypePush };func (_ddc *PdfReader )newPdfActionThreadFromDict (_eggb *_fee .PdfObjectDictionary )(*PdfActionThread ,error ){_gcgg ,_aed :=_dcg (_eggb .Get ("\u0046"));if _aed !=nil {return nil ,_aed ;};return &PdfActionThread {D :_eggb .Get ("\u0044"),B :_eggb .Get ("\u0042"),F :_gcgg },nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_bff :=NewPdfAction ();_egg :=&PdfActionSubmitForm {};_egg .PdfAction =_bff ;_bff .SetContext (_egg );return _egg ;};func _ddgcb (_cedee _fee .PdfObject )(PdfFunction ,error ){_cedee =_fee .ResolveReference (_cedee );if _aagd ,_babdf :=_cedee .(*_fee .PdfObjectStream );_babdf {_edggf :=_aagd .PdfObjectDictionary ;_befac ,_ebfc :=_edggf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fee .PdfObjectInteger );if !_ebfc {_adc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_beg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_befac ==0{return _acaa (_aagd );}else if *_befac ==4{return _bcceb (_aagd );}else {return nil ,_beg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bedc ,_gebfb :=_cedee .(*_fee .PdfIndirectObject );_gebfb {_ddab ,_ccfcg :=_bedc .PdfObject .(*_fee .PdfObjectDictionary );if !_ccfcg {_adc .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_beg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_dddbe ,_ccfcg :=_ddab .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fee .PdfObjectInteger );if !_ccfcg {_adc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_beg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dddbe ==2{return _dfcgd (_bedc );}else if *_dddbe ==3{return _ggacg (_bedc );}else {return nil ,_beg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _aedg ,_afcec :=_cedee .(*_fee .PdfObjectDictionary );_afcec {_dfcf ,_gefde :=_aedg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fee .PdfObjectInteger );if !_gefde {_adc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_beg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dfcf ==2{return _dfcgd (_aedg );}else if *_dfcf ==3{return _ggacg (_aedg );}else {return nil ,_beg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_adc .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_cedee );return nil ,_beg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_cfbef *_fee .PdfIndirectObject ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ceff *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_beg .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_gade ,_ggbd :=_ffg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._babdc ,img ._gbaa );if _ggbd !=nil {return img ,_ggbd ;};_adac ,_ggbd :=_ffg .GrayConverter .Convert (_gade );if _ggbd !=nil {return img ,_ggbd ;};return _edabc (_adac .Base ()),nil ;};func _ddad (_dcddf *[]*PdfField ,_agcf FieldFilterFunc ,_gccaf bool )[]*PdfField {if _dcddf ==nil {return nil ;};_fdab :=*_dcddf ;if len (*_dcddf )==0{return nil ;};_eecba :=_fdab [:0];if _agcf ==nil {_agcf =func (*PdfField )bool {return true };};var _dcedf []*PdfField ;for _ ,_fdgd :=range _fdab {_bacgbd :=_agcf (_fdgd );if _bacgbd {_dcedf =append (_dcedf ,_fdgd );if len (_fdgd .Kids )> 0{_dcedf =append (_dcedf ,_ddad (&_fdgd .Kids ,_agcf ,_gccaf )...);};};if !_gccaf ||!_bacgbd ||len (_fdgd .Kids )> 0{_eecba =append (_eecba ,_fdgd );};};*_dcddf =_eecba ;return _dcedf ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _fee .PdfObject ;Movie _fee .PdfObject ;A _fee .PdfObject ;};

// Initialize initializes the PdfSignature.
func (_fbdda *PdfSignature )Initialize ()error {if _fbdda .Handler ==nil {return _beg .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _fbdda .Handler .InitSignature (_fbdda );};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _fee .PdfObject ;FS _fee .PdfObject ;F _fee .PdfObject ;UF _fee .PdfObject ;DOS _fee .PdfObject ;Mac _fee .PdfObject ;Unix _fee .PdfObject ;ID _fee .PdfObject ;V _fee .PdfObject ;EF _fee .PdfObject ;RF _fee .PdfObject ;Desc _fee .PdfObject ;CI _fee .PdfObject ;_acfd _fee .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ceca *PdfAnnotationProjection )ToPdfObject ()_fee .PdfObject {_ceca .PdfAnnotation .ToPdfObject ();_ead :=_ceca ._gdc ;_fbae :=_ead .PdfObject .(*_fee .PdfObjectDictionary );_ceca .PdfAnnotationMarkup .appendToPdfDictionary (_fbae );return _ead ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_daae *_fee .PdfParser ;_cadea _fee .PdfObject ;_aeff *_fee .PdfIndirectObject ;_fcadbf *_fee .PdfObjectDictionary ;_aagc []*_fee .PdfIndirectObject ;PageList []*PdfPage ;_bgaab int ;_egdgd *_fee .PdfObjectDictionary ;_added *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;DSS *DSS ;_abgg *modelManager ;_cgff bool ;_ebag map[_fee .PdfObject ]struct{};_acgec _be .ReadSeeker ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_bdcg :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_bdcg ;};var _cefg ="";

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_fefgc *Image )ToJBIG2Image ()(*_fee .JBIG2Image ,error ){_bgfgf ,_cdbbg :=_fefgc .ToGoImage ();if _cdbbg !=nil {return nil ,_cdbbg ;};return _fee .GoImageToJBIG2 (_bgfgf ,_fee .JB2ImageAutoThreshold );};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_daecg *XObjectImage )SetFilter (encoder _fee .StreamEncoder )error {_cgcc :=_daecg .Stream ;_eeff ,_eggcd :=_daecg .Filter .DecodeBytes (_cgcc );if _eggcd !=nil {return _eggcd ;};_daecg .Filter =encoder ;encoder .UpdateParams (_daecg .getParamsDict ());_cgcc ,_eggcd =encoder .EncodeBytes (_eeff );if _eggcd !=nil {return _eggcd ;};_daecg .Stream =_cgcc ;return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acgee *PdfShadingType6 )ToPdfObject ()_fee .PdfObject {_acgee .PdfShading .ToPdfObject ();_fbbafb ,_eceg :=_acgee .getShadingDict ();if _eceg !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _acgee .BitsPerCoordinate !=nil {_fbbafb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_acgee .BitsPerCoordinate );};if _acgee .BitsPerComponent !=nil {_fbbafb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_acgee .BitsPerComponent );};if _acgee .BitsPerFlag !=nil {_fbbafb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_acgee .BitsPerFlag );};if _acgee .Decode !=nil {_fbbafb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_acgee .Decode );};if _acgee .Function !=nil {if len (_acgee .Function )==1{_fbbafb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acgee .Function [0].ToPdfObject ());}else {_gfdag :=_fee .MakeArray ();for _ ,_gefa :=range _acgee .Function {_gfdag .Append (_gefa .ToPdfObject ());};_fbbafb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfdag );};};return _acgee ._gbadg ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_agge *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_aae :=NewPdfAnnotation ();_bfaf :=&PdfAnnotationSound {};_bfaf .PdfAnnotation =_aae ;_bfaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aae .SetContext (_bfaf );return _bfaf ;};

// ToPdfObject implements interface PdfModel.
func (_dbba *PdfAnnotationCaret )ToPdfObject ()_fee .PdfObject {_dbba .PdfAnnotation .ToPdfObject ();_cgba :=_dbba ._gdc ;_afcbg :=_cgba .PdfObject .(*_fee .PdfObjectDictionary );_dbba .PdfAnnotationMarkup .appendToPdfDictionary (_afcbg );_afcbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0043\u0061\u0072e\u0074"));_afcbg .SetIfNotNil ("\u0052\u0044",_dbba .RD );_afcbg .SetIfNotNil ("\u0053\u0079",_dbba .Sy );return _cgba ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_fcbe *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _fcbe .baseFields ()._dedcg !=nil {return _fcbe .baseFields ()._dedcg ;};if _deea :=_fcbe ._ddaad .getFontDescriptor ();_deea !=nil {return _deea ;};_adc .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_fcbe );return nil ;};

// String returns a string that describes `font`.
func (_eebd *PdfFont )String ()string {_cfcc :="";if _eebd ._ddaad .Encoder ()!=nil {_cfcc =_eebd ._ddaad .Encoder ().String ();};return _ba .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_eebd ._ddaad ,_eebd .baseFields ().coreString (),_cfcc );};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_baafe ,_cdaf :=NewStandard14Font (basefont );if _cdaf !=nil {panic (_ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _baafe ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _fee .PdfObject ;MK _fee .PdfObject ;A _fee .PdfObject ;AA _fee .PdfObject ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_adfg *PdfField )FullName ()(string ,error ){var _egbf _ed .Buffer ;_cbb :=[]string {};if _adfg .T !=nil {_cbb =append (_cbb ,_adfg .T .Decoded ());};_cfgd :=map[*PdfField ]bool {};_cfgd [_adfg ]=true ;_bbdd :=_adfg .Parent ;for _bbdd !=nil {if _ ,_agbg :=_cfgd [_bbdd ];_agbg {return _egbf .String (),_beg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bbdd .T ==nil {return _egbf .String (),_beg .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_cbb =append (_cbb ,_bbdd .T .Decoded ());_cfgd [_bbdd ]=true ;_bbdd =_bbdd .Parent ;};for _gcdg :=len (_cbb )-1;_gcdg >=0;_gcdg --{_egbf .WriteString (_cbb [_gcdg ]);if _gcdg > 0{_egbf .WriteString ("\u002e");};};return _egbf .String (),nil ;};func (_afcea *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_gaa :=NewPdfAnnotation ();_dfac :=&PdfAnnotationCaret {};_dfac .PdfAnnotation =_gaa ;_dfac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gaa .SetContext (_dfac );return _dfac ;};func (_dada *PdfReader )newPdfAnnotationFreeTextFromDict (_ccf *_fee .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_dbg :=PdfAnnotationFreeText {};_fcga ,_gca :=_dada .newPdfAnnotationMarkupFromDict (_ccf );if _gca !=nil {return nil ,_gca ;};_dbg .PdfAnnotationMarkup =_fcga ;_dbg .DA =_ccf .Get ("\u0044\u0041");_dbg .Q =_ccf .Get ("\u0051");_dbg .RC =_ccf .Get ("\u0052\u0043");_dbg .DS =_ccf .Get ("\u0044\u0053");_dbg .CL =_ccf .Get ("\u0043\u004c");_dbg .IT =_ccf .Get ("\u0049\u0054");_dbg .BE =_ccf .Get ("\u0042\u0045");_dbg .RD =_ccf .Get ("\u0052\u0044");_dbg .BS =_ccf .Get ("\u0042\u0053");_dbg .LE =_ccf .Get ("\u004c\u0045");return &_dbg ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_dfeab *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_dfeab .GetNumComponents (){return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dddg ,_dfaa :=_dfeab .TintTransform .Evaluate (vals );if _dfaa !=nil {return nil ,_dfaa ;};_agac ,_dfaa :=_dfeab .AlternateSpace .ColorFromFloats (_dddg );if _dfaa !=nil {return nil ,_dfaa ;};return _agac ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_eea :=&PdfBorderStyle {};return _eea };

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fcfee *PdfPageResources )GetShadingByName (keyName _fee .PdfObjectName )(*PdfShading ,bool ){if _fcfee .Shading ==nil {return nil ,false ;};_eeae ,_abae :=_fee .TraceToDirectObject (_fcfee .Shading ).(*_fee .PdfObjectDictionary );if !_abae {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcfee .Shading );return nil ,false ;};if _gbffd :=_eeae .Get (keyName );_gbffd !=nil {_gafc ,_ecggf :=_bbefd (_gbffd );if _ecggf !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_ecggf );return nil ,false ;};return _gafc ,true ;};return nil ,false ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_fee .PdfObjectStream )(*XObjectImage ,error ){_dbcgg :=&XObjectImage {};_dbcgg ._bcaff =stream ;_cdegd :=*(stream .PdfObjectDictionary );_gefaa ,_cbfca :=_fee .NewEncoderFromStream (stream );if _cbfca !=nil {return nil ,_cbfca ;};_dbcgg .Filter =_gefaa ;if _fffaa :=_fee .TraceToDirectObject (_cdegd .Get ("\u0057\u0069\u0064t\u0068"));_fffaa !=nil {_bfbe ,_faed :=_fffaa .(*_fee .PdfObjectInteger );if !_faed {return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_gbbee :=int64 (*_bfbe );_dbcgg .Width =&_gbbee ;}else {return nil ,_beg .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ebgfe :=_fee .TraceToDirectObject (_cdegd .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_ebgfe !=nil {_ddage ,_gdbbb :=_ebgfe .(*_fee .PdfObjectInteger );if !_gdbbb {return nil ,_beg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bafgad :=int64 (*_ddage );_dbcgg .Height =&_bafgad ;}else {return nil ,_beg .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _adfag :=_fee .TraceToDirectObject (_cdegd .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_adfag !=nil {_fdbag ,_daada :=NewPdfColorspaceFromPdfObject (_adfag );if _daada !=nil {return nil ,_daada ;};_dbcgg .ColorSpace =_fdbag ;}else {_adc .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_dbcgg .ColorSpace =NewPdfColorspaceDeviceGray ();};if _afbgbf :=_fee .TraceToDirectObject (_cdegd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_afbgbf !=nil {_dcefd ,_cfbcd :=_afbgbf .(*_fee .PdfObjectInteger );if !_cfbcd {return nil ,_beg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ccebb :=int64 (*_dcefd );_dbcgg .BitsPerComponent =&_ccebb ;};_dbcgg .Intent =_cdegd .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_dbcgg .ImageMask =_cdegd .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_dbcgg .Mask =_cdegd .Get ("\u004d\u0061\u0073\u006b");_dbcgg .Decode =_cdegd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_dbcgg .Interpolate =_cdegd .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_dbcgg .Alternatives =_cdegd .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_dbcgg .SMask =_cdegd .Get ("\u0053\u004d\u0061s\u006b");_dbcgg .SMaskInData =_cdegd .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_dbcgg .Matte =_cdegd .Get ("\u004d\u0061\u0074t\u0065");_dbcgg .Name =_cdegd .Get ("\u004e\u0061\u006d\u0065");_dbcgg .StructParent =_cdegd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dbcgg .ID =_cdegd .Get ("\u0049\u0044");_dbcgg .OPI =_cdegd .Get ("\u004f\u0050\u0049");_dbcgg .Metadata =_cdegd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dbcgg .OC =_cdegd .Get ("\u004f\u0043");_dbcgg .Stream =stream .Stream ;return _dbcgg ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_ebcd *OutlineItem )Insert (index uint ,item *OutlineItem ){_fagfa :=uint (len (_ebcd .Entries ));if index > _fagfa {index =_fagfa ;};_ebcd .Entries =append (_ebcd .Entries [:index ],append ([]*OutlineItem {item },_ebcd .Entries [index :]...)...);};

// ToPdfObject implements interface PdfModel.
func (_afbd *PdfAction )ToPdfObject ()_fee .PdfObject {_ga :=_afbd ._fg ;_fbd :=_ga .PdfObject .(*_fee .PdfObjectDictionary );_fbd .Clear ();_fbd .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_fbd .SetIfNotNil ("\u0053",_afbd .S );_fbd .SetIfNotNil ("\u004e\u0065\u0078\u0074",_afbd .Next );return _ga ;};func _bbec (_dccdc _fee .PdfObject )(*PdfColorspaceCalGray ,error ){_ebcf :=NewPdfColorspaceCalGray ();if _cddagf ,_fafb :=_dccdc .(*_fee .PdfIndirectObject );_fafb {_ebcf ._abab =_cddagf ;};_dccdc =_fee .TraceToDirectObject (_dccdc );_degf ,_aadd :=_dccdc .(*_fee .PdfObjectArray );if !_aadd {return nil ,_ba .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _degf .Len ()!=2{return nil ,_ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_dccdc =_fee .TraceToDirectObject (_degf .Get (0));_ggfe ,_aadd :=_dccdc .(*_fee .PdfObjectName );if !_aadd {return nil ,_ba .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_ggfe !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_ba .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_dccdc =_fee .TraceToDirectObject (_degf .Get (1));_dggdb ,_aadd :=_dccdc .(*_fee .PdfObjectDictionary );if !_aadd {return nil ,_ba .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_dccdc =_dggdb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_dccdc =_fee .TraceToDirectObject (_dccdc );_ffeb ,_aadd :=_dccdc .(*_fee .PdfObjectArray );if !_aadd {return nil ,_ba .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _ffeb .Len ()!=3{return nil ,_ba .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ccg ,_dfeac :=_ffeb .GetAsFloat64Slice ();if _dfeac !=nil {return nil ,_dfeac ;};_ebcf .WhitePoint =_ccg ;_dccdc =_dggdb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dccdc !=nil {_dccdc =_fee .TraceToDirectObject (_dccdc );_bbd ,_gdfca :=_dccdc .(*_fee .PdfObjectArray );if !_gdfca {return nil ,_ba .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _bbd .Len ()!=3{return nil ,_ba .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_bedfe ,_fgecc :=_bbd .GetAsFloat64Slice ();if _fgecc !=nil {return nil ,_fgecc ;};_ebcf .BlackPoint =_bedfe ;};_dccdc =_dggdb .Get ("\u0047\u0061\u006dm\u0061");if _dccdc !=nil {_dccdc =_fee .TraceToDirectObject (_dccdc );_bfcc ,_fdee :=_fee .GetNumberAsFloat (_dccdc );if _fdee !=nil {return nil ,_ba .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_ebcf .Gamma =_bfcc ;};return _ebcf ,nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_bcbd *_fee .PdfIndirectObject ;_eecfe *_fee .PdfIndirectObject ;_ccfbe map[_fee .PdfObject ]struct{};_fagbg []_fee .PdfObject ;_faegg map[_fee .PdfObject ]struct{};_bgcad []*_fee .PdfIndirectObject ;_cdffb *PdfOutlineTreeNode ;_cbcgfc *_fee .PdfObjectDictionary ;_ffdca []_fee .PdfObject ;_agfae *_fee .PdfIndirectObject ;_gcace *_f .Writer ;_egdbg int64 ;_gecff error ;_dgfbg *_fee .PdfCrypt ;_faegdb *_fee .PdfObjectDictionary ;_ffcce *_fee .PdfIndirectObject ;_gdgcb *_fee .PdfObjectArray ;_dfedf int ;_gfbgc int ;_dggdf *bool ;_fgcec map[_fee .PdfObject ][]*_fee .PdfObjectDictionary ;_feeaa *PdfAcroForm ;_adgb Optimizer ;_cdeec map[int ]crossReference ;_dbece int64 ;ObjNumOffset int ;_ccadg bool ;_dggdfb _fee .XrefTable ;_acgc int64 ;_ebdcb int64 ;_afcce map[_fee .PdfObject ]int64 ;_bbegc map[_fee .PdfObject ]struct{};};

// DecodeArray returns the component range values for the Separation colorspace.
func (_eebg *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_bab :=NewPdfAction ();_ccd :=&PdfActionRendition {};_ccd .PdfAction =_bab ;_bab .SetContext (_ccd );return _ccd ;};func (_ggcfa *PdfWriter )hasObject (_dgdab _fee .PdfObject )bool {_ ,_aaaba :=_ggcfa ._faegg [_dgdab ];return _aaaba ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_afgeba *Outline )Insert (index uint ,item *OutlineItem ){_afab :=uint (len (_afgeba .Entries ));if index > _afab {index =_afab ;};_afgeba .Entries =append (_afgeba .Entries [:index ],append ([]*OutlineItem {item },_afgeba .Entries [index :]...)...);};func _aaag (_acgdf _fee .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gafa :=&PdfColorspaceDeviceNAttributes {};var _ebbb *_fee .PdfObjectDictionary ;if _bdda ,_bcde :=_acgdf .(*_fee .PdfIndirectObject );_bcde {_gafa ._cada =_bdda ;var _fgcb bool ;_ebbb ,_fgcb =_bdda .PdfObject .(*_fee .PdfObjectDictionary );if !_fgcb {_adc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_beg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _agba ,_bgbg :=_acgdf .(*_fee .PdfObjectDictionary );_bgbg {_ebbb =_agba ;}else {_adc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_beg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bebb :=_ebbb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bebb !=nil {_cbcfd ,_edcaa :=_fee .TraceToDirectObject (_bebb ).(*_fee .PdfObjectName );if !_edcaa {_adc .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_beg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gafa .Subtype =_cbcfd ;};if _adada :=_ebbb .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_adada !=nil {_gafa .Colorants =_adada ;};if _acge :=_ebbb .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_acge !=nil {_gafa .Process =_acge ;};if _bdg :=_ebbb .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_bdg !=nil {_gafa .MixingHints =_bdg ;};return _gafa ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gece *PdfColorspaceCalRGB )ToPdfObject ()_fee .PdfObject {_ebga :=&_fee .PdfObjectArray {};_ebga .Append (_fee .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_gfg :=_fee .MakeDict ();if _gece .WhitePoint !=nil {_cefa :=_fee .MakeArray (_fee .MakeFloat (_gece .WhitePoint [0]),_fee .MakeFloat (_gece .WhitePoint [1]),_fee .MakeFloat (_gece .WhitePoint [2]));_gfg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cefa );}else {_adc .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _gece .BlackPoint !=nil {_ecaf :=_fee .MakeArray (_fee .MakeFloat (_gece .BlackPoint [0]),_fee .MakeFloat (_gece .BlackPoint [1]),_fee .MakeFloat (_gece .BlackPoint [2]));_gfg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ecaf );};if _gece .Gamma !=nil {_begg :=_fee .MakeArray (_fee .MakeFloat (_gece .Gamma [0]),_fee .MakeFloat (_gece .Gamma [1]),_fee .MakeFloat (_gece .Gamma [2]));_gfg .Set ("\u0047\u0061\u006dm\u0061",_begg );};if _gece .Matrix !=nil {_cgag :=_fee .MakeArray (_fee .MakeFloat (_gece .Matrix [0]),_fee .MakeFloat (_gece .Matrix [1]),_fee .MakeFloat (_gece .Matrix [2]),_fee .MakeFloat (_gece .Matrix [3]),_fee .MakeFloat (_gece .Matrix [4]),_fee .MakeFloat (_gece .Matrix [5]),_fee .MakeFloat (_gece .Matrix [6]),_fee .MakeFloat (_gece .Matrix [7]),_fee .MakeFloat (_gece .Matrix [8]));_gfg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cgag );};_ebga .Append (_gfg );if _gece ._dabb !=nil {_gece ._dabb .PdfObject =_ebga ;return _gece ._dabb ;};return _ebga ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_fffda *PdfPageResources )HasColorspaceByName (keyName _fee .PdfObjectName )bool {_dcbda ,_fbdbe :=_fffda .GetColorspaces ();if _fbdbe !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fbdbe );return false ;};if _dcbda ==nil {return false ;};_ ,_cggdd :=_dcbda .Colorspaces [string (keyName )];return _cggdd ;};

// Items returns all children outline items.
func (_agaac *OutlineItem )Items ()[]*OutlineItem {return _agaac .Entries };

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_cdffd :=PdfWriter {};_cdffd ._faegg =map[_fee .PdfObject ]struct{}{};_cdffd ._fagbg =[]_fee .PdfObject {};_cdffd ._fgcec =map[_fee .PdfObject ][]*_fee .PdfObjectDictionary {};_cdffd ._bbegc =map[_fee .PdfObject ]struct{}{};_cdffd ._dfedf =1;_cdffd ._gfbgc =3;_gbdg :=_fee .MakeDict ();_bbaaa :=[]struct{_afggf _fee .PdfObjectName ;_cecfc string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_acacbc ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_adbbb ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_gcggg ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_eeaff ()},{"\u0054\u0069\u0074l\u0065",_dbdea ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bfcfa ()}};for _ ,_eecge :=range _bbaaa {if _eecge ._cecfc !=""{_gbdg .Set (_eecge ._afggf ,_fee .MakeString (_eecge ._cecfc ));};};if _ccfcb :=_fcbgd ();!_ccfcb .IsZero (){if _fggdda ,_bdcbag :=NewPdfDateFromTime (_ccfcb );_bdcbag ==nil {_gbdg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fggdda .ToPdfObject ());};};if _ceded :=_cbfbfc ();!_ceded .IsZero (){if _aadca ,_cdfbc :=NewPdfDateFromTime (_ceded );_cdfbc ==nil {_gbdg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_aadca .ToPdfObject ());};};_fffef :=_fee .PdfIndirectObject {};_fffef .PdfObject =_gbdg ;_cdffd ._agfae =&_fffef ;_cdffd .addObject (&_fffef );_fgged :=_fee .PdfIndirectObject {};_acbe :=_fee .MakeDict ();_acbe .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_fgged .PdfObject =_acbe ;_cdffd ._bcbd =&_fgged ;_cdffd .addObject (_cdffd ._bcbd );_eefdg :=_fee .PdfIndirectObject {};_cddg :=_fee .MakeDict ();_cddg .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0050\u0061\u0067e\u0073"));_fccf :=_fee .PdfObjectArray {};_cddg .Set ("\u004b\u0069\u0064\u0073",&_fccf );_cddg .Set ("\u0043\u006f\u0075n\u0074",_fee .MakeInteger (0));_eefdg .PdfObject =_cddg ;_cdffd ._eecfe =&_eefdg ;_cdffd ._ccfbe =map[_fee .PdfObject ]struct{}{};_cdffd .addObject (_cdffd ._eecfe );_acbe .Set ("\u0050\u0061\u0067e\u0073",&_eefdg );_cdffd ._cbcgfc =_acbe ;_adc .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_fgged );return _cdffd ;};func _gebfc (_gdada *_fee .PdfObjectDictionary )bool {for _ ,_dbad :=range _gdada .Keys (){if _ ,_gggb :=_gcdfe [_dbad .String ()];_gggb {return true ;};};return false ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_dcff ,_eegb :=_afacf (basefont );if _eegb !=nil {return nil ,_eegb ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_dcff ._agcc =_de .NewWinAnsiEncoder ();};return &PdfFont {_ddaad :&_dcff },nil ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_bdggf :=PdfPage {};_bdggf ._eddb =_fee .MakeDict ();_bdggf .Resources =NewPdfPageResources ();_edfdb :=_fee .PdfIndirectObject {};_edfdb .PdfObject =_bdggf ._eddb ;_bdggf ._abdg =&_edfdb ;return &_bdggf ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _fee .PdfObject ;Sy _fee .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fgcg *PdfColorspaceSpecialPattern )ToPdfObject ()_fee .PdfObject {if _fgcg .UnderlyingCS ==nil {return _fee .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_aacb :=_fee .MakeArray (_fee .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_aacb .Append (_fgcg .UnderlyingCS .ToPdfObject ());if _fgcg ._cfbef !=nil {_fgcg ._cfbef .PdfObject =_aacb ;return _fgcg ._cfbef ;};return _aacb ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_ebbgb *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_beg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_fbbc :=&PdfColorPattern {};_eadc ,_dagf :=objects [len (objects )-1].(*_fee .PdfObjectName );if !_dagf {_adc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_fbbc .PatternName =*_eadc ;if len (objects )> 1{_gfgf :=objects [0:len (objects )-1];if _ebbgb .UnderlyingCS ==nil {_adc .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_beg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_gfgg ,_dccef :=_ebbgb .UnderlyingCS .ColorFromPdfObjects (_gfgf );if _dccef !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_dccef );return nil ,_dccef ;};_fbbc .Color =_gfgg ;};return _fbbc ,nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_cdb :=NewPdfAction ();_dc :=&PdfActionSound {};_dc .PdfAction =_cdb ;_cdb .SetContext (_dc );return _dc ;};func (_afbb *PdfReader )newPdfAnnotationSquareFromDict (_cdec *_fee .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_edef :=PdfAnnotationSquare {};_ecc ,_gaaa :=_afbb .newPdfAnnotationMarkupFromDict (_cdec );if _gaaa !=nil {return nil ,_gaaa ;};_edef .PdfAnnotationMarkup =_ecc ;_edef .BS =_cdec .Get ("\u0042\u0053");_edef .IC =_cdec .Get ("\u0049\u0043");_edef .BE =_cdec .Get ("\u0042\u0045");_edef .RD =_cdec .Get ("\u0052\u0044");return &_edef ,nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gfaa *Image )GetParamsDict ()*_fee .PdfObjectDictionary {_deed :=_fee .MakeDict ();_deed .Set ("\u0057\u0069\u0064t\u0068",_fee .MakeInteger (_gfaa .Width ));_deed .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fee .MakeInteger (_gfaa .Height ));_deed .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fee .MakeInteger (int64 (_gfaa .ColorComponents )));_deed .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fee .MakeInteger (_gfaa .BitsPerComponent ));return _deed ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gdgge *PdfPage )ToPdfObject ()_fee .PdfObject {_ggbbd :=_gdgge ._abdg ;_gdgge .GetPageDict ();return _ggbbd ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _fee .PdfObject ;IsMap _fee .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bfae *PdfAnnotationFileAttachment )ToPdfObject ()_fee .PdfObject {_bfae .PdfAnnotation .ToPdfObject ();_geaba :=_bfae ._gdc ;_bda :=_geaba .PdfObject .(*_fee .PdfObjectDictionary );_bfae .PdfAnnotationMarkup .appendToPdfDictionary (_bda );_bda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_bda .SetIfNotNil ("\u0046\u0053",_bfae .FS );_bda .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bfae .Name );return _geaba ;};

// R returns the value of the red component of the color.
func (_bcge *PdfColorDeviceRGB )R ()float64 {return float64 (_bcge [0])};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// IsEncrypted returns true if the PDF file is encrypted.
func (_cebe *PdfReader )IsEncrypted ()(bool ,error ){return _cebe ._daae .IsEncrypted ()};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_fbed *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_babf ,_fgcd :=_fee .GetNumbersAsFloat (objects );if _fgcd !=nil {return nil ,_fgcd ;};return _fbed .ColorFromFloats (_babf );};func (_fbce *DSS )addOCSPs (_afad [][]byte )([]*_fee .PdfObjectStream ,error ){return _fbce .add (&_fbce .OCSPs ,_fbce ._ggdg ,_afad );};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_ccfba *PdfAcroForm ,_fdbe *PdfField ,_bbbb *PdfAnnotationWidget )(*_fee .PdfObjectDictionary ,error );};

// PartialName returns the partial name of the field.
func (_dadcd *PdfField )PartialName ()string {_feeae :="";if _dadcd .T !=nil {_feeae =_dadcd .T .Decoded ();}else {_adc .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _feeae ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_gfafc *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _gfafc .Alternate ==nil {_adc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _gfafc .N ==1{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_eedbd :=NewPdfColorspaceDeviceGray ();return _eedbd .ImageToRGB (img );}else if _gfafc .N ==3{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _gfafc .N ==4{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_eaeb :=NewPdfColorspaceDeviceCMYK ();return _eaeb .ImageToRGB (img );}else {return img ,_beg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_adc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gfafc );_eaf ,_dgbg :=_gfafc .Alternate .ImageToRGB (img );_adc .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_adc .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_eaf );return _eaf ,_dgbg ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// ReplacePage replaces the original page to a new page.
func (_fdb *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_cfde :=pageNum -1;for _dddb :=range _fdb ._facda {if _dddb ==_cfde {_dgga :=page .Duplicate ();_eacdc (_dgga );_fdb ._facda [_dddb ]=_dgga ;};};};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dfbf *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_dfbf .NumInputs {_adc .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_beg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _dfbf ._caced ==nil {_gaca :=_dfbf .processSamples ();if _gaca !=nil {return nil ,_gaca ;};};_gegf :=_dfbf .Encode ;if _gegf ==nil {_gegf =[]float64 {};for _abgae :=0;_abgae < len (_dfbf .Size );_abgae ++{_gegf =append (_gegf ,0);_gegf =append (_gegf ,float64 (_dfbf .Size [_abgae ]-1));};};_cgfcb :=_dfbf .Decode ;if _cgfcb ==nil {_cgfcb =_dfbf .Range ;};_agead :=make ([]int ,len (x ));for _baede :=0;_baede < len (x );_baede ++{_gfadd :=x [_baede ];_efbba :=_eba .Min (_eba .Max (_gfadd ,_dfbf .Domain [2*_baede ]),_dfbf .Domain [2*_baede +1]);_ggbad :=_ffg .LinearInterpolate (_efbba ,_dfbf .Domain [2*_baede ],_dfbf .Domain [2*_baede +1],_gegf [2*_baede ],_gegf [2*_baede +1]);_cbcgf :=_eba .Min (_eba .Max (_ggbad ,0),float64 (_dfbf .Size [_baede ]-1));_agbdg :=int (_eba .Floor (_cbcgf +0.5));if _agbdg < 0{_agbdg =0;}else if _agbdg > _dfbf .Size [_baede ]{_agbdg =_dfbf .Size [_baede ]-1;};_agead [_baede ]=_agbdg ;};_eeedd :=_agead [0];for _afebg :=1;_afebg < _dfbf .NumInputs ;_afebg ++{_aede :=_agead [_afebg ];for _bfafc :=0;_bfafc < _afebg ;_bfafc ++{_aede *=_dfbf .Size [_bfafc ];};_eeedd +=_aede ;};_eeedd *=_dfbf .NumOutputs ;var _adfec []float64 ;for _daaf :=0;_daaf < _dfbf .NumOutputs ;_daaf ++{_bebfd :=_eeedd +_daaf ;if _bebfd >=len (_dfbf ._caced ){_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_egbgg :=_dfbf ._caced [_bebfd ];_ccffb :=_ffg .LinearInterpolate (float64 (_egbgg ),0,_eba .Pow (2,float64 (_dfbf .BitsPerSample )),_cgfcb [2*_daaf ],_cgfcb [2*_daaf +1]);_caeg :=_eba .Min (_eba .Max (_ccffb ,_dfbf .Range [2*_daaf ]),_dfbf .Range [2*_daaf +1]);_adfec =append (_adfec ,_caeg );};return _adfec ,nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_gaefc *VRI )ToPdfObject ()*_fee .PdfObjectDictionary {_ebbd :=_fee .MakeDict ();_ebbd .SetIfNotNil (_fee .PdfObjectName ("\u0043\u0065\u0072\u0074"),_ebcgb (_gaefc .Cert ));_ebbd .SetIfNotNil (_fee .PdfObjectName ("\u004f\u0043\u0053\u0050"),_ebcgb (_gaefc .OCSP ));_ebbd .SetIfNotNil (_fee .PdfObjectName ("\u0043\u0052\u004c"),_ebcgb (_gaefc .CRL ));_ebbd .SetIfNotNil ("\u0054\u0055",_gaefc .TU );_ebbd .SetIfNotNil ("\u0054\u0053",_gaefc .TS );return _ebbd ;};

// ToPdfObject implements interface PdfModel.
func (_afbbb *PdfAnnotationText )ToPdfObject ()_fee .PdfObject {_afbbb .PdfAnnotation .ToPdfObject ();_dca :=_afbbb ._gdc ;_fgee :=_dca .PdfObject .(*_fee .PdfObjectDictionary );if _afbbb .PdfAnnotationMarkup !=nil {_afbbb .PdfAnnotationMarkup .appendToPdfDictionary (_fgee );};_fgee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0054\u0065\u0078\u0074"));_fgee .SetIfNotNil ("\u004f\u0070\u0065\u006e",_afbbb .Open );_fgee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_afbbb .Name );_fgee .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_afbbb .State );_fgee .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_afbbb .StateModel );return _dca ;};func _bdba (_cgac *PdfField ,_bedgd _fee .PdfObject ){for _ ,_fcfd :=range _cgac .Annotations {_fcfd .AS =_bedgd ;_fcfd .ToPdfObject ();};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdccg *PdfShadingType5 )ToPdfObject ()_fee .PdfObject {_bdccg .PdfShading .ToPdfObject ();_cccbg ,_dfgd :=_bdccg .getShadingDict ();if _dfgd !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bdccg .BitsPerCoordinate !=nil {_cccbg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bdccg .BitsPerCoordinate );};if _bdccg .BitsPerComponent !=nil {_cccbg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bdccg .BitsPerComponent );};if _bdccg .VerticesPerRow !=nil {_cccbg .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_bdccg .VerticesPerRow );};if _bdccg .Decode !=nil {_cccbg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bdccg .Decode );};if _bdccg .Function !=nil {if len (_bdccg .Function )==1{_cccbg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdccg .Function [0].ToPdfObject ());}else {_geadd :=_fee .MakeArray ();for _ ,_abbf :=range _bdccg .Function {_geadd .Append (_abbf .ToPdfObject ());};_cccbg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_geadd );};};return _bdccg ._gbadg ;};

// SetAnnotations sets the annotations list.
func (_ebabf *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_ebabf ._dacea =annotations };

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _fee .PdfObject ;Flags _fee .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cfb *PdfActionLaunch )ToPdfObject ()_fee .PdfObject {_cfb .PdfAction .ToPdfObject ();_eda :=_cfb ._fg ;_cbd :=_eda .PdfObject .(*_fee .PdfObjectDictionary );_cbd .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeLaunch )));if _cfb .F !=nil {_cbd .Set ("\u0046",_cfb .F .ToPdfObject ());};_cbd .SetIfNotNil ("\u0057\u0069\u006e",_cfb .Win );_cbd .SetIfNotNil ("\u004d\u0061\u0063",_cfb .Mac );_cbd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cfb .Unix );_cbd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cfb .NewWindow );return _eda ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_bega *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_cdcbb :=_ef .NewReader (img .getBase ());_gagc :=_ffg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_aacd :=_ef .NewWriter (_gagc );_gceb :=_eba .Pow (2,float64 (img .BitsPerComponent ))-1;_aebb :=make ([]uint32 ,3);var (_fgbd uint32 ;ANorm ,X ,Y ,Z ,_cgade ,_ffde ,_ccbf float64 ;_fbfd error ;);for {_fgbd ,_fbfd =_cdcbb .ReadSample ();if _fbfd ==_be .EOF {break ;}else if _fbfd !=nil {return img ,_fbfd ;};ANorm =float64 (_fgbd )/_gceb ;X =_bega .WhitePoint [0]*_eba .Pow (ANorm ,_bega .Gamma );Y =_bega .WhitePoint [1]*_eba .Pow (ANorm ,_bega .Gamma );Z =_bega .WhitePoint [2]*_eba .Pow (ANorm ,_bega .Gamma );_cgade =3.240479*X +-1.537150*Y +-0.498535*Z ;_ffde =-0.969256*X +1.875992*Y +0.041556*Z ;_ccbf =0.055648*X +-0.204043*Y +1.057311*Z ;_cgade =_eba .Min (_eba .Max (_cgade ,0),1.0);_ffde =_eba .Min (_eba .Max (_ffde ,0),1.0);_ccbf =_eba .Min (_eba .Max (_ccbf ,0),1.0);_aebb [0]=uint32 (_cgade *_gceb );_aebb [1]=uint32 (_ffde *_gceb );_aebb [2]=uint32 (_ccbf *_gceb );if _fbfd =_aacd .WriteSamples (_aebb );_fbfd !=nil {return img ,_fbfd ;};};return _edabc (&_gagc ),nil ;};func (_fgcfg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ffd *_fee .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_fbg :=PdfAnnotationFileAttachment {};_fdc ,_fgdd :=_fgcfg .newPdfAnnotationMarkupFromDict (_ffd );if _fgdd !=nil {return nil ,_fgdd ;};_fbg .PdfAnnotationMarkup =_fdc ;_fbg .FS =_ffd .Get ("\u0046\u0053");_fbg .Name =_ffd .Get ("\u004e\u0061\u006d\u0065");return &_fbg ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_dcdbd *PdfField )Flags ()FieldFlag {var _eabag FieldFlag ;_gbcga ,_bcaf :=_dcdbd .inherit (func (_eggec *PdfField )bool {if _eggec .Ff !=nil {_eabag =FieldFlag (*_dcdbd .Ff );return true ;};return false ;});if _bcaf !=nil {_adc .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_bcaf );};if !_gbcga {_adc .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _eabag ;};func (_fcdbe *PdfPage )getParentResources ()(*PdfPageResources ,error ){_beaf :=_fcdbe .Parent ;for _beaf !=nil {_ggdff ,_ceaad :=_fee .GetDict (_beaf );if !_ceaad {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_beg .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _cbbea :=_ggdff .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cbbea !=nil {_ccbg ,_eddeb :=_fee .GetDict (_cbbea );if !_eddeb {return nil ,_beg .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_eaeg ,_efdgag :=NewPdfPageResourcesFromDict (_ccbg );if _efdgag !=nil {return nil ,_efdgag ;};return _eaeg ,nil ;};_beaf =_ggdff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_feafb *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _feafb .UnderlyingCS ==nil {return nil ,_beg .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _feafb .UnderlyingCS .ColorFromFloats (vals );};

// SetReason sets the `Reason` field of the signature.
func (_dggc *PdfSignature )SetReason (reason string ){_dggc .Reason =_fee .MakeString (reason )};func _afaec (_gcddf *_fee .PdfObjectDictionary )(*PdfShadingType4 ,error ){_ccecce :=PdfShadingType4 {};_ecdd :=_gcddf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ecdd ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_bcdfa ,_decef :=_ecdd .(*_fee .PdfObjectInteger );if !_decef {_adc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecdd );return nil ,_fee .ErrTypeError ;};_ccecce .BitsPerCoordinate =_bcdfa ;_ecdd =_gcddf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ecdd ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_bcdfa ,_decef =_ecdd .(*_fee .PdfObjectInteger );if !_decef {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ecdd );return nil ,_fee .ErrTypeError ;};_ccecce .BitsPerComponent =_bcdfa ;_ecdd =_gcddf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ecdd ==nil {_adc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_bcdfa ,_decef =_ecdd .(*_fee .PdfObjectInteger );if !_decef {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ecdd );return nil ,_fee .ErrTypeError ;};_ccecce .BitsPerComponent =_bcdfa ;_ecdd =_gcddf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ecdd ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_abacd ,_decef :=_ecdd .(*_fee .PdfObjectArray );if !_decef {_adc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecdd );return nil ,_fee .ErrTypeError ;};_ccecce .Decode =_abacd ;_ecdd =_gcddf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ecdd ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_ccecce .Function =[]PdfFunction {};if _fffca ,_ecab :=_ecdd .(*_fee .PdfObjectArray );_ecab {for _ ,_efebe :=range _fffca .Elements (){_fffgcd ,_cddagc :=_ddgcb (_efebe );if _cddagc !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cddagc );return nil ,_cddagc ;};_ccecce .Function =append (_ccecce .Function ,_fffgcd );};}else {_bagc ,_gdcb :=_ddgcb (_ecdd );if _gdcb !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdcb );return nil ,_gdcb ;};_ccecce .Function =append (_ccecce .Function ,_bagc );};return &_ccecce ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eccb *PdfShading )ToPdfObject ()_fee .PdfObject {_dbcdf :=_eccb ._gbadg ;_cefag ,_eacff :=_eccb .getShadingDict ();if _eacff !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _eccb .ShadingType !=nil {_cefag .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_eccb .ShadingType );};if _eccb .ColorSpace !=nil {_cefag .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eccb .ColorSpace .ToPdfObject ());};if _eccb .Background !=nil {_cefag .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_eccb .Background );};if _eccb .BBox !=nil {_cefag .Set ("\u0042\u0042\u006f\u0078",_eccb .BBox .ToPdfObject ());};if _eccb .AntiAlias !=nil {_cefag .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_eccb .AntiAlias );};return _dbcdf ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_eabd *PdfShading )GetContext ()PdfModel {return _eabd ._gfae };

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dfbeg *PdfShadingPattern )ToPdfObject ()_fee .PdfObject {_dfbeg .PdfPattern .ToPdfObject ();_aeafe :=_dfbeg .getDict ();if _dfbeg .Shading !=nil {_aeafe .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dfbeg .Shading .ToPdfObject ());};if _dfbeg .Matrix !=nil {_aeafe .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfbeg .Matrix );};if _dfbeg .ExtGState !=nil {_aeafe .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dfbeg .ExtGState );};return _dfbeg ._aege ;};

// ToPdfObject implements interface PdfModel.
func (_geg *PdfActionSetOCGState )ToPdfObject ()_fee .PdfObject {_geg .PdfAction .ToPdfObject ();_caf :=_geg ._fg ;_feb :=_caf .PdfObject .(*_fee .PdfObjectDictionary );_feb .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeSetOCGState )));_feb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_geg .State );_feb .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_geg .PreserveRB );return _caf ;};

// C returns the value of the C component of the color.
func (_cccg *PdfColorCalRGB )C ()float64 {return float64 (_cccg [2])};

// AddAnnotation appends `annot` to the list of page annotations.
func (_agfd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _agfd ._dacea ==nil {_agfd .GetAnnotations ();};_agfd ._dacea =append (_agfd ._dacea ,annot );};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ddcf *PdfAnnotation )GetContext ()PdfModel {if _ddcf ==nil {return nil ;};return _ddcf ._gbfd ;};

// String returns a string representation of the field.
func (_ecba *PdfField )String ()string {if _dece ,_fedcb :=_ecba .ToPdfObject ().(*_fee .PdfIndirectObject );_fedcb {return _ba .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ecba ._defg ,_dece .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_bddg *PdfFilespec )ToPdfObject ()_fee .PdfObject {_adcf :=_bddg .getDict ();_adcf .Clear ();_adcf .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_adcf .SetIfNotNil ("\u0046\u0053",_bddg .FS );_adcf .SetIfNotNil ("\u0046",_bddg .F );_adcf .SetIfNotNil ("\u0055\u0046",_bddg .UF );_adcf .SetIfNotNil ("\u0044\u004f\u0053",_bddg .DOS );_adcf .SetIfNotNil ("\u004d\u0061\u0063",_bddg .Mac );_adcf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_bddg .Unix );_adcf .SetIfNotNil ("\u0049\u0044",_bddg .ID );_adcf .SetIfNotNil ("\u0056",_bddg .V );_adcf .SetIfNotNil ("\u0045\u0046",_bddg .EF );_adcf .SetIfNotNil ("\u0052\u0046",_bddg .RF );_adcf .SetIfNotNil ("\u0044\u0065\u0073\u0063",_bddg .Desc );_adcf .SetIfNotNil ("\u0043\u0049",_bddg .CI );return _bddg ._acfd ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_ebefg :=map[rune ]int {};for _ ,_adcg :=range text {_ebefg [_adcg ]++;};return _ebefg ;};func _fbbaf (_bgceg []byte )(_beef ,_cdga string ,_aecce error ){_adc .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_bgceg ));_adgfe :=_adabb .FindIndex (_bgceg );if _adgfe ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_fee .ErrTypeError ;};_faaa :=_adgfe [1];_dcadg :=_ebc .Index (string (_bgceg [_faaa :]),_gbcad );if _dcadg < 0{_beef =string (_bgceg [_faaa :]);return _beef ,"",nil ;};_debgg :=_faaa +_dcadg ;_beef =string (_bgceg [_faaa :_debgg ]);_cddd :=_debgg ;_dcadg =_ebc .Index (string (_bgceg [_cddd :]),_cdae );if _dcadg < 0{_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aecce );return "","",_fee .ErrTypeError ;};_gefe :=_cddd +_dcadg ;_cdga =string (_bgceg [_cddd :_gefe ]);return _beef ,_cdga ,nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_ddaad pdfFont };func (_bggbd *PdfReader )loadStructure ()error {if _bggbd ._daae .GetCrypter ()!=nil &&!_bggbd ._daae .IsAuthenticated (){return _ba .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_feeef :=_bggbd ._daae .GetTrailer ();if _feeef ==nil {return _ba .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_eaae ,_cgea :=_feeef .Get ("\u0052\u006f\u006f\u0074").(*_fee .PdfObjectReference );if !_cgea {return _ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_feeef );};_gdec ,_cdgec :=_bggbd ._daae .LookupByReference (*_eaae );if _cdgec !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cdgec );return _cdgec ;};_ecgfe ,_cgea :=_gdec .(*_fee .PdfIndirectObject );if !_cgea {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gdec ,*_feeef );return _beg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ccbfg ,_cgea :=(*_ecgfe ).PdfObject .(*_fee .PdfObjectDictionary );if !_cgea {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_ecgfe .PdfObject );return _beg .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_adc .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ccbfg );_baadg ,_cgea :=_ccbfg .Get ("\u0050\u0061\u0067e\u0073").(*_fee .PdfObjectReference );if !_cgea {return _beg .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_fgbb ,_cdgec :=_bggbd ._daae .LookupByReference (*_baadg );if _cdgec !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _cdgec ;};_agced ,_cgea :=_fgbb .(*_fee .PdfIndirectObject );if !_cgea {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_adc .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_agced );return _beg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_egcaa ,_cgea :=_agced .PdfObject .(*_fee .PdfObjectDictionary );if !_cgea {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_agced );return _beg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cbgcb ,_cgea :=_fee .GetInt (_egcaa .Get ("\u0043\u006f\u0075n\u0074"));if !_cgea {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _beg .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cgea =_fee .GetName (_egcaa .Get ("\u0054\u0079\u0070\u0065"));!_cgea {_adc .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_egcaa .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0050\u0061\u0067e\u0073"));};_bggbd ._cadea =_eaae ;_bggbd ._egdgd =_ccbfg ;_bggbd ._fcadbf =_egcaa ;_bggbd ._aeff =_agced ;_bggbd ._bgaab =int (*_cbgcb );_bggbd ._aagc =[]*_fee .PdfIndirectObject {};_fced :=map[_fee .PdfObject ]struct{}{};_cdgec =_bggbd .buildPageList (_agced ,nil ,_fced );if _cdgec !=nil {return _cdgec ;};_adc .Log .Trace ("\u002d\u002d\u002d");_adc .Log .Trace ("\u0054\u004f\u0043");_adc .Log .Trace ("\u0050\u0061\u0067e\u0073");_adc .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bggbd ._aagc ),_bggbd ._aagc );_bggbd ._added ,_cdgec =_bggbd .loadOutlines ();if _cdgec !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_cdgec );return _cdgec ;};_bggbd .AcroForm ,_cdgec =_bggbd .loadForms ();if _cdgec !=nil {return _cdgec ;};_bggbd .DSS ,_cdgec =_bggbd .loadDSS ();if _cdgec !=nil {return _cdgec ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfb *PdfAnnotationLink )ToPdfObject ()_fee .PdfObject {_dfb .PdfAnnotation .ToPdfObject ();_aag :=_dfb ._gdc ;_fefg :=_aag .PdfObject .(*_fee .PdfObjectDictionary );_fefg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u004c\u0069\u006e\u006b"));if _dfb ._fdfe !=nil &&_dfb ._fdfe ._eee !=nil {_fefg .Set ("\u0041",_dfb ._fdfe ._eee .ToPdfObject ());}else if _dfb .A !=nil {_fefg .Set ("\u0041",_dfb .A );};_fefg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_dfb .Dest );_fefg .SetIfNotNil ("\u0048",_dfb .H );_fefg .SetIfNotNil ("\u0050\u0041",_dfb .PA );_fefg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfb .QuadPoints );_fefg .SetIfNotNil ("\u0042\u0053",_dfb .BS );return _aag ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_geddf *modelManager )GetModelFromPrimitive (primitive _fee .PdfObject )PdfModel {model ,_bcff :=_geddf ._dgfdf [primitive ];if !_bcff {return nil ;};return model ;};

// A returns the value of the A component of the color.
func (_efaee *PdfColorCalRGB )A ()float64 {return float64 (_efaee [0])};func _ggbf (_fdac _fee .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gddf :=NewPdfColorspaceSpecialSeparation ();if _degb ,_gdfcd :=_fdac .(*_fee .PdfIndirectObject );_gdfcd {_gddf ._faee =_degb ;};_fdac =_fee .TraceToDirectObject (_fdac );_deca ,_acca :=_fdac .(*_fee .PdfObjectArray );if !_acca {return nil ,_ba .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _deca .Len ()!=4{return nil ,_ba .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fdac =_deca .Get (0);_ceabb ,_acca :=_fdac .(*_fee .PdfObjectName );if !_acca {return nil ,_ba .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_ceabb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_ba .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_fdac =_deca .Get (1);_ceabb ,_acca =_fdac .(*_fee .PdfObjectName );if !_acca {return nil ,_ba .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_gddf .ColorantName =_ceabb ;_fdac =_deca .Get (2);_cgbcg ,_fcbb :=NewPdfColorspaceFromPdfObject (_fdac );if _fcbb !=nil {return nil ,_fcbb ;};_gddf .AlternateSpace =_cgbcg ;_efac ,_fcbb :=_ddgcb (_deca .Get (3));if _fcbb !=nil {return nil ,_fcbb ;};_gddf .TintTransform =_efac ;return _gddf ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_ggbfb *Image )ColorAt (x ,y int )(_a .Color ,error ){_cdgeea :=_ffg .BytesPerLine (int (_ggbfb .Width ),int (_ggbfb .BitsPerComponent ),_ggbfb .ColorComponents );switch _ggbfb .ColorComponents {case 1:return _ffg .ColorAtGrayscale (x ,y ,int (_ggbfb .BitsPerComponent ),_cdgeea ,_ggbfb .Data ,_ggbfb ._gbaa );case 3:return _ffg .ColorAtNRGBA (x ,y ,int (_ggbfb .Width ),_cdgeea ,int (_ggbfb .BitsPerComponent ),_ggbfb .Data ,_ggbfb ._babdc ,_ggbfb ._gbaa );case 4:return _ffg .ColorAtCMYK (x ,y ,int (_ggbfb .Width ),_ggbfb .Data ,_ggbfb ._gbaa );};_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ggbfb .ColorComponents ,_ggbfb .BitsPerComponent );return nil ,_beg .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_gaef *PdfAppender )Write (w _be .Writer )error {if _gaef ._eeb {return _beg .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_gggd :=NewPdfWriter ();_acd ,_egdc :=_fee .GetDict (_gggd ._eecfe );if !_egdc {return _beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_bdcd ,_egdc :=_acd .Get ("\u004b\u0069\u0064\u0073").(*_fee .PdfObjectArray );if !_egdc {return _beg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_cebca ,_egdc :=_acd .Get ("\u0043\u006f\u0075n\u0074").(*_fee .PdfObjectInteger );if !_egdc {return _beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_dbff :=_gaef ._agaa ._daae ;_acdf :=_dbff .GetTrailer ();if _acdf ==nil {return _beg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_adca ,_egdc :=_fee .GetIndirect (_acdf .Get ("\u0052\u006f\u006f\u0074"));if !_egdc {return _beg .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ecfa ,_egdc :=_fee .GetDict (_adca );if !_egdc {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_adca ,*_acdf );return _beg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_cgbag :=range _ecfa .Keys (){if _gggd ._cbcgfc .Get (_cgbag )==nil {_cccc :=_ecfa .Get (_cgbag );_gggd ._cbcgfc .Set (_cgbag ,_cccc );};};if _gaef ._cbcd !=nil {_gggd ._cbcgfc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gaef ._cbcd .ToPdfObject ());_gaef .updateObjectsDeep (_gaef ._cbcd .ToPdfObject (),nil );};if _gaef ._eaed !=nil {_gaef .updateObjectsDeep (_gaef ._eaed .ToPdfObject (),nil );_gggd ._cbcgfc .Set ("\u0044\u0053\u0053",_gaef ._eaed .GetContainingPdfObject ());};if _gggd ._dfedf < 2{_gggd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_gggd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_gaef .addNewObject (_gggd ._agfae );_gaef .addNewObject (_gggd ._bcbd );_affc :=false ;if len (_gaef ._agaa .PageList )!=len (_gaef ._facda ){_affc =true ;}else {for _egcf :=range _gaef ._agaa .PageList {switch {case _gaef ._facda [_egcf ]==_gaef ._agaa .PageList [_egcf ]:case _gaef ._facda [_egcf ]==_gaef .Reader .PageList [_egcf ]:default:_affc =true ;};if _affc {break ;};};};if _affc {_gaef .updateObjectsDeep (_gggd ._eecfe ,nil );}else {_gaef ._edbc [_gggd ._eecfe ]=struct{}{};};_gggd ._eecfe .ObjectNumber =_gaef .Reader ._aeff .ObjectNumber ;_gaef ._adagd [_gggd ._eecfe ]=_gaef .Reader ._aeff .ObjectNumber ;_egcfg :=[]_fee .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_eaef :=range _gaef ._facda {_aaffb :=_eaef .ToPdfObject ();*_cebca =*_cebca +1;if _bfcf ,_cdge :=_aaffb .(*_fee .PdfIndirectObject );_cdge &&_bfcf .GetParser ()==_gaef ._agaa ._daae {_bdcd .Append (&_bfcf .PdfObjectReference );continue ;};if _cddag ,_faca :=_fee .GetDict (_aaffb );_faca {_cgdf ,_aafaa :=_cddag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fee .PdfIndirectObject );for _aafaa {_adc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cgdf );_bcad ,_eead :=_cgdf .PdfObject .(*_fee .PdfObjectDictionary );if !_eead {return _beg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_cgbg :=range _egcfg {_adc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cgbg );if _cddag .Get (_cgbg )!=nil {_adc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _aeag :=_bcad .Get (_cgbg );_aeag !=nil {_adc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cgbg );_cddag .Set (_cgbg ,_aeag );};};_cgdf ,_aafaa =_bcad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fee .PdfIndirectObject );_adc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bcad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_cddag .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gggd ._eecfe );};_gaef .updateObjectsDeep (_aaffb ,nil );_bdcd .Append (_aaffb );};if _ ,_edgg :=_gaef ._bbagc .Seek (0,_be .SeekStart );_edgg !=nil {return _edgg ;};_dbcg :=make (map[SignatureHandler ]_be .Writer );_ddce :=_fee .MakeArray ();for _ ,_eeef :=range _gaef ._fbbfd {if _aaaf ,_babd :=_fee .GetIndirect (_eeef );_babd {if _acde ,_cef :=_aaaf .PdfObject .(*pdfSignDictionary );_cef {_baaa :=*_acde ._fcbf ;var _egcd error ;_dbcg [_baaa ],_egcd =_baaa .NewDigest (_acde ._ecceb );if _egcd !=nil {return _egcd ;};_ddce .Append (_fee .MakeInteger (0xfffff),_fee .MakeInteger (0xfffff));};};};if _ddce .Len ()> 0{_ddce .Append (_fee .MakeInteger (0xfffff),_fee .MakeInteger (0xfffff));};for _ ,_faad :=range _gaef ._fbbfd {if _egec ,_gba :=_fee .GetIndirect (_faad );_gba {if _gccd ,_gaaag :=_egec .PdfObject .(*pdfSignDictionary );_gaaag {_gccd .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ddce );};};};_fadg :=len (_dbcg )> 0;var _gcdf _be .Reader =_gaef ._bbagc ;if _fadg {_aebf :=make ([]_be .Writer ,0,len (_dbcg ));for _ ,_dgca :=range _dbcg {_aebf =append (_aebf ,_dgca );};_gcdf =_be .TeeReader (_gaef ._bbagc ,_be .MultiWriter (_aebf ...));};_cdcb ,_gac :=_be .Copy (w ,_gcdf );if _gac !=nil {return _gac ;};if len (_gaef ._fbbfd )==0{return nil ;};_gggd ._dbece =_cdcb ;_gggd .ObjNumOffset =_gaef ._gdd ;_gggd ._ccadg =true ;_gggd ._dggdfb =_gaef ._bfee ;_gggd ._acgc =_gaef ._fagcd ;_gggd ._ebdcb =_gaef ._gfda ;_gggd ._gfbgc =_gaef ._agaa .PdfVersion ().Minor ;_gggd ._afcce =_gaef ._adagd ;_cdfe :=_gaef ._efeb .GetXrefType ();if _cdfe !=nil {_dfaef :=*_cdfe ==_fee .XrefTypeObjectStream ;_gggd ._dggdf =&_dfaef ;};_gggd ._faegg =map[_fee .PdfObject ]struct{}{};_gggd ._fagbg =[]_fee .PdfObject {};for _ ,_gedd :=range _gaef ._fbbfd {if _ ,_beea :=_gaef ._edbc [_gedd ];_beea {continue ;};_gggd .addObject (_gedd );};_fbdbb :=w ;if _fadg {_fbdbb =_ed .NewBuffer (nil );};if _ffaag :=_gggd .Write (_fbdbb );_ffaag !=nil {return _ffaag ;};if _fadg {_ebf :=_fbdbb .(*_ed .Buffer ).Bytes ();_fbgc :=_fee .MakeArray ();var _fgec []*pdfSignDictionary ;var _dgacc int64 ;for _ ,_ggcca :=range _gggd ._fagbg {if _bedf ,_bcfb :=_fee .GetIndirect (_ggcca );_bcfb {if _afac ,_eeeg :=_bedf .PdfObject .(*pdfSignDictionary );_eeeg {_fgec =append (_fgec ,_afac );_gabe :=_afac ._aaedd +int64 (_afac ._abeef );_fbgc .Append (_fee .MakeInteger (_dgacc ),_fee .MakeInteger (_gabe -_dgacc ));_dgacc =_afac ._aaedd +int64 (_afac ._eeced );};};};_fbgc .Append (_fee .MakeInteger (_dgacc ),_fee .MakeInteger (_cdcb +int64 (len (_ebf ))-_dgacc ));_ccccg :=[]byte (_fbgc .WriteString ());for _ ,_gbgd :=range _fgec {_bcce :=int (_gbgd ._aaedd -_cdcb );for _ddefe :=_gbgd ._fggf ;_ddefe < _gbgd ._eebfb ;_ddefe ++{_ebf [_bcce +_ddefe ]=' ';};_bcgg :=_ebf [_bcce +_gbgd ._fggf :_bcce +_gbgd ._eebfb ];copy (_bcgg ,_ccccg );};var _eedg int ;for _ ,_eeee :=range _fgec {_edgf :=int (_eeee ._aaedd -_cdcb );_babcf :=_ebf [_eedg :_edgf +_eeee ._abeef ];_fggc :=*_eeee ._fcbf ;_dbcg [_fggc ].Write (_babcf );_eedg =_edgf +_eeee ._eeced ;};for _ ,_bege :=range _fgec {_fggb :=_ebf [_eedg :];_afff :=*_bege ._fcbf ;_dbcg [_afff ].Write (_fggb );};for _ ,_abg :=range _fgec {_fbbg :=int (_abg ._aaedd -_cdcb );_gcccc :=*_abg ._fcbf ;_aggd :=_dbcg [_gcccc ];if _gef :=_gcccc .Sign (_abg ._ecceb ,_aggd );_gef !=nil {return _gef ;};_abg ._ecceb .ByteRange =_fbgc ;_cbfe :=[]byte (_abg ._ecceb .Contents .WriteString ());for _febg :=_abg ._fggf ;_febg < _abg ._eebfb ;_febg ++{_ebf [_fbbg +_febg ]=' ';};for _afge :=_abg ._abeef ;_afge < _abg ._eeced ;_afge ++{_ebf [_fbbg +_afge ]=' ';};_dcae :=_ebf [_fbbg +_abg ._fggf :_fbbg +_abg ._eebfb ];copy (_dcae ,_ccccg );_dcae =_ebf [_fbbg +_abg ._abeef :_fbbg +_abg ._eeced ];copy (_dcae ,_cbfe );};_gbccd :=_ed .NewBuffer (_ebf );_ ,_gac =_be .Copy (w ,_gbccd );if _gac !=nil {return _gac ;};};_gaef ._eeb =true ;return nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_gbdad *BorderStyle )GetPdfName ()string {switch *_gbdad {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// ToPdfObject implements interface PdfModel.
func (_gcg *PdfActionTrans )ToPdfObject ()_fee .PdfObject {_gcg .PdfAction .ToPdfObject ();_dae :=_gcg ._fg ;_aaf :=_dae .PdfObject .(*_fee .PdfObjectDictionary );_aaf .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeTrans )));_aaf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gcg .Trans );return _dae ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_agcff *PdfPageResources )HasExtGState (keyName _fee .PdfObjectName )bool {_ ,_afggba :=_agcff .GetFontByName (keyName );return _afggba ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_fee .PdfObjectStream ;OCSP []*_fee .PdfObjectStream ;CRL []*_fee .PdfObjectStream ;TU *_fee .PdfObjectString ;TS *_fee .PdfObjectString ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bcdc ,_cgfac :=_da .Open (filePath );if _cgfac !=nil {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_cgfac );return nil ,_cgfac ;};defer _bcdc .Close ();return NewCompositePdfFontFromTTF (_bcdc );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cacef pdfCIDFontType2 )GetRuneMetrics (r rune )(_cg .CharMetrics ,bool ){_bgfde ,_ddcff :=_cacef ._eefa [r ];if !_ddcff {_cafc ,_dfaac :=_fee .GetInt (_cacef .DW );if !_dfaac {return _cg .CharMetrics {},false ;};_bgfde =int (*_cafc );};return _cg .CharMetrics {Wx :float64 (_bgfde )},true ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fee .PdfObject ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func (_ebca *PdfReader )newPdfAnnotationTrapNetFromDict (_beaa *_fee .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_gbda :=PdfAnnotationTrapNet {};return &_gbda ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cbdab *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgcef ,_cegd :=_fee .GetNumbersAsFloat (objects );if _cegd !=nil {return nil ,_cegd ;};return _cbdab .ColorFromFloats (_bgcef );};

// ToPdfObject implements interface PdfModel.
func (_bceb *PdfSignature )ToPdfObject ()_fee .PdfObject {_acafg :=_bceb ._fcfage ;var _cdeb *_fee .PdfObjectDictionary ;if _cfged ,_eagae :=_acafg .PdfObject .(*pdfSignDictionary );_eagae {_cdeb =_cfged .PdfObjectDictionary ;}else {_cdeb =_acafg .PdfObject .(*_fee .PdfObjectDictionary );};_cdeb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bceb .Type );_cdeb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_bceb .Filter );_cdeb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_bceb .SubFilter );_cdeb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bceb .ByteRange );_cdeb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bceb .Contents );_cdeb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_bceb .Cert );_cdeb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bceb .Name );_cdeb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_bceb .Reason );_cdeb .SetIfNotNil ("\u004d",_bceb .M );_cdeb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_bceb .Reference );_cdeb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_bceb .Changes );_cdeb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_bceb .ContactInfo );return _acafg ;};var (_adabb =_ad .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_fcdb =_ad .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_fbfbd =_ad .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_gbcad ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_cdae ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_afcc ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_adgaa *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_adgaa .ToPdfOutline ().PdfOutlineTreeNode ;};var _ggfef ="";

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_afdba *XObjectImage )GetContainingPdfObject ()_fee .PdfObject {return _afdba ._bcaff };func _fbag (_ffebf string )(map[_de .CharCode ]_de .GlyphName ,error ){_gefeb :=_ebc .Split (_ffebf ,"\u000a");_gffef :=make (map[_de .CharCode ]_de .GlyphName );for _ ,_ddcg :=range _gefeb {_caadb :=_fbfbd .FindStringSubmatch (_ddcg );if _caadb ==nil {continue ;};_efea ,_afgda :=_caadb [1],_caadb [2];_ecafg ,_befdg :=_af .Atoi (_efea );if _befdg !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ddcg );return nil ,_fee .ErrTypeError ;};_gffef [_de .CharCode (_ecafg )]=_de .GlyphName (_afgda );};_adc .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_gffef );return _gffef ,nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_dgbd *PdfField )GetContext ()PdfModel {return _dgbd ._defg };

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_agfda int64 ;_dgaac int64 ;_gfgad int64 ;_cgbab int64 ;_fdcba int64 ;_dbead int64 ;_adbe byte ;_eebfg int64 ;_bafga int64 ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_dbeaa *PdfReader )Inspect ()(map[string ]int ,error ){return _dbeaa ._daae .Inspect ()};var _gcdfe =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _fee .StreamEncoder ;Intent _fee .PdfObject ;ImageMask _fee .PdfObject ;Mask _fee .PdfObject ;Matte _fee .PdfObject ;Decode _fee .PdfObject ;Interpolate _fee .PdfObject ;Alternatives _fee .PdfObject ;SMask _fee .PdfObject ;SMaskInData _fee .PdfObject ;Name _fee .PdfObject ;StructParent _fee .PdfObject ;ID _fee .PdfObject ;OPI _fee .PdfObject ;Metadata _fee .PdfObject ;OC _fee .PdfObject ;Stream []byte ;_bcaff *_fee .PdfObjectStream ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _fee .PdfObject ;H _fee .PdfObject ;};func (_febc *PdfReader )newPdfAnnotationLinkFromDict (_gcggf *_fee .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gcef :=PdfAnnotationLink {};_gcef .A =_gcggf .Get ("\u0041");_gcef .Dest =_gcggf .Get ("\u0044\u0065\u0073\u0074");_gcef .H =_gcggf .Get ("\u0048");_gcef .PA =_gcggf .Get ("\u0050\u0041");_gcef .QuadPoints =_gcggf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gcef .BS =_gcggf .Get ("\u0042\u0053");return &_gcef ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_afgcd *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_gedb :=func (_edga float64 )float64 {if _edga >=6.0/29{return _edga *_edga *_edga ;};return 108.0/841*(_edga -4/29);};_bacgb :=img ._gbaa ;if len (_bacgb )!=6{_adc .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_bacgb =_afgcd .DecodeArray ();};_aeee :=_ef .NewReader (img .getBase ());_cedb :=_ffg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._babdc ,img ._gbaa );_bafa :=_ef .NewWriter (_cedb );_adfe :=_eba .Pow (2,float64 (img .BitsPerComponent ))-1;_eecf :=make ([]uint32 ,3);var (_efbad error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fccb ,_dccda ,_gead float64 ;);for {_efbad =_aeee .ReadSamples (_eecf );if _efbad ==_be .EOF {break ;}else if _efbad !=nil {return img ,_efbad ;};Ls =float64 (_eecf [0])/_adfe ;As =float64 (_eecf [1])/_adfe ;Bs =float64 (_eecf [2])/_adfe ;Ls =_ffg .LinearInterpolate (Ls ,0.0,1.0,_bacgb [0],_bacgb [1]);As =_ffg .LinearInterpolate (As ,0.0,1.0,_bacgb [2],_bacgb [3]);Bs =_ffg .LinearInterpolate (Bs ,0.0,1.0,_bacgb [4],_bacgb [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_afgcd .WhitePoint [0]*_gedb (L );Y =_afgcd .WhitePoint [1]*_gedb (M );Z =_afgcd .WhitePoint [2]*_gedb (N );_fccb =3.240479*X +-1.537150*Y +-0.498535*Z ;_dccda =-0.969256*X +1.875992*Y +0.041556*Z ;_gead =0.055648*X +-0.204043*Y +1.057311*Z ;_fccb =_eba .Min (_eba .Max (_fccb ,0),1.0);_dccda =_eba .Min (_eba .Max (_dccda ,0),1.0);_gead =_eba .Min (_eba .Max (_gead ,0),1.0);_eecf [0]=uint32 (_fccb *_adfe );_eecf [1]=uint32 (_dccda *_adfe );_eecf [2]=uint32 (_gead *_adfe );if _efbad =_bafa .WriteSamples (_eecf );_efbad !=nil {return img ,_efbad ;};};return _edabc (&_cedb ),nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_gcfb :=PdfColorDeviceRGB {r ,g ,b };return &_gcfb ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_fee .PdfObjectInteger ;BitsPerComponent *_fee .PdfObjectInteger ;VerticesPerRow *_fee .PdfObjectInteger ;Decode *_fee .PdfObjectArray ;Function []PdfFunction ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ebag :map[_fee .PdfObject ]struct{}{},_abgg :_gadee (),_daae :_fee .NewParserFromString (txt )};};

// ToPdfObject returns the PDF representation of the function.
func (_beefb *PdfFunctionType0 )ToPdfObject ()_fee .PdfObject {if _beefb ._bfdcd ==nil {_beefb ._bfdcd =&_fee .PdfObjectStream {};};_afedg :=_fee .MakeDict ();_afedg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fee .MakeInteger (0));_gfacb :=&_fee .PdfObjectArray {};for _ ,_dbbg :=range _beefb .Domain {_gfacb .Append (_fee .MakeFloat (_dbbg ));};_afedg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gfacb );_ecef :=&_fee .PdfObjectArray {};for _ ,_fcfac :=range _beefb .Range {_ecef .Append (_fee .MakeFloat (_fcfac ));};_afedg .Set ("\u0052\u0061\u006eg\u0065",_ecef );_aegg :=&_fee .PdfObjectArray {};for _ ,_fdfac :=range _beefb .Size {_aegg .Append (_fee .MakeInteger (int64 (_fdfac )));};_afedg .Set ("\u0053\u0069\u007a\u0065",_aegg );_afedg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_fee .MakeInteger (int64 (_beefb .BitsPerSample )));if _beefb .Order !=1{_afedg .Set ("\u004f\u0072\u0064e\u0072",_fee .MakeInteger (int64 (_beefb .Order )));};_afedg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fee .MakeInteger (int64 (len (_beefb ._cgadae ))));_beefb ._bfdcd .Stream =_beefb ._cgadae ;_beefb ._bfdcd .PdfObjectDictionary =_afedg ;return _beefb ._bfdcd ;};func (_adagf *PdfAcroForm )filteredFields (_ddgb FieldFilterFunc ,_aggg bool )[]*PdfField {if _adagf ==nil {return nil ;};return _ddad (_adagf .Fields ,_ddgb ,_aggg );};

// ToPdfObject implements interface PdfModel.
func (_efe *PdfAnnotationInk )ToPdfObject ()_fee .PdfObject {_efe .PdfAnnotation .ToPdfObject ();_gcf :=_efe ._gdc ;_cgca :=_gcf .PdfObject .(*_fee .PdfObjectDictionary );_efe .PdfAnnotationMarkup .appendToPdfDictionary (_cgca );_cgca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0049\u006e\u006b"));_cgca .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_efe .InkList );_cgca .SetIfNotNil ("\u0042\u0053",_efe .BS );return _gcf ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attemps to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_aaac *LTV )Enable (sig *PdfSignature ,extraCerts []*_d .Certificate )error {if _gegb :=_aaac .validateSig (sig );_gegb !=nil {return _gegb ;};_ffegc ,_fbaef :=_aaac .generateVRIKey (sig );if _fbaef !=nil {return _fbaef ;};if _ ,_agaef :=_aaac ._becc .VRI [_ffegc ];_agaef &&_aaac .SkipExisting {return nil ;};_fdgc ,_fbaef :=sig .GetCerts ();if _fbaef !=nil {return _fbaef ;};return _aaac .enable (_fdgc ,extraCerts ,_ffegc );};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_fc :=NewPdfAction ();_gfb :=&PdfActionGoToR {};_gfb .PdfAction =_fc ;_fc .SetContext (_gfb );return _gfb ;};

// ToInteger convert to an integer format.
func (_ebfe *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_daba :=_eba .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_daba *_ebfe .R ()),uint32 (_daba *_ebfe .G ()),uint32 (_daba *_ebfe .B ())};};

// GetAction returns the PDF action for the annotation link.
func (_bbc *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bbc ._fdfe !=nil {return _bbc ._fdfe ,nil ;};if _bbc .A ==nil {return nil ,nil ;};if _bbc ._fgdg ==nil {return nil ,nil ;};_cag ,_bgd :=_bbc ._fgdg .loadAction (_bbc .A );if _bgd !=nil {return nil ,_bgd ;};_bbc ._fdfe =_cag ;return _bbc ._fdfe ,nil ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_fee .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_ecacb *_fee .PdfIndirectObject ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_cga :=NewPdfAction ();_ggd :=&PdfActionJavaScript {};_ggd .PdfAction =_cga ;_cga .SetContext (_ggd );return _ggd ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eebf pdfFontType0 )GetRuneMetrics (r rune )(_cg .CharMetrics ,bool ){if _eebf .DescendantFont ==nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_eebf );return _cg .CharMetrics {},false ;};return _eebf .DescendantFont .GetRuneMetrics (r );};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_bdedg *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _bdedg .UnderlyingCS .GetNumComponents ();};func (_cae *PdfReader )newPdfAnnotationScreenFromDict (_abb *_fee .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_fbgf :=PdfAnnotationScreen {};_fbgf .T =_abb .Get ("\u0054");_fbgf .MK =_abb .Get ("\u004d\u004b");_fbgf .A =_abb .Get ("\u0041");_fbgf .AA =_abb .Get ("\u0041\u0041");return &_fbgf ,nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_ebcgf *PdfField )ToPdfObject ()_fee .PdfObject {_edfe :=_ebcgf ._bdcdc ;_aafd :=_edfe .PdfObject .(*_fee .PdfObjectDictionary );_cacdf :=_fee .MakeArray ();for _ ,_ddfef :=range _ebcgf .Kids {_cacdf .Append (_ddfef .ToPdfObject ());};for _ ,_daeg :=range _ebcgf .Annotations {if _daeg ._gdc !=_ebcgf ._bdcdc {_cacdf .Append (_daeg .GetContext ().ToPdfObject ());};};if _ebcgf .Parent !=nil {_aafd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ebcgf .Parent .GetContainingPdfObject ());};if _cacdf .Len ()> 0{_aafd .Set ("\u004b\u0069\u0064\u0073",_cacdf );};_aafd .SetIfNotNil ("\u0046\u0054",_ebcgf .FT );_aafd .SetIfNotNil ("\u0054",_ebcgf .T );_aafd .SetIfNotNil ("\u0054\u0055",_ebcgf .TU );_aafd .SetIfNotNil ("\u0054\u004d",_ebcgf .TM );_aafd .SetIfNotNil ("\u0046\u0066",_ebcgf .Ff );_aafd .SetIfNotNil ("\u0056",_ebcgf .V );_aafd .SetIfNotNil ("\u0044\u0056",_ebcgf .DV );_aafd .SetIfNotNil ("\u0041\u0041",_ebcgf .AA );return _edfe ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_afdac *PdfWriter )AddPage (page *PdfPage )error {_eacdc (page );_gcabe :=page .ToPdfObject ();_adc .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_adc .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_gcabe );_dgddbc ,_bdebd :=_fee .GetIndirect (_gcabe );if !_bdebd {return _beg .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_adc .Log .Trace ("\u0025\u0073",_dgddbc );_adc .Log .Trace ("\u0025\u0073",_dgddbc .PdfObject );_gbede ,_bdebd :=_fee .GetDict (_dgddbc .PdfObject );if !_bdebd {return _beg .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_egege ,_bdebd :=_fee .GetName (_gbede .Get ("\u0054\u0079\u0070\u0065"));if !_bdebd {return _ba .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_gbede .Get ("\u0054\u0079\u0070\u0065"));};if _egege .String ()!="\u0050\u0061\u0067\u0065"{return _beg .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_dgcbf :=[]_fee .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_cfeea ,_ddde :=_fee .GetIndirect (_gbede .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_adc .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_gbede .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_ddde );for _ddde {_adc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cfeea );_cbgag ,_dddgd :=_fee .GetDict (_cfeea .PdfObject );if !_dddgd {return _beg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_agfg :=range _dgcbf {_adc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agfg );if _gbede .Get (_agfg )!=nil {_adc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _ccebe :=_cbgag .Get (_agfg );_ccebe !=nil {_adc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agfg );_gbede .Set (_agfg ,_ccebe );};};_cfeea ,_ddde =_fee .GetIndirect (_cbgag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_adc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cbgag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_adc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_gbede .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_afdac ._eecfe );_dgddbc .PdfObject =_gbede ;_fbebb ,_bdebd :=_fee .GetDict (_afdac ._eecfe .PdfObject );if !_bdebd {return _beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_egfed ,_bdebd :=_fee .GetArray (_fbebb .Get ("\u004b\u0069\u0064\u0073"));if !_bdebd {return _beg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_egfed .Append (_dgddbc );_afdac ._ccfbe [_gbede ]=struct{}{};_gdccd ,_bdebd :=_fee .GetInt (_fbebb .Get ("\u0043\u006f\u0075n\u0074"));if !_bdebd {return _beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_gdccd =*_gdccd +1;_afdac .addObject (_dgddbc );_ceega :=_afdac .addObjects (_gbede );if _ceega !=nil {return _ceega ;};return nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_abcd :=NewPdfAnnotation ();_gab :=&PdfAnnotationCircle {};_gab .PdfAnnotation =_abcd ;_gab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abcd .SetContext (_gab );return _gab ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_bdfca *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _bdfca ._dedcg };

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_eec *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_eec .updateObjectsDeep (dss .ToPdfObject (),nil );};_eec ._eaed =dss ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_abad *PdfShadingType7 )ToPdfObject ()_fee .PdfObject {_abad .PdfShading .ToPdfObject ();_becece ,_ddffb :=_abad .getShadingDict ();if _ddffb !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _abad .BitsPerCoordinate !=nil {_becece .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_abad .BitsPerCoordinate );};if _abad .BitsPerComponent !=nil {_becece .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_abad .BitsPerComponent );};if _abad .BitsPerFlag !=nil {_becece .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_abad .BitsPerFlag );};if _abad .Decode !=nil {_becece .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_abad .Decode );};if _abad .Function !=nil {if len (_abad .Function )==1{_becece .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abad .Function [0].ToPdfObject ());}else {_fgfb :=_fee .MakeArray ();for _ ,_bbfaf :=range _abad .Function {_fgfb .Append (_bbfaf .ToPdfObject ());};_becece .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgfb );};};return _abad ._gbadg ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _be .ReadSeeker )(*PdfReader ,error ){_eeaac :=&PdfReader {_acgec :rs ,_ebag :map[_fee .PdfObject ]struct{}{},_abgg :_gadee (),_cgff :true };_eebb ,_aeefb :=_fee .NewParser (rs );if _aeefb !=nil {return nil ,_aeefb ;};_eeaac ._daae =_eebb ;_acdcb ,_aeefb :=_eeaac .IsEncrypted ();if _aeefb !=nil {return nil ,_aeefb ;};if !_acdcb {_aeefb =_eeaac .loadStructure ();if _aeefb !=nil {return nil ,_aeefb ;};};return _eeaac ,nil ;};func (_cfa *PdfReader )newPdfAnnotationCircleFromDict (_bdfd *_fee .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_cagc :=PdfAnnotationCircle {};_ffeg ,_ffec :=_cfa .newPdfAnnotationMarkupFromDict (_bdfd );if _ffec !=nil {return nil ,_ffec ;};_cagc .PdfAnnotationMarkup =_ffeg ;_cagc .BS =_bdfd .Get ("\u0042\u0053");_cagc .IC =_bdfd .Get ("\u0049\u0043");_cagc .BE =_bdfd .Get ("\u0042\u0045");_cagc .RD =_bdfd .Get ("\u0052\u0044");return &_cagc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bae *PdfActionGoToE )ToPdfObject ()_fee .PdfObject {_bae .PdfAction .ToPdfObject ();_cf :=_bae ._fg ;_gbg :=_cf .PdfObject .(*_fee .PdfObjectDictionary );_gbg .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeGoToE )));if _bae .F !=nil {_gbg .Set ("\u0046",_bae .F .ToPdfObject ());};_gbg .SetIfNotNil ("\u0044",_bae .D );_gbg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bae .NewWindow );_gbg .SetIfNotNil ("\u0054",_bae .T );return _cf ;};type fontCommon struct{_fagfdc string ;_agbcd string ;_fged string ;_gcfe _fee .PdfObject ;_edeab *_afb .CMap ;_dedcg *PdfFontDescriptor ;_fcgf int64 ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_fgca *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_aadc *PdfReader )newPdfActionJavaScriptFromDict (_cde *_fee .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cde .Get ("\u004a\u0053")},nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_bgfd *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_gbfc ,_abba :=color .(*PdfColorPattern );if !_abba {_adc .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _gbfc .Color ==nil {return color ,nil ;};if _bgfd .UnderlyingCS ==nil {return nil ,_beg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _bgfd .UnderlyingCS .ColorToRGB (_gbfc .Color );};

// Val returns the color value.
func (_cfec *PdfColorDeviceGray )Val ()float64 {return float64 (*_cfec )};func _agbae (_egfc *_fee .PdfIndirectObject ,_fffea *_fee .PdfObjectDictionary )(*DSS ,error ){if _egfc ==nil {_egfc =_fee .MakeIndirectObject (nil );};_egfc .PdfObject =_fee .MakeDict ();_ecge :=map[string ]*VRI {};if _aefdg ,_dgcb :=_fee .GetDict (_fffea .Get ("\u0056\u0052\u0049"));_dgcb {for _ ,_bdef :=range _aefdg .Keys (){if _aaage ,_dgec :=_fee .GetDict (_aefdg .Get (_bdef ));_dgec {_ecge [_ebc .ToUpper (_bdef .String ())]=_aeaa (_aaage );};};};return &DSS {Certs :_fgab (_fffea .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_fgab (_fffea .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_fgab (_fffea .Get ("\u0043\u0052\u004c\u0073")),VRI :_ecge ,_adfea :_egfc },nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_aaagf FieldFlag )Has (fl FieldFlag )bool {return (_aaagf .Mask ()&fl .Mask ())> 0};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _fee .PdfObject ;T _fee .PdfObject ;Operation _fee .PdfObject ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _fee .PdfObject ;Mac _fee .PdfObject ;Unix _fee .PdfObject ;NewWindow _fee .PdfObject ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_dde :=NewPdfAction ();_dda :=&PdfActionSetOCGState {};_dda .PdfAction =_dde ;_dde .SetContext (_dda );return _dda ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_becb :=NewPdfAnnotation ();_ffe :=&PdfAnnotationText {};_ffe .PdfAnnotation =_becb ;_ffe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_becb .SetContext (_ffe );return _ffe ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_fbaf =producer };

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_dgae *DSS )ToPdfObject ()_fee .PdfObject {_cfce :=_dgae ._adfea .PdfObject .(*_fee .PdfObjectDictionary );_cfce .Clear ();_bfeae :=_fee .MakeDict ();for _gga ,_bdfg :=range _dgae .VRI {_bfeae .Set (*_fee .MakeName (_gga ),_bdfg .ToPdfObject ());};_cfce .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_ebcgb (_dgae .Certs ));_cfce .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_ebcgb (_dgae .OCSPs ));_cfce .SetIfNotNil ("\u0043\u0052\u004c\u0073",_ebcgb (_dgae .CRLs ));_cfce .Set ("\u0056\u0052\u0049",_bfeae );return _dgae ._adfea ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_fee .PdfObject ,error );};

// IsTiling specifies if the pattern is a tiling pattern.
func (_bbgfc *PdfPattern )IsTiling ()bool {return _bbgfc .PatternType ==1};

// StdFontName represents name of a standard font.
type StdFontName =_cg .StdFontName ;

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_gace *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_abcag *Image )ConvertToBinary ()error {if _abcag .ColorComponents ==1&&_abcag .BitsPerComponent ==1{return nil ;};_afacb ,_edffd :=_abcag .ToGoImage ();if _edffd !=nil {return _edffd ;};_fcfag ,_edffd :=_ffg .MonochromeConverter .Convert (_afacb );if _edffd !=nil {return _edffd ;};_abcag .BitsPerComponent =1;_abcag .ColorComponents =1;_abcag .Data =_fcfag .Base ().Data ;return nil ;};

// Height returns the height of `rect`.
func (_bcfg *PdfRectangle )Height ()float64 {return _eba .Abs (_bcfg .Ury -_bcfg .Lly )};func (_ceaf Image )getBase ()_ffg .ImageBase {return _ffg .NewImageBase (int (_ceaf .Width ),int (_ceaf .Height ),int (_ceaf .BitsPerComponent ),_ceaf .ColorComponents ,_ceaf .Data ,_ceaf ._babdc ,_ceaf ._gbaa );};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_afdg *PdfColorspaceDeviceGray )ToPdfObject ()_fee .PdfObject {return _fee .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};var (ErrRequiredAttributeMissing =_beg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_beg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_efbg =_beg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_beg .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_beg .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_gf .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_fee .ErrNotSupported );ErrType1CFontNotSupported =_gf .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fee .ErrNotSupported );ErrType3FontNotSupported =_gf .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_fee .ErrNotSupported );ErrTTCmapNotSupported =_gf .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_fee .ErrNotSupported );ErrSignNotEnoughSpace =_gf .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");ErrSignNoCertificates =_gf .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ToPdfObject recursively builds the Outline tree PDF object.
func (_eacg *PdfOutline )ToPdfObject ()_fee .PdfObject {_aeggd :=_eacg ._cdgcf ;_acaf :=_aeggd .PdfObject .(*_fee .PdfObjectDictionary );_acaf .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _eacg .First !=nil {_acaf .Set ("\u0046\u0069\u0072s\u0074",_eacg .First .ToPdfObject ());};if _eacg .Last !=nil {_acaf .Set ("\u004c\u0061\u0073\u0074",_eacg .Last .GetContext ().GetContainingPdfObject ());};if _eacg .Parent !=nil {_acaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eacg .Parent .GetContext ().GetContainingPdfObject ());};if _eacg .Count !=nil {_acaf .Set ("\u0043\u006f\u0075n\u0074",_fee .MakeInteger (*_eacg .Count ));};return _aeggd ;};

// ToPdfObject implements interface PdfModel.
func (_dgba *PdfAnnotationTrapNet )ToPdfObject ()_fee .PdfObject {_dgba .PdfAnnotation .ToPdfObject ();_bbagd :=_dgba ._gdc ;_geaf :=_bbagd .PdfObject .(*_fee .PdfObjectDictionary );_geaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _bbagd ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_ggdgc *PdfPageResources )GenerateXObjectName ()_fee .PdfObjectName {_ceacc :=1;for {_fffgc :=_fee .MakeName (_ba .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_ceacc ));if !_ggdgc .HasXObjectByName (*_fffgc ){return *_fffgc ;};_ceacc ++;};};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_abebc *PdfColorspaceDeviceNAttributes )ToPdfObject ()_fee .PdfObject {_ffcg :=_fee .MakeDict ();if _abebc .Subtype !=nil {_ffcg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_abebc .Subtype );};_ffcg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_abebc .Colorants );_ffcg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_abebc .Process );_ffcg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_abebc .MixingHints );if _abebc ._cada !=nil {_abebc ._cada .PdfObject =_ffcg ;return _abebc ._cada ;};return _ffcg ;};func (_agbe *fontFile )loadFromSegments (_cfddb ,_gbee []byte )error {_adc .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cfddb ),len (_gbee ));_daab :=_agbe .parseASCIIPart (_cfddb );if _daab !=nil {return _daab ;};_adc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agbe );if len (_gbee )==0{return nil ;};_adc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agbe );return nil ;};type pdfCIDFontType0 struct{fontCommon ;_gffgc *_fee .PdfIndirectObject ;_eebe _de .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_fee .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fee .PdfObject ;W _fee .PdfObject ;DW2 _fee .PdfObject ;W2 _fee .PdfObject ;_aegc map[_de .CharCode ]float64 ;_cbgg float64 ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _fee .PdfObject ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_acfc :=&PdfOutline {_cdgcf :_fee .MakeIndirectObject (_fee .MakeDict ())};_acfc ._dbcdc =_acfc ;return _acfc ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_fee .PdfObjectBool ;SigFlags *_fee .PdfObjectInteger ;CO *_fee .PdfObjectArray ;DR *PdfPageResources ;DA *_fee .PdfObjectString ;Q *_fee .PdfObjectInteger ;XFA _fee .PdfObject ;_edda *_fee .PdfIndirectObject ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_gcge *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ebeb :=_gcge .actualFont ();if _ebeb ==nil {_adc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_gcge ._ddaad );return _cg .CharMetrics {},false ;};if _ddfg ,_cgbd :=_ebeb .GetRuneMetrics (r );_cgbd {return _ddfg ,true ;};if _eaec ,_eadd :=_gcge .GetFontDescriptor ();_eadd ==nil &&_eaec !=nil {return _cg .CharMetrics {Wx :_eaec ._dffb },true ;};_adc .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gcge );return _cg .CharMetrics {},false ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_cffab *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _cffab .MediaBox !=nil {return _cffab .MediaBox ,nil ;};_dceb :=_cffab .Parent ;for _dceb !=nil {_dfbea ,_cege :=_fee .GetDict (_dceb );if !_cege {return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _ebba :=_dfbea .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ebba !=nil {_efdbe ,_eggdg :=_fee .GetArray (_ebba );if !_eggdg {return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_cbcbd ,_dcfag :=NewPdfRectangle (*_efdbe );if _dcfag !=nil {return nil ,_dcfag ;};return _cbcbd ,nil ;};_dceb =_dfbea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_beg .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _fee .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _fee .PdfObject ;Contents _fee .PdfObject ;Rotate *int64 ;Group _fee .PdfObject ;Thumb _fee .PdfObject ;B _fee .PdfObject ;Dur _fee .PdfObject ;Trans _fee .PdfObject ;AA _fee .PdfObject ;Metadata _fee .PdfObject ;PieceInfo _fee .PdfObject ;StructParents _fee .PdfObject ;ID _fee .PdfObject ;PZ _fee .PdfObject ;SeparationInfo _fee .PdfObject ;Tabs _fee .PdfObject ;TemplateInstantiated _fee .PdfObject ;PresSteps _fee .PdfObject ;UserUnit _fee .PdfObject ;VP _fee .PdfObject ;Annots _fee .PdfObject ;_dacea []*PdfAnnotation ;_eddb *_fee .PdfObjectDictionary ;_abdg *_fee .PdfIndirectObject ;_ddcca *PdfReader ;};func (_baaab fontCommon )fontFlags ()int {if _baaab ._dedcg ==nil {return 0;};return _baaab ._dedcg ._dcdc ;};

// A returns the value of the A component of the color.
func (_bdag *PdfColorLab )A ()float64 {return float64 (_bdag [1])};func _gccb (_egeb _fee .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_ggggd :=NewPdfColorspaceSpecialIndexed ();if _fbaea ,_fdeg :=_egeb .(*_fee .PdfIndirectObject );_fdeg {_ggggd ._gdbc =_fbaea ;};_egeb =_fee .TraceToDirectObject (_egeb );_dcdg ,_cbce :=_egeb .(*_fee .PdfObjectArray );if !_cbce {return nil ,_ba .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dcdg .Len ()!=4{return nil ,_ba .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_egeb =_dcdg .Get (0);_dceaf ,_cbce :=_egeb .(*_fee .PdfObjectName );if !_cbce {return nil ,_ba .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_dceaf !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_ba .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_egeb =_dcdg .Get (1);_eeabc ,_dedce :=DetermineColorspaceNameFromPdfObject (_egeb );if _eeabc =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_eeabc =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_adc .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_eeabc );return nil ,_efbg ;};_befe ,_dedce :=NewPdfColorspaceFromPdfObject (_egeb );if _dedce !=nil {return nil ,_dedce ;};_ggggd .Base =_befe ;_egeb =_dcdg .Get (2);_cegg ,_dedce :=_fee .GetNumberAsInt64 (_egeb );if _dedce !=nil {return nil ,_dedce ;};if _cegg > 255{return nil ,_ba .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_ggggd .HiVal =int (_cegg );_egeb =_dcdg .Get (3);_ggggd .Lookup =_egeb ;_egeb =_fee .TraceToDirectObject (_egeb );var _gfbg []byte ;if _eced ,_dgfdd :=_egeb .(*_fee .PdfObjectString );_dgfdd {_gfbg =_eced .Bytes ();_adc .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_gfbg );}else if _befaf ,_fgbdg :=_egeb .(*_fee .PdfObjectStream );_fgbdg {_adc .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_egeb .String ());_adc .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_befaf .Stream ),_befaf .Stream );_faac ,_egcb :=_fee .DecodeStream (_befaf );if _egcb !=nil {return nil ,_egcb ;};_adc .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_faac ),_faac );_gfbg =_faac ;}else {_adc .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_egeb );return nil ,_ba .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_gfbg )< _ggggd .Base .GetNumComponents ()*(_ggggd .HiVal +1){_adc .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_adc .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_gfbg ),_ggggd .Base .GetNumComponents (),_ggggd .HiVal );}else {_gfbg =_gfbg [:_ggggd .Base .GetNumComponents ()*(_ggggd .HiVal +1)];};_ggggd ._cddad =_gfbg ;return _ggggd ,nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _fee .PdfObject ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_dcab *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebeec ,_eaea :=_fee .GetNumbersAsFloat (objects );if _eaea !=nil {return nil ,_eaea ;};return _dcab .ColorFromFloats (_ebeec );};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_dafcba *PdfReader )GetNamedDestinations ()(_fee .PdfObject ,error ){_ccefe :=_fee .ResolveReference (_dafcba ._egdgd .Get ("\u004e\u0061\u006de\u0073"));if _ccefe ==nil {return nil ,nil ;};if !_dafcba ._cgff {_bfbc :=_dafcba .traverseObjectData (_ccefe );if _bfbc !=nil {return nil ,_bfbc ;};};return _ccefe ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_dfag *PdfColorspaceLab )GetNumComponents ()int {return 3};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_fbbgc *PdfOutlineItem )GetContainingPdfObject ()_fee .PdfObject {return _fbbgc ._cgdg };

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bfc .Permissions ;Algorithm EncryptionAlgorithm ;};func _adbbb ()string {if len (_cefg )> 0{return _cefg ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func (_bagf *PdfWriter )addObjects (_agacg _fee .PdfObject )error {_adc .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _gffgg ,_begc :=_agacg .(*_fee .PdfIndirectObject );_begc {_adc .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_adc .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_agacg ,_gffgg );_adc .Log .Trace ("\u002d\u0020\u0025\u0073",_gffgg .PdfObject );if _bagf .addObject (_gffgg ){_ebcfg :=_bagf .addObjects (_gffgg .PdfObject );if _ebcfg !=nil {return _ebcfg ;};};return nil ;};if _gedbf ,_efbdb :=_agacg .(*_fee .PdfObjectStream );_efbdb {_adc .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_adc .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_agacg ,_agacg );if _bagf .addObject (_gedbf ){_gefb :=_bagf .addObjects (_gedbf .PdfObjectDictionary );if _gefb !=nil {return _gefb ;};};return nil ;};if _agaag ,_ebgac :=_agacg .(*_fee .PdfObjectDictionary );_ebgac {_adc .Log .Trace ("\u0044\u0069\u0063\u0074");_adc .Log .Trace ("\u002d\u0020\u0025\u0073",_agacg );for _ ,_dfcc :=range _agaag .Keys (){_ddadd :=_agaag .Get (_dfcc );if _bace ,_deeag :=_ddadd .(*_fee .PdfObjectReference );_deeag {_ddadd =_bace .Resolve ();_agaag .Set (_dfcc ,_ddadd );};if _dfcc !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _cgcaa :=_bagf .addObjects (_ddadd );_cgcaa !=nil {return _cgcaa ;};}else {if _ ,_gggbd :=_ddadd .(*_fee .PdfObjectNull );_gggbd {continue ;};if _ecegf :=_bagf .hasObject (_ddadd );!_ecegf {_adc .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_ddadd ,_ddadd ,_ddadd );_bagf ._fgcec [_ddadd ]=append (_bagf ._fgcec [_ddadd ],_agaag );};};};return nil ;};if _ggda ,_adge :=_agacg .(*_fee .PdfObjectArray );_adge {_adc .Log .Trace ("\u0041\u0072\u0072a\u0079");_adc .Log .Trace ("\u002d\u0020\u0025\u0073",_agacg );if _ggda ==nil {return _beg .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _gfdbe ,_eceb :=range _ggda .Elements (){if _bbgfa ,_dbbac :=_eceb .(*_fee .PdfObjectReference );_dbbac {_eceb =_bbgfa .Resolve ();_ggda .Set (_gfdbe ,_eceb );};if _bdfga :=_bagf .addObjects (_eceb );_bdfga !=nil {return _bdfga ;};};return nil ;};if _ ,_agbde :=_agacg .(*_fee .PdfObjectReference );_agbde {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_agacg );return _beg .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gdeb *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gdeb .RunesToCharcodeBytes ([]rune (str ));};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_bgdc *PdfColorspaceDeviceN )ToPdfObject ()_fee .PdfObject {_gdga :=_fee .MakeArray (_fee .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_gdga .Append (_bgdc .ColorantNames );_gdga .Append (_bgdc .AlternateSpace .ToPdfObject ());_gdga .Append (_bgdc .TintTransform .ToPdfObject ());if _bgdc .Attributes !=nil {_gdga .Append (_bgdc .Attributes .ToPdfObject ());};if _bgdc ._ecacb !=nil {_bgdc ._ecacb .PdfObject =_gdga ;return _bgdc ._ecacb ;};return _gdga ;};

// ToPdfObject converts date to a PDF string object.
func (_bbcd *PdfDate )ToPdfObject ()_fee .PdfObject {_aecaf :=_ba .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bbcd ._agfda ,_bbcd ._dgaac ,_bbcd ._gfgad ,_bbcd ._cgbab ,_bbcd ._fdcba ,_bbcd ._dbead ,_bbcd ._adbe ,_bbcd ._eebfg ,_bbcd ._bafga );return _fee .MakeString (_aecaf );};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_dfee *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _abdb []float64 ;for _cggc :=0;_cggc < _dfee .GetNumComponents ();_cggc ++{_abdb =append (_abdb ,0.0,1.0);};return _abdb ;};func _bcceb (_aaga *_fee .PdfObjectStream )(*PdfFunctionType4 ,error ){_begf :=&PdfFunctionType4 {};_begf ._geag =_aaga ;_bccfd :=_aaga .PdfObjectDictionary ;_gffag ,_fbfg :=_fee .TraceToDirectObject (_bccfd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fee .PdfObjectArray );if !_fbfg {_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gffag .Len ()%2!=0{_adc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_beg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fcbcd ,_acage :=_gffag .ToFloat64Array ();if _acage !=nil {return nil ,_acage ;};_begf .Domain =_fcbcd ;_gffag ,_fbfg =_fee .TraceToDirectObject (_bccfd .Get ("\u0052\u0061\u006eg\u0065")).(*_fee .PdfObjectArray );if _fbfg {if _gffag .Len ()< 0||_gffag .Len ()%2!=0{return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bdeg ,_ccdgf :=_gffag .ToFloat64Array ();if _ccdgf !=nil {return nil ,_ccdgf ;};_begf .Range =_bdeg ;};_cdedb ,_acage :=_fee .DecodeStream (_aaga );if _acage !=nil {return nil ,_acage ;};_begf ._dfcgg =_cdedb ;_cdbcb :=_bac .NewPSParser ([]byte (_cdedb ));_cdeca ,_acage :=_cdbcb .Parse ();if _acage !=nil {return nil ,_acage ;};_begf .Program =_cdeca ;return _begf ,nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_dbgb *PdfPageResources )SetShadingByName (keyName _fee .PdfObjectName ,shadingObj _fee .PdfObject )error {if _dbgb .Shading ==nil {_dbgb .Shading =_fee .MakeDict ();};_gaag ,_efgb :=_dbgb .Shading .(*_fee .PdfObjectDictionary );if !_efgb {return _fee .ErrTypeError ;};_gaag .Set (keyName ,shadingObj );return nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_abca ,_cafa :=_cg .NewStdFontByName (HelveticaName );if !_cafa {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_fedef :=_fbcd (_abca );return &PdfFont {_ddaad :&_fedef };};func (_dfe *PdfReader )newPdfActionMovieFromDict (_afc *_fee .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_afc .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_afc .Get ("\u0054"),Operation :_afc .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_afca *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_adc .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_adc .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_adc .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_adc .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_agga ,_ffgb :=_ffg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._babdc ,img ._gbaa );if _ffgb !=nil {return Image {},_ffgb ;};_fgef ,_ffgb :=_ffg .NRGBAConverter .Convert (_agga );if _ffgb !=nil {return Image {},_ffgb ;};return _edabc (_fgef .Base ()),nil ;};func (_ade *PdfFilespec )getDict ()*_fee .PdfObjectDictionary {if _fbedc ,_gbba :=_ade ._acfd .(*_fee .PdfIndirectObject );_gbba {_cbfc ,_dacd :=_fbedc .PdfObject .(*_fee .PdfObjectDictionary );if !_dacd {return nil ;};return _cbfc ;}else if _dgeef ,_dbfa :=_ade ._acfd .(*_fee .PdfObjectDictionary );_dbfa {return _dgeef ;}else {_adc .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_ade ._acfd );return nil ;};};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _fee .PdfObject ;T3DV _fee .PdfObject ;T3DA _fee .PdfObject ;T3DI _fee .PdfObject ;T3DB _fee .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_badd pdfCIDFontType2 )GetCharMetrics (code _de .CharCode )(_cg .CharMetrics ,bool ){if _cfeb ,_eggbf :=_badd ._bbeg [code ];_eggbf {return _cg .CharMetrics {Wx :float64 (_cfeb )},true ;};_dffge :=rune (code );_cbfbf ,_cdgd :=_badd ._eefa [_dffge ];if !_cdgd {_cbfbf =int (_badd ._gcea );};return _cg .CharMetrics {Wx :float64 (_cbfbf )},true ;};type pdfSignDictionary struct{*_fee .PdfObjectDictionary ;_fcbf *SignatureHandler ;_ecceb *PdfSignature ;_aaedd int64 ;_abeef int ;_eeced int ;_fggf int ;_eebfb int ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _fee .PdfObject ;Flags _fee .PdfObject ;};func (_gabb *PdfReader )newPdfAnnotation3DFromDict (_affb *_fee .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_dccd :=PdfAnnotation3D {};_dccd .T3DD =_affb .Get ("\u0033\u0044\u0044");_dccd .T3DV =_affb .Get ("\u0033\u0044\u0056");_dccd .T3DA =_affb .Get ("\u0033\u0044\u0041");_dccd .T3DI =_affb .Get ("\u0033\u0044\u0049");_dccd .T3DB =_affb .Get ("\u0033\u0044\u0042");return &_dccd ,nil ;};func (_eeec *PdfReader )newPdfAnnotationRedactFromDict (_gfac *_fee .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fedb :=PdfAnnotationRedact {};_abbc ,_dgda :=_eeec .newPdfAnnotationMarkupFromDict (_gfac );if _dgda !=nil {return nil ,_dgda ;};_fedb .PdfAnnotationMarkup =_abbc ;_fedb .QuadPoints =_gfac .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fedb .IC =_gfac .Get ("\u0049\u0043");_fedb .RO =_gfac .Get ("\u0052\u004f");_fedb .OverlayText =_gfac .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_fedb .Repeat =_gfac .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fedb .DA =_gfac .Get ("\u0044\u0041");_fedb .Q =_gfac .Get ("\u0051");return &_fedb ,nil ;};

// B returns the value of the B component of the color.
func (_eefb *PdfColorCalRGB )B ()float64 {return float64 (_eefb [1])};func (_geda *PdfReader )newPdfActionImportDataFromDict (_ffaa *_fee .PdfObjectDictionary )(*PdfActionImportData ,error ){_cda ,_caa :=_dcg (_ffaa .Get ("\u0046"));if _caa !=nil {return nil ,_caa ;};return &PdfActionImportData {F :_cda },nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_ebacb *DSS )GetContainingPdfObject ()_fee .PdfObject {return _ebacb ._adfea };

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// MergePageWith appends page content to source Pdf file page content.
func (_gagb *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_cbab :=pageNum -1;var _bge *PdfPage ;for _ecfe ,_gaba :=range _gagb ._facda {if _ecfe ==_cbab {_bge =_gaba ;};};if _bge ==nil {return _ba .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _bge ._abdg !=nil &&_bge ._abdg .GetParser ()==_gagb ._agaa ._daae {_bge =_bge .Duplicate ();_gagb ._facda [_cbab ]=_bge ;};page =page .Duplicate ();_eacdc (page );_dgbb :=_eaca (_bge );_gccc :=_eaca (page );_afbbbf :=make (map[_fee .PdfObjectName ]_fee .PdfObjectName );for _ggbg :=range _gccc {if _ ,_ecfg :=_dgbb [_ggbg ];_ecfg {for _bccgf :=1;true ;_bccgf ++{_gdba :=_fee .PdfObjectName (string (_ggbg )+_af .Itoa (_bccgf ));if _ ,_dfafb :=_dgbb [_gdba ];!_dfafb {_afbbbf [_ggbg ]=_gdba ;break ;};};};};_dgfc ,_dage :=page .GetContentStreams ();if _dage !=nil {return _dage ;};_cffaa ,_dage :=_bge .GetContentStreams ();if _dage !=nil {return _dage ;};for _egf ,_ddeb :=range _dgfc {for _ebbc ,_dec :=range _afbbbf {_ddeb =_ebc .Replace (_ddeb ,"\u002f"+string (_ebbc ),"\u002f"+string (_dec ),-1);};_dgfc [_egf ]=_ddeb ;};_cffaa =append (_cffaa ,_dgfc ...);if _afag :=_bge .SetContentStreams (_cffaa ,_fee .NewFlateEncoder ());_afag !=nil {return _afag ;};for _ ,_ggccf :=range page ._dacea {_bge ._dacea =append (_bge ._dacea ,_ggccf );};if _bge .Resources ==nil {_bge .Resources =NewPdfPageResources ();};if page .Resources !=nil {_bge .Resources .Font =_gagb .mergeResources (_bge .Resources .Font ,page .Resources .Font ,_afbbbf );_bge .Resources .XObject =_gagb .mergeResources (_bge .Resources .XObject ,page .Resources .XObject ,_afbbbf );_bge .Resources .Properties =_gagb .mergeResources (_bge .Resources .Properties ,page .Resources .Properties ,_afbbbf );if _bge .Resources .ProcSet ==nil {_bge .Resources .ProcSet =page .Resources .ProcSet ;};_bge .Resources .Shading =_gagb .mergeResources (_bge .Resources .Shading ,page .Resources .Shading ,_afbbbf );_bge .Resources .ExtGState =_gagb .mergeResources (_bge .Resources .ExtGState ,page .Resources .ExtGState ,_afbbbf );};_dggd ,_dage :=_bge .GetMediaBox ();if _dage !=nil {return _dage ;};_aedag ,_dage :=page .GetMediaBox ();if _dage !=nil {return _dage ;};var _efc bool ;if _dggd .Llx > _aedag .Llx {_dggd .Llx =_aedag .Llx ;_efc =true ;};if _dggd .Lly > _aedag .Lly {_dggd .Lly =_aedag .Lly ;_efc =true ;};if _dggd .Urx < _aedag .Urx {_dggd .Urx =_aedag .Urx ;_efc =true ;};if _dggd .Ury < _aedag .Ury {_dggd .Ury =_aedag .Ury ;_efc =true ;};if _efc {_bge .MediaBox =_dggd ;};return nil ;};func (_fbbaa *PdfReader )resolveReference (_dccaf *_fee .PdfObjectReference )(_fee .PdfObject ,bool ,error ){_edgbe ,_aaafe :=_fbbaa ._daae .ObjCache [int (_dccaf .ObjectNumber )];if !_aaafe {_adc .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_dccaf );_beefa ,_babdb :=_fbbaa ._daae .LookupByReference (*_dccaf );if _babdb !=nil {return nil ,false ,_babdb ;};_fbbaa ._daae .ObjCache [int (_dccaf .ObjectNumber )]=_beefa ;return _beefa ,false ,nil ;};return _edgbe ,true ,nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_gbbbb *PdfPage )GetPageAsIndirectObject ()*_fee .PdfIndirectObject {return _gbbbb ._abdg };

// Items returns all children outline items.
func (_ebgf *Outline )Items ()[]*OutlineItem {return _ebgf .Entries };func _dcg (_eac _fee .PdfObject )(*PdfFilespec ,error ){if _eac ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_eac );};func (_cgbb *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _befc []*PdfFieldSignature ;for _ ,_edaee :=range _cgbb .AllFields (){switch _eegf :=_edaee .GetContext ().(type ){case *PdfFieldSignature :_gecb :=_eegf ;_befc =append (_befc ,_gecb );};};return _befc ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_bded :=NewPdfAnnotation ();_bag :=&PdfAnnotationPolyLine {};_bag .PdfAnnotation =_bded ;_bag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bded .SetContext (_bag );return _bag ;};

// SetDate sets the `M` field of the signature.
func (_bfec *PdfSignature )SetDate (date _e .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_bfec .M =_fee .MakeString (date .Format (format ));};func _eecgb (_bcbagg []byte )bool {if len (_bcbagg )< 4{return true ;};for _cfgdde :=range _bcbagg [:4]{_ccga :=rune (_cfgdde );if !_eg .Is (_eg .ASCII_Hex_Digit ,_ccga )&&!_eg .IsSpace (_ccga ){return true ;};};return false ;};func _eadb (_geadc *_fee .PdfObjectDictionary )(*PdfFieldButton ,error ){_faeag :=&PdfFieldButton {};_faeag .Opt ,_ =_fee .GetArray (_geadc .Get ("\u004f\u0070\u0074"));return _faeag ,nil ;};

// SetVersion sets the PDF version of the output file.
func (_bcced *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_bcced ._dfedf =majorVersion ;_bcced ._gfbgc =minorVersion ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_faga :=PdfColorCalRGB {a ,b ,c };return &_faga ;};

// SetFlag sets the flag for the field.
func (_ceaaf *PdfField )SetFlag (flag FieldFlag ){_ceaaf .Ff =_fee .MakeInteger (int64 (flag ))};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_acdfe *PdfFont )GetCharMetrics (code _de .CharCode )(CharMetrics ,bool ){var _cbcfc _cg .CharMetrics ;switch _bbge :=_acdfe ._ddaad .(type ){case *pdfFontSimple :if _bcdef ,_gbcgf :=_bbge .GetCharMetrics (code );_gbcgf {return _bcdef ,_gbcgf ;};case *pdfFontType0 :if _acda ,_aeca :=_bbge .GetCharMetrics (code );_aeca {return _acda ,_aeca ;};case *pdfCIDFontType0 :if _fdgg ,_afgff :=_bbge .GetCharMetrics (code );_afgff {return _fdgg ,_afgff ;};case *pdfCIDFontType2 :if _cdba ,_gaee :=_bbge .GetCharMetrics (code );_gaee {return _cdba ,_gaee ;};default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_acdfe ._ddaad );return _cbcfc ,false ;};if _gdea ,_faebc :=_acdfe .GetFontDescriptor ();_faebc ==nil &&_gdea !=nil {return _cg .CharMetrics {Wx :_gdea ._dffb },true ;};_adc .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_acdfe );return _cbcfc ,false ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_aefc :=NewPdfAnnotation ();_cffe :=&PdfAnnotationWidget {};_cffe .PdfAnnotation =_aefc ;_aefc .SetContext (_cffe );return _cffe ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_fdaf *PdfPage )SetContentStreams (cStreams []string ,encoder _fee .StreamEncoder )error {if len (cStreams )==0{_fdaf .Contents =nil ;return nil ;};if encoder ==nil {encoder =_fee .NewRawEncoder ();};var _geecg []*_fee .PdfObjectStream ;for _ ,_dcee :=range cStreams {_gcba :=&_fee .PdfObjectStream {};_eeefg :=encoder .MakeStreamDict ();_fgebg ,_bfdfb :=encoder .EncodeBytes ([]byte (_dcee ));if _bfdfb !=nil {return _bfdfb ;};_eeefg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fee .MakeInteger (int64 (len (_fgebg ))));_gcba .PdfObjectDictionary =_eeefg ;_gcba .Stream =[]byte (_fgebg );_geecg =append (_geecg ,_gcba );};if len (_geecg )==1{_fdaf .Contents =_geecg [0];}else {_ecbga :=_fee .MakeArray ();for _ ,_dged :=range _geecg {_ecbga .Append (_dged );};_fdaf .Contents =_ecbga ;};return nil ;};

// ToInteger convert to an integer format.
func (_dcdfg *PdfColorCalGray )ToInteger (bits int )uint32 {_agaec :=_eba .Pow (2,float64 (bits ))-1;return uint32 (_agaec *_dcdfg .Val ());};func (_gdg *PdfReader )newPdfAnnotationWidgetFromDict (_gbdf *_fee .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_fagd :=PdfAnnotationWidget {};_fagd .H =_gbdf .Get ("\u0048");_fagd .MK =_gbdf .Get ("\u004d\u004b");_fagd .A =_gbdf .Get ("\u0041");_fagd .AA =_gbdf .Get ("\u0041\u0041");_fagd .BS =_gbdf .Get ("\u0042\u0053");_fagd .Parent =_gbdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_fagd ,nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_afg :=NewPdfAnnotation ();_adcc :=&PdfAnnotationStrikeOut {};_adcc .PdfAnnotation =_afg ;_adcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afg .SetContext (_adcc );return _adcc ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_fagf *PdfAnnotationWidget )Field ()*PdfField {return _fagf ._agg };

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_fee .PdfObjectArray ;ExtGState _fee .PdfObject ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_eeg :=NewPdfAnnotation ();_cff :=&PdfAnnotationPopup {};_cff .PdfAnnotation =_eeg ;_eeg .SetContext (_cff );return _cff ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebea *PdfColorspaceDeviceCMYK )ToPdfObject ()_fee .PdfObject {return _fee .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_gcdfa *PdfOutline )GetContainingPdfObject ()_fee .PdfObject {return _gcdfa ._cdgcf };func _afacf (_ddbc StdFontName )(pdfFontSimple ,error ){_gcac ,_cggd :=_cg .NewStdFontByName (_ddbc );if !_cggd {return pdfFontSimple {},ErrFontNotSupported ;};_eafd :=_fbcd (_gcac );return _eafd ,nil ;};func (_dfcec *LTV )getCerts (_dcbb []*_d .Certificate )([][]byte ,error ){_ggbada :=make ([][]byte ,0,len (_dcbb ));for _ ,_gggc :=range _dcbb {_ggbada =append (_ggbada ,_gggc .Raw );};return _ggbada ,nil ;};func (_fdad *PdfReader )newPdfAnnotationPolygonFromDict (_daec *_fee .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_dcef :=PdfAnnotationPolygon {};_dcfa ,_baba :=_fdad .newPdfAnnotationMarkupFromDict (_daec );if _baba !=nil {return nil ,_baba ;};_dcef .PdfAnnotationMarkup =_dcfa ;_dcef .Vertices =_daec .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dcef .LE =_daec .Get ("\u004c\u0045");_dcef .BS =_daec .Get ("\u0042\u0053");_dcef .IC =_daec .Get ("\u0049\u0043");_dcef .BE =_daec .Get ("\u0042\u0045");_dcef .IT =_daec .Get ("\u0049\u0054");_dcef .Measure =_daec .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dcef ,nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _fee .PdfObject ;Name _fee .PdfObject ;State _fee .PdfObject ;StateModel _fee .PdfObject ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_deda *PdfPage )Duplicate ()*PdfPage {var _fefa PdfPage ;_fefa =*_deda ;_fefa ._eddb =_fee .MakeDict ();_fefa ._abdg =_fee .MakeIndirectObject (_fefa ._eddb );return &_fefa ;};func _bfcfa ()string {return _gagde };func (_aefcd *PdfReader )newPdfAnnotationFromIndirectObject (_facd *_fee .PdfIndirectObject )(*PdfAnnotation ,error ){_ggfb ,_fce :=_facd .PdfObject .(*_fee .PdfObjectDictionary );if !_fce {return nil ,_ba .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_aefcd ._abgg .GetModelFromPrimitive (_ggfb );model !=nil {_bbag ,_aee :=model .(*PdfAnnotation );if !_aee {return nil ,_ba .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _bbag ,nil ;};_cgc :=&PdfAnnotation {};_cgc ._gdc =_facd ;_aefcd ._abgg .Register (_ggfb ,_cgc );if _bfcd :=_ggfb .Get ("\u0054\u0079\u0070\u0065");_bfcd !=nil {_dcd ,_aga :=_bfcd .(*_fee .PdfObjectName );if !_aga {_adc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bfcd );}else {if *_dcd !="\u0041\u006e\u006eo\u0074"{_adc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_dcd );};};};if _agaf :=_ggfb .Get ("\u0052\u0065\u0063\u0074");_agaf !=nil {_cgc .Rect =_agaf ;};if _bcd :=_ggfb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bcd !=nil {_cgc .Contents =_bcd ;};if _cbdb :=_ggfb .Get ("\u0050");_cbdb !=nil {_cgc .P =_cbdb ;};if _bfca :=_ggfb .Get ("\u004e\u004d");_bfca !=nil {_cgc .NM =_bfca ;};if _beab :=_ggfb .Get ("\u004d");_beab !=nil {_cgc .M =_beab ;};if _dgf :=_ggfb .Get ("\u0046");_dgf !=nil {_cgc .F =_dgf ;};if _abcf :=_ggfb .Get ("\u0041\u0050");_abcf !=nil {_cgc .AP =_abcf ;};if _bce :=_ggfb .Get ("\u0041\u0053");_bce !=nil {_cgc .AS =_bce ;};if _aaa :=_ggfb .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_aaa !=nil {_cgc .Border =_aaa ;};if _ggc :=_ggfb .Get ("\u0043");_ggc !=nil {_cgc .C =_ggc ;};if _ecg :=_ggfb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ecg !=nil {_cgc .StructParent =_ecg ;};if _ecgf :=_ggfb .Get ("\u004f\u0043");_ecgf !=nil {_cgc .OC =_ecgf ;};_dad :=_ggfb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _dad ==nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_cgc ._gbfd =nil ;return _cgc ,nil ;};_abd ,_gdf :=_dad .(*_fee .PdfObjectName );if !_gdf {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dad );return nil ,_ba .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_dad );};switch *_abd {case "\u0054\u0065\u0078\u0074":_abdd ,_bfeg :=_aefcd .newPdfAnnotationTextFromDict (_ggfb );if _bfeg !=nil {return nil ,_bfeg ;};_abdd .PdfAnnotation =_cgc ;_cgc ._gbfd =_abdd ;return _cgc ,nil ;case "\u004c\u0069\u006e\u006b":_ebcc ,_dff :=_aefcd .newPdfAnnotationLinkFromDict (_ggfb );if _dff !=nil {return nil ,_dff ;};_ebcc .PdfAnnotation =_cgc ;_cgc ._gbfd =_ebcc ;return _cgc ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_dacg ,_bccf :=_aefcd .newPdfAnnotationFreeTextFromDict (_ggfb );if _bccf !=nil {return nil ,_bccf ;};_dacg .PdfAnnotation =_cgc ;_cgc ._gbfd =_dacg ;return _cgc ,nil ;case "\u004c\u0069\u006e\u0065":_aedae ,_bga :=_aefcd .newPdfAnnotationLineFromDict (_ggfb );if _bga !=nil {return nil ,_bga ;};_aedae .PdfAnnotation =_cgc ;_cgc ._gbfd =_aedae ;_adc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_cgc ,_cgc );_adc .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_aedae ,_aedae );_adc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_aedae .PdfAnnotationMarkup ,_aedae .PdfAnnotationMarkup );return _cgc ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_ege ,_cbdf :=_aefcd .newPdfAnnotationSquareFromDict (_ggfb );if _cbdf !=nil {return nil ,_cbdf ;};_ege .PdfAnnotation =_cgc ;_cgc ._gbfd =_ege ;return _cgc ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_egb ,_dgfg :=_aefcd .newPdfAnnotationCircleFromDict (_ggfb );if _dgfg !=nil {return nil ,_dgfg ;};_egb .PdfAnnotation =_cgc ;_cgc ._gbfd =_egb ;return _cgc ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_baag ,_aff :=_aefcd .newPdfAnnotationPolygonFromDict (_ggfb );if _aff !=nil {return nil ,_aff ;};_baag .PdfAnnotation =_cgc ;_cgc ._gbfd =_baag ;return _cgc ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fef ,_ebdac :=_aefcd .newPdfAnnotationPolyLineFromDict (_ggfb );if _ebdac !=nil {return nil ,_ebdac ;};_fef .PdfAnnotation =_cgc ;_cgc ._gbfd =_fef ;return _cgc ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_dba ,_ebcg :=_aefcd .newPdfAnnotationHighlightFromDict (_ggfb );if _ebcg !=nil {return nil ,_ebcg ;};_dba .PdfAnnotation =_cgc ;_cgc ._gbfd =_dba ;return _cgc ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_agb ,_feag :=_aefcd .newPdfAnnotationUnderlineFromDict (_ggfb );if _feag !=nil {return nil ,_feag ;};_agb .PdfAnnotation =_cgc ;_cgc ._gbfd =_agb ;return _cgc ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bdb ,_dgdc :=_aefcd .newPdfAnnotationSquigglyFromDict (_ggfb );if _dgdc !=nil {return nil ,_dgdc ;};_bdb .PdfAnnotation =_cgc ;_cgc ._gbfd =_bdb ;return _cgc ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_eab ,_egee :=_aefcd .newPdfAnnotationStrikeOut (_ggfb );if _egee !=nil {return nil ,_egee ;};_eab .PdfAnnotation =_cgc ;_cgc ._gbfd =_eab ;return _cgc ,nil ;case "\u0043\u0061\u0072e\u0074":_dbd ,_cfd :=_aefcd .newPdfAnnotationCaretFromDict (_ggfb );if _cfd !=nil {return nil ,_cfd ;};_dbd .PdfAnnotation =_cgc ;_cgc ._gbfd =_dbd ;return _cgc ,nil ;case "\u0053\u0074\u0061m\u0070":_efb ,_egbd :=_aefcd .newPdfAnnotationStampFromDict (_ggfb );if _egbd !=nil {return nil ,_egbd ;};_efb .PdfAnnotation =_cgc ;_cgc ._gbfd =_efb ;return _cgc ,nil ;case "\u0049\u006e\u006b":_bcaa ,_ceec :=_aefcd .newPdfAnnotationInkFromDict (_ggfb );if _ceec !=nil {return nil ,_ceec ;};_bcaa .PdfAnnotation =_cgc ;_cgc ._gbfd =_bcaa ;return _cgc ,nil ;case "\u0050\u006f\u0070u\u0070":_fgcf ,_bbg :=_aefcd .newPdfAnnotationPopupFromDict (_ggfb );if _bbg !=nil {return nil ,_bbg ;};_fgcf .PdfAnnotation =_cgc ;_cgc ._gbfd =_fgcf ;return _cgc ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_cbg ,_bfea :=_aefcd .newPdfAnnotationFileAttachmentFromDict (_ggfb );if _bfea !=nil {return nil ,_bfea ;};_cbg .PdfAnnotation =_cgc ;_cgc ._gbfd =_cbg ;return _cgc ,nil ;case "\u0053\u006f\u0075n\u0064":_gbgfb ,_eed :=_aefcd .newPdfAnnotationSoundFromDict (_ggfb );if _eed !=nil {return nil ,_eed ;};_gbgfb .PdfAnnotation =_cgc ;_cgc ._gbfd =_gbgfb ;return _cgc ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_ggde ,_dcdb :=_aefcd .newPdfAnnotationRichMediaFromDict (_ggfb );if _dcdb !=nil {return nil ,_dcdb ;};_ggde .PdfAnnotation =_cgc ;_cgc ._gbfd =_ggde ;return _cgc ,nil ;case "\u004d\u006f\u0076i\u0065":_gdfc ,_afcb :=_aefcd .newPdfAnnotationMovieFromDict (_ggfb );if _afcb !=nil {return nil ,_afcb ;};_gdfc .PdfAnnotation =_cgc ;_cgc ._gbfd =_gdfc ;return _cgc ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_dcf ,_gce :=_aefcd .newPdfAnnotationScreenFromDict (_ggfb );if _gce !=nil {return nil ,_gce ;};_dcf .PdfAnnotation =_cgc ;_cgc ._gbfd =_dcf ;return _cgc ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_aaed ,_gfeb :=_aefcd .newPdfAnnotationWidgetFromDict (_ggfb );if _gfeb !=nil {return nil ,_gfeb ;};_aaed .PdfAnnotation =_cgc ;_cgc ._gbfd =_aaed ;return _cgc ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gedc ,_gbgb :=_aefcd .newPdfAnnotationPrinterMarkFromDict (_ggfb );if _gbgb !=nil {return nil ,_gbgb ;};_gedc .PdfAnnotation =_cgc ;_cgc ._gbfd =_gedc ;return _cgc ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_fdg ,_cac :=_aefcd .newPdfAnnotationTrapNetFromDict (_ggfb );if _cac !=nil {return nil ,_cac ;};_fdg .PdfAnnotation =_cgc ;_cgc ._gbfd =_fdg ;return _cgc ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_cad ,_ggdb :=_aefcd .newPdfAnnotationWatermarkFromDict (_ggfb );if _ggdb !=nil {return nil ,_ggdb ;};_cad .PdfAnnotation =_cgc ;_cgc ._gbfd =_cad ;return _cgc ,nil ;case "\u0033\u0044":_gag ,_eedf :=_aefcd .newPdfAnnotation3DFromDict (_ggfb );if _eedf !=nil {return nil ,_eedf ;};_gag .PdfAnnotation =_cgc ;_cgc ._gbfd =_gag ;return _cgc ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_eedc ,_fcee :=_aefcd .newPdfAnnotationProjectionFromDict (_ggfb );if _fcee !=nil {return nil ,_fcee ;};_eedc .PdfAnnotation =_cgc ;_cgc ._gbfd =_eedc ;return _cgc ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_bcdd ,_afgf :=_aefcd .newPdfAnnotationRedactFromDict (_ggfb );if _afgf !=nil {return nil ,_afgf ;};_bcdd .PdfAnnotation =_cgc ;_cgc ._gbfd =_bcdd ;return _cgc ,nil ;};_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_abd );return nil ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_cgadae []byte ;_caced []uint32 ;_bfdcd *_fee .PdfObjectStream ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_fcfage *_fee .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_fee .PdfObjectName ;Filter *_fee .PdfObjectName ;SubFilter *_fee .PdfObjectName ;Contents *_fee .PdfObjectString ;Cert _fee .PdfObject ;ByteRange *_fee .PdfObjectArray ;Reference *_fee .PdfObjectArray ;Changes *_fee .PdfObjectArray ;Name *_fee .PdfObjectString ;M *_fee .PdfObjectString ;Location *_fee .PdfObjectString ;Reason *_fee .PdfObjectString ;ContactInfo *_fee .PdfObjectString ;R *_fee .PdfObjectInteger ;V *_fee .PdfObjectInteger ;PropBuild *_fee .PdfObjectDictionary ;PropAuthTime *_fee .PdfObjectInteger ;PropAuthType *_fee .PdfObjectName ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_fee .PdfObjectArray ;TI *_fee .PdfObjectInteger ;I *_fee .PdfObjectArray ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gcggfe *PdfColorspaceSpecialSeparation )ToPdfObject ()_fee .PdfObject {_decaf :=_fee .MakeArray (_fee .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_decaf .Append (_gcggfe .ColorantName );_decaf .Append (_gcggfe .AlternateSpace .ToPdfObject ());_decaf .Append (_gcggfe .TintTransform .ToPdfObject ());if _gcggfe ._faee !=nil {_gcggfe ._faee .PdfObject =_decaf ;return _gcggfe ._faee ;};return _decaf ;};

// AddOutlineTree adds outlines to a PDF file.
func (_fggg *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_fggg ._cdffb =outlineTree };func (_cca *PdfReader )newPdfAnnotationSquigglyFromDict (_adb *_fee .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_dfab :=PdfAnnotationSquiggly {};_ddcfc ,_ggcc :=_cca .newPdfAnnotationMarkupFromDict (_adb );if _ggcc !=nil {return nil ,_ggcc ;};_dfab .PdfAnnotationMarkup =_ddcfc ;_dfab .QuadPoints =_adb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dfab ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_edea *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _edea .AlternateSpace ==nil {return nil ,_beg .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _edea .AlternateSpace .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_dga *PdfActionMovie )ToPdfObject ()_fee .PdfObject {_dga .PdfAction .ToPdfObject ();_acc :=_dga ._fg ;_acf :=_acc .PdfObject .(*_fee .PdfObjectDictionary );_acf .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeMovie )));_acf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_dga .Annotation );_acf .SetIfNotNil ("\u0054",_dga .T );_acf .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_dga .Operation );return _acc ;};

// Encoder returns the font's text encoder.
func (_bafe pdfCIDFontType0 )Encoder ()_de .TextEncoder {return _bafe ._eebe };

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_faeb *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_bbcac :=_ef .NewReader (img .getBase ());_cbag :=_ffg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_faeb .AlternateSpace .GetNumComponents (),nil ,img ._babdc ,nil );_fbad :=_ef .NewWriter (_cbag );_gega :=_eba .Pow (2,float64 (img .BitsPerComponent ))-1;_adc .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_adc .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_faeb .TintTransform );_gbgfg :=_faeb .AlternateSpace .DecodeArray ();var (_bfaa uint32 ;_gecd error ;);for {_bfaa ,_gecd =_bbcac .ReadSample ();if _gecd ==_be .EOF {break ;};if _gecd !=nil {return img ,_gecd ;};_cebg :=float64 (_bfaa )/_gega ;_gbcdc ,_ebgd :=_faeb .TintTransform .Evaluate ([]float64 {_cebg });if _ebgd !=nil {return img ,_ebgd ;};for _bafg ,_bcdg :=range _gbcdc {_gbcac :=_ffg .LinearInterpolate (_bcdg ,_gbgfg [_bafg *2],_gbgfg [_bafg *2+1],0,1);if _ebgd =_fbad .WriteSample (uint32 (_gbcac *_gega ));_ebgd !=nil {return img ,_ebgd ;};};};return _faeb .AlternateSpace .ImageToRGB (_edabc (&_cbag ));};

// ToPdfObject implements interface PdfModel.
func (_gdcd *PdfAnnotationSquiggly )ToPdfObject ()_fee .PdfObject {_gdcd .PdfAnnotation .ToPdfObject ();_gbb :=_gdcd ._gdc ;_afgg :=_gbb .PdfObject .(*_fee .PdfObjectDictionary );_gdcd .PdfAnnotationMarkup .appendToPdfDictionary (_afgg );_afgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_afgg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdcd .QuadPoints );return _gbb ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_gbeg FieldFlag )Mask ()uint32 {return uint32 (_gbeg )};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_fdda *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cggb _be .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_gfgda _cd .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_afeef _cd .Image )(*Image ,error );

// Compress an image.
Compress (_ebbdd *Image ,_aaee int64 )(*Image ,error );};func (_ffac *PdfAnnotationMarkup )appendToPdfDictionary (_aaff *_fee .PdfObjectDictionary ){_aaff .SetIfNotNil ("\u0054",_ffac .T );if _ffac .Popup !=nil {_aaff .Set ("\u0050\u006f\u0070u\u0070",_ffac .Popup .ToPdfObject ());};_aaff .SetIfNotNil ("\u0043\u0041",_ffac .CA );_aaff .SetIfNotNil ("\u0052\u0043",_ffac .RC );_aaff .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ffac .CreationDate );_aaff .SetIfNotNil ("\u0049\u0052\u0054",_ffac .IRT );_aaff .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ffac .Subj );_aaff .SetIfNotNil ("\u0052\u0054",_ffac .RT );_aaff .SetIfNotNil ("\u0049\u0054",_ffac .IT );_aaff .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ffac .ExData );};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ge :=NewPdfAction ();_ae :=&PdfActionGoToE {};_ae .PdfAction =_ge ;_ge .SetContext (_ae );return _ae ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_gg :=NewPdfAction ();_bacd :=&PdfActionThread {};_bacd .PdfAction =_gg ;_gg .SetContext (_bacd );return _bacd ;};func (_ffcga *pdfFontSimple )updateStandard14Font (){_fafaa ,_accb :=_ffcga .Encoder ().(_de .SimpleEncoder );if !_accb {_adc .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_ffcga .Encoder (),_ffcga );return ;};_eacdg :=_fafaa .Charcodes ();_ffcga ._bdff =make (map[_de .CharCode ]float64 ,len (_eacdg ));for _ ,_cgfc :=range _eacdg {_gbffa ,_ :=_fafaa .CharcodeToRune (_cgfc );_ffcga ._bdff [_cgfc ]=_ffcga ._dgfgf [_gbffa ].Wx ;};};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_badf *PdfFieldButton )GetType ()ButtonType {_fega :=ButtonTypeCheckbox ;if _badf .Ff !=nil {if (uint32 (*_badf .Ff )&FieldFlagPushbutton .Mask ())> 0{_fega =ButtonTypePush ;}else if (uint32 (*_badf .Ff )&FieldFlagRadio .Mask ())> 0{_fega =ButtonTypeRadio ;};};return _fega ;};func (_ceecc *PdfReader )newPdfAnnotationHighlightFromDict (_gdaa *_fee .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_efgf :=PdfAnnotationHighlight {};_acgf ,_cec :=_ceecc .newPdfAnnotationMarkupFromDict (_gdaa );if _cec !=nil {return nil ,_cec ;};_efgf .PdfAnnotationMarkup =_acgf ;_efgf .QuadPoints =_gdaa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_efgf ,nil ;};func (_fabce *PdfReader )loadAnnotations (_abaaf _fee .PdfObject )([]*PdfAnnotation ,error ){_ggbac ,_gfgdb :=_fee .GetArray (_abaaf );if !_gfgdb {return nil ,_ba .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _ddecg []*PdfAnnotation ;for _ ,_bbgd :=range _ggbac .Elements (){_bbgd =_fee .ResolveReference (_bbgd );if _ ,_gdbd :=_bbgd .(*_fee .PdfObjectNull );_gdbd {continue ;};_gcab ,_bffg :=_bbgd .(*_fee .PdfObjectDictionary );_dfgf ,_dddfb :=_bbgd .(*_fee .PdfIndirectObject );if _bffg {_dfgf =&_fee .PdfIndirectObject {};_dfgf .PdfObject =_gcab ;}else {if !_dddfb {return nil ,_ba .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_bggbe ,_caaf :=_fabce .newPdfAnnotationFromIndirectObject (_dfgf );if _caaf !=nil {return nil ,_caaf ;};switch _bbdc :=_bggbe .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_dgdaf :=range _fabce .AcroForm .AllFields (){if _dgdaf ._bdcdc ==_bbdc .Parent {_bbdc ._agg =_dgdaf ;break ;};};};if _bggbe !=nil {_ddecg =append (_ddecg ,_bggbe );};};return _ddecg ,nil ;};func _eeaff ()string {return _gbabc };func (_bddgc *LTV )validateSig (_accef *PdfSignature )error {if _accef ==nil ||_accef .Contents ==nil ||len (_accef .Contents .Bytes ())==0{return _ba .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_accef );};return nil ;};

// Fill populates `form` with values provided by `provider`.
func (_gaec *PdfAcroForm )Fill (provider FieldValueProvider )error {return _gaec .fill (provider ,nil )};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _fee .PdfObject ;BS _fee .PdfObject ;LE _fee .PdfObject ;IC _fee .PdfObject ;LL _fee .PdfObject ;LLE _fee .PdfObject ;Cap _fee .PdfObject ;IT _fee .PdfObject ;LLO _fee .PdfObject ;CP _fee .PdfObject ;Measure _fee .PdfObject ;CO _fee .PdfObject ;};func (_gcc *PdfReader )newPdfActionGoTo3DViewFromDict (_bba *_fee .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bba .Get ("\u0054\u0041"),V :_bba .Get ("\u0056")},nil ;};func (_bgbca *PdfReader )buildPageList (_gadfc *_fee .PdfIndirectObject ,_eggf *_fee .PdfIndirectObject ,_dgef map[_fee .PdfObject ]struct{})error {if _gadfc ==nil {return nil ;};if _ ,_agfe :=_dgef [_gadfc ];_agfe {_adc .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gadfc .ObjectNumber );return nil ;};_dgef [_gadfc ]=struct{}{};_bbad ,_bfffg :=_gadfc .PdfObject .(*_fee .PdfObjectDictionary );if !_bfffg {return _beg .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bdfaf ,_bfffg :=(*_bbad ).Get ("\u0054\u0079\u0070\u0065").(*_fee .PdfObjectName );if !_bfffg {if _bbad .Get ("\u004b\u0069\u0064\u0073")==nil {return _beg .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_adc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_bdfaf =_fee .MakeName ("\u0050\u0061\u0067e\u0073");_bbad .Set ("\u0054\u0079\u0070\u0065",_bdfaf );};_adc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bdfaf ,_gadfc );if *_bdfaf =="\u0050\u0061\u0067\u0065"{_fcfg ,_babg :=_bgbca .newPdfPageFromDict (_bbad );if _babg !=nil {return _babg ;};_fcfg .setContainer (_gadfc );if _eggf !=nil {_bbad .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eggf );};_bgbca ._aagc =append (_bgbca ._aagc ,_gadfc );_bgbca .PageList =append (_bgbca .PageList ,_fcfg );return nil ;};if *_bdfaf !="\u0050\u0061\u0067e\u0073"{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bdfaf );return _beg .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _eggf !=nil {_bbad .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eggf );};if !_bgbca ._cgff {_ddbgg :=_bgbca .traverseObjectData (_gadfc );if _ddbgg !=nil {return _ddbgg ;};};_eefbd ,_adgfed :=_bgbca ._daae .Resolve (_bbad .Get ("\u004b\u0069\u0064\u0073"));if _adgfed !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _adgfed ;};var _ffcef *_fee .PdfObjectArray ;_ffcef ,_bfffg =_eefbd .(*_fee .PdfObjectArray );if !_bfffg {_fbcdb ,_bffdg :=_eefbd .(*_fee .PdfIndirectObject );if !_bffdg {return _beg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ffcef ,_bfffg =_fbcdb .PdfObject .(*_fee .PdfObjectArray );if !_bfffg {return _beg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_adc .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ffcef );for _acbf ,_efcaa :=range _ffcef .Elements (){_gfdea ,_fbfca :=_fee .GetIndirect (_efcaa );if !_fbfca {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_gfdea );return _beg .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ffcef .Set (_acbf ,_gfdea );_adgfed =_bgbca .buildPageList (_gfdea ,_gadfc ,_dgef );if _adgfed !=nil {return _adgfed ;};};return nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_fbdcc *PdfReader )PageFromIndirectObject (ind *_fee .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_fbdcc .PageList )!=len (_fbdcc ._aagc ){return nil ,0,_beg .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _bbadg ,_acdce :=range _fbdcc ._aagc {if _acdce ==ind {return _fbdcc .PageList [_bbadg ],_bbadg +1,nil ;};};return nil ,0,_beg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ToPdfObject implements interface PdfModel.
func (_fcbg *PdfAnnotationWidget )ToPdfObject ()_fee .PdfObject {_fcbg .PdfAnnotation .ToPdfObject ();_geee :=_fcbg ._gdc ;_dccgf :=_geee .PdfObject .(*_fee .PdfObjectDictionary );if _fcbg ._edb {return _geee ;};_fcbg ._edb =true ;_dccgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_dccgf .SetIfNotNil ("\u0048",_fcbg .H );_dccgf .SetIfNotNil ("\u004d\u004b",_fcbg .MK );_dccgf .SetIfNotNil ("\u0041",_fcbg .A );_dccgf .SetIfNotNil ("\u0041\u0041",_fcbg .AA );_dccgf .SetIfNotNil ("\u0042\u0053",_fcbg .BS );_bcca :=_fcbg .Parent ;if _fcbg ._agg !=nil {if _fcbg ._agg ._bdcdc ==_fcbg ._gdc {_fcbg ._agg .ToPdfObject ();};_bcca =_fcbg ._agg .GetContainingPdfObject ();};if _bcca !=_geee {_dccgf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bcca );};_fcbg ._edb =false ;return _geee ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_dccbf *PdfColorspaceDeviceN )GetNumComponents ()int {return _dccbf .ColorantNames .Len ()};func (_ggeg *PdfReader )newPdfActionRenditionFromDict (_edag *_fee .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_edag .Get ("\u0052"),AN :_edag .Get ("\u0041\u004e"),OP :_edag .Get ("\u004f\u0050"),JS :_edag .Get ("\u004a\u0053")},nil ;};

// ToInteger convert to an integer format.
func (_bgfa *PdfColorLab )ToInteger (bits int )[3]uint32 {_dabaa :=_eba .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dabaa *_bgfa .L ()),uint32 (_dabaa *_bgfa .A ()),uint32 (_dabaa *_bgfa .B ())};};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_fee .PdfObjectArray ;Domain *_fee .PdfObjectArray ;Function []PdfFunction ;Extend *_fee .PdfObjectArray ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_de .SimpleEncoder ,error ){_bfgc ,_bbef :=_afacf (basefont );if _bbef !=nil {return nil ,nil ,_bbef ;};_gagdf ,_dbffd :=_bfgc .Encoder ().(_de .SimpleEncoder );if !_dbffd {return nil ,nil ,_ba .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_bfgc .Encoder ());};_ddbbd :=make (map[rune ]_de .GlyphName );for _gcdd :=range alphabet {if _ ,_dfcg :=_gagdf .RuneToCharcode (_gcdd );!_dfcg {_ ,_gccdd :=_bfgc ._dgfgf [_gcdd ];if !_gccdd {_adc .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_gcdd ,_gcdd );continue ;};_dcge ,_gccdd :=_de .RuneToGlyph (_gcdd );if !_gccdd {_adc .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_gcdd ,_gcdd );continue ;};if len (_ddbbd )>=255{return nil ,nil ,_beg .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_ddbbd [_gcdd ]=_dcge ;};};var (_fgeb []_de .CharCode ;_dgacf []_de .CharCode ;);for _cgge :=_de .CharCode (1);_cgge <=0xff;_cgge ++{_dafg ,_gdde :=_gagdf .CharcodeToRune (_cgge );if !_gdde {_fgeb =append (_fgeb ,_cgge );continue ;};if _ ,_gdde =alphabet [_dafg ];!_gdde {_dgacf =append (_dgacf ,_cgge );};};_agfbg :=append (_fgeb ,_dgacf ...);if len (_agfbg )< len (_ddbbd ){return nil ,nil ,_ba .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_ddbbd ),len (_agfbg ));};_bffa :=make ([]rune ,0,len (_ddbbd ));for _gdge :=range _ddbbd {_bffa =append (_bffa ,_gdge );};_dd .Slice (_bffa ,func (_gcff ,_gcaf int )bool {return _bffa [_gcff ]< _bffa [_gcaf ]});_acdc :=make (map[_de .CharCode ]_de .GlyphName ,len (_bffa ));for _ ,_agdbe :=range _bffa {_ecaca :=_agfbg [0];_agfbg =_agfbg [1:];_acdc [_ecaca ]=_ddbbd [_agdbe ];};_gagdf =_de .ApplyDifferences (_gagdf ,_acdc );_bfgc .SetEncoder (_gagdf );return &PdfFont {_ddaad :&_bfgc },_gagdf ,nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_fcgd *PdfAnnotation )ToPdfObject ()_fee .PdfObject {_bgcb :=_fcgd ._gdc ;_daca :=_bgcb .PdfObject .(*_fee .PdfObjectDictionary );_daca .Clear ();_daca .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0041\u006e\u006eo\u0074"));_daca .SetIfNotNil ("\u0052\u0065\u0063\u0074",_fcgd .Rect );_daca .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fcgd .Contents );_daca .SetIfNotNil ("\u0050",_fcgd .P );_daca .SetIfNotNil ("\u004e\u004d",_fcgd .NM );_daca .SetIfNotNil ("\u004d",_fcgd .M );_daca .SetIfNotNil ("\u0046",_fcgd .F );_daca .SetIfNotNil ("\u0041\u0050",_fcgd .AP );_daca .SetIfNotNil ("\u0041\u0053",_fcgd .AS );_daca .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_fcgd .Border );_daca .SetIfNotNil ("\u0043",_fcgd .C );_daca .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fcgd .StructParent );_daca .SetIfNotNil ("\u004f\u0043",_fcgd .OC );return _bgcb ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_cbga *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_fcfab ,_ ,_fdegc :=_cbga .CharcodesToUnicodeWithStats (_cbga .BytesToCharcodes (data ));_fedeg :=_de .ExpandLigatures (_fcfab );return _fedeg ,_ee .RuneCountInString (_fedeg ),_fdegc ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_ddebf *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_facc ,_bdec :=color .(*PdfColorDeviceGray );if !_bdec {_adc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_facc ),float64 (*_facc ),float64 (*_facc )),nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_acbb *PdfOutlineTreeNode )ToPdfObject ()_fee .PdfObject {return _acbb .GetContext ().ToPdfObject ();};func (_bcef *pdfFontType0 )baseFields ()*fontCommon {return &_bcef .fontCommon };func (_dgdad *PdfReader )loadDSS ()(*DSS ,error ){if _dgdad ._daae .GetCrypter ()!=nil &&!_dgdad ._daae .IsAuthenticated (){return nil ,_ba .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_afgb :=_dgdad ._egdgd .Get ("\u0044\u0053\u0053");if _afgb ==nil {return nil ,nil ;};_fddge ,_ :=_fee .GetIndirect (_afgb );_afgb =_fee .TraceToDirectObject (_afgb );switch _ffea :=_afgb .(type ){case *_fee .PdfObjectNull :return nil ,nil ;case *_fee .PdfObjectDictionary :return _agbae (_fddge ,_ffea );};return nil ,_ba .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_afgb );};func (_defea *PdfWriter )writeBytes (_eacfa []byte ){if _defea ._gecff !=nil {return ;};_dgcaf ,_gbcgd :=_defea ._gcace .Write (_eacfa );_defea ._egdbg +=int64 (_dgcaf );_defea ._gecff =_gbcgd ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _fee .PdfObject ;BS _fee .PdfObject ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ca :=NewPdfAction ();_bgc :=&PdfActionResetForm {};_bgc .PdfAction =_ca ;_ca .SetContext (_bgc );return _bgc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eace *PdfShadingType2 )ToPdfObject ()_fee .PdfObject {_eace .PdfShading .ToPdfObject ();_ebgb ,_babcfg :=_eace .getShadingDict ();if _babcfg !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ebgb ==nil {_adc .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _eace .Coords !=nil {_ebgb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_eace .Coords );};if _eace .Domain !=nil {_ebgb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eace .Domain );};if _eace .Function !=nil {if len (_eace .Function )==1{_ebgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eace .Function [0].ToPdfObject ());}else {_gbffbe :=_fee .MakeArray ();for _ ,_bgegd :=range _eace .Function {_gbffbe .Append (_bgegd .ToPdfObject ());};_ebgb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbffbe );};};if _eace .Extend !=nil {_ebgb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_eace .Extend );};return _eace ._gbadg ;};func _fgbf (_gbefdd *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_gbefdd }};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _fee .StreamEncoder )(*XObjectImage ,error ){_bgdb :=NewXObjectImage ();return UpdateXObjectImageFromImage (_bgdb ,img ,cs ,encoder );};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_dcfea *Image )Resample (targetBitsPerComponent int64 ){if _dcfea .BitsPerComponent ==targetBitsPerComponent {return ;};_begfe :=_dcfea .GetSamples ();if targetBitsPerComponent < _dcfea .BitsPerComponent {_acbd :=_dcfea .BitsPerComponent -targetBitsPerComponent ;for _bgdf :=range _begfe {_begfe [_bgdf ]>>=uint (_acbd );};}else if targetBitsPerComponent > _dcfea .BitsPerComponent {_fgcdg :=targetBitsPerComponent -_dcfea .BitsPerComponent ;for _fbbdd :=range _begfe {_begfe [_fbbdd ]<<=uint (_fgcdg );};};_dcfea .BitsPerComponent =targetBitsPerComponent ;if _dcfea .BitsPerComponent < 8{_dcfea .resampleLowBits (_begfe );return ;};_edabe :=_ffg .BytesPerLine (int (_dcfea .Width ),int (_dcfea .BitsPerComponent ),_dcfea .ColorComponents );_dgfbe :=make ([]byte ,_edabe *int (_dcfea .Height ));var (_edeea ,_facbdb ,_gcccf ,_edeff int ;_bffcc uint32 ;);for _gcccf =0;_gcccf < int (_dcfea .Height );_gcccf ++{_edeea =_gcccf *_edabe ;_facbdb =(_gcccf +1)*_edabe -1;_cacbd :=_ef .ResampleUint32 (_begfe [_edeea :_facbdb ],int (targetBitsPerComponent ),8);for _edeff ,_bffcc =range _cacbd {_dgfbe [_edeff +_edeea ]=byte (_bffcc );};};_dcfea .Data =_dgfbe ;};func (_eae *PdfReader )newPdfAnnotationWatermarkFromDict (_fec *_fee .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_bcab :=PdfAnnotationWatermark {};_bcab .FixedPrint =_fec .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_bcab ,nil ;};type pdfFont interface{_cg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_fee .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func _cbeae (_fbdf _fee .PdfObject )(*PdfColorspaceDeviceN ,error ){_feef :=NewPdfColorspaceDeviceN ();if _bddf ,_ffcb :=_fbdf .(*_fee .PdfIndirectObject );_ffcb {_feef ._ecacb =_bddf ;};_fbdf =_fee .TraceToDirectObject (_fbdf );_fbbd ,_ccdf :=_fbdf .(*_fee .PdfObjectArray );if !_ccdf {return nil ,_ba .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _fbbd .Len ()!=4&&_fbbd .Len ()!=5{return nil ,_ba .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_fbdf =_fbbd .Get (0);_aaea ,_ccdf :=_fbdf .(*_fee .PdfObjectName );if !_ccdf {return nil ,_ba .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_aaea !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_ba .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_fbdf =_fbbd .Get (1);_fbdf =_fee .TraceToDirectObject (_fbdf );_dfcab ,_ccdf :=_fbdf .(*_fee .PdfObjectArray );if !_ccdf {return nil ,_ba .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_feef .ColorantNames =_dfcab ;_fbdf =_fbbd .Get (2);_ffdc ,_deag :=NewPdfColorspaceFromPdfObject (_fbdf );if _deag !=nil {return nil ,_deag ;};_feef .AlternateSpace =_ffdc ;_dbfc ,_deag :=_ddgcb (_fbbd .Get (3));if _deag !=nil {return nil ,_deag ;};_feef .TintTransform =_dbfc ;if _fbbd .Len ()==5{_dega ,_dgbfg :=_aaag (_fbbd .Get (4));if _dgbfg !=nil {return nil ,_dgbfg ;};_feef .Attributes =_dega ;};return _feef ,nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_eege DefaultImageHandler )NewImageFromGoImage (goimg _cd .Image )(*Image ,error ){_cfbf ,_fbcb :=_ffg .FromGoImage (goimg );if _fbcb !=nil {return nil ,_fbcb ;};_feae :=_edabc (_cfbf .Base ());return &_feae ,nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_bdfc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_eaba *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfgc ,_ccfb :=_fee .GetNumbersAsFloat (objects );if _ccfb !=nil {return nil ,_ccfb ;};return _eaba .ColorFromFloats (_cfgc );};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_becbb *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_beg .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_beff ,_bdea :=_ffg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._babdc ,img ._gbaa );if _bdea !=nil {return img ,_bdea ;};_gbgcc ,_bdea :=_ffg .NRGBAConverter .Convert (_beff );if _bdea !=nil {return img ,_bdea ;};_gggg :=_edabc (_gbgcc .Base ());_adc .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_adc .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_adc .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_gggg .Data );_adc .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_gggg );return _gggg ,nil ;};func (_ecbbf *DSS )generateHashMap (_bgde []*_fee .PdfObjectStream )(map[string ]*_fee .PdfObjectStream ,error ){_gagdc :=map[string ]*_fee .PdfObjectStream {};for _ ,_dcbf :=range _bgde {_ggcf ,_agag :=_fee .DecodeStream (_dcbf );if _agag !=nil {return nil ,_agag ;};_cfad ,_agag :=_gfeg (_ggcf );if _agag !=nil {return nil ,_agag ;};_gagdc [string (_cfad )]=_dcbf ;};return _gagdc ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fffbb *PdfFilespec )GetContainingPdfObject ()_fee .PdfObject {return _fffbb ._acfd };

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_dac :=NewPdfAnnotation ();_cbda :=&PdfAnnotationMovie {};_cbda .PdfAnnotation =_dac ;_dac .SetContext (_cbda );return _cbda ;};

// BaseFont returns the font's "BaseFont" field.
func (_fegd *PdfFont )BaseFont ()string {return _fegd .baseFields ()._fagfdc };func (_aeace *PdfReader )buildOutlineTree (_cfadd _fee .PdfObject ,_egcg *PdfOutlineTreeNode ,_cabge *PdfOutlineTreeNode ,_eacaf map[_fee .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _eacaf ==nil {_eacaf =map[_fee .PdfObject ]struct{}{};};_eacaf [_cfadd ]=struct{}{};_fdbcd ,_bffde :=_cfadd .(*_fee .PdfIndirectObject );if !_bffde {return nil ,nil ,_ba .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_cfadd );};_bgcgb ,_cfgaf :=_fdbcd .PdfObject .(*_fee .PdfObjectDictionary );if !_cfgaf {return nil ,nil ,_beg .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_adc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bgcgb ,_fdbcd ,_fdbcd );if _gaebd :=_bgcgb .Get ("\u0054\u0069\u0074l\u0065");_gaebd !=nil {_edbaab ,_edbcc :=_aeace .newPdfOutlineItemFromIndirectObject (_fdbcd );if _edbcc !=nil {return nil ,nil ,_edbcc ;};_edbaab .Parent =_egcg ;_edbaab .Prev =_cabge ;_abec :=_fee .ResolveReference (_bgcgb .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_geef :=_eacaf [_abec ];_abec !=nil &&_abec !=_fdbcd &&!_geef {if !_fee .IsNullObject (_abec ){_aada ,_cddab ,_dfcad :=_aeace .buildOutlineTree (_abec ,&_edbaab .PdfOutlineTreeNode ,nil ,_eacaf );if _dfcad !=nil {_adc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_dfcad );}else {_edbaab .First =_aada ;_edbaab .Last =_cddab ;};};};_cegbd :=_fee .ResolveReference (_bgcgb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_eeece :=_eacaf [_cegbd ];_cegbd !=nil &&_cegbd !=_fdbcd &&!_eeece {if !_fee .IsNullObject (_cegbd ){_gdadd ,_ccbc ,_edgga :=_aeace .buildOutlineTree (_cegbd ,_egcg ,&_edbaab .PdfOutlineTreeNode ,_eacaf );if _edgga !=nil {_adc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_edgga );}else {_edbaab .Next =_gdadd ;return &_edbaab .PdfOutlineTreeNode ,_ccbc ,nil ;};};};return &_edbaab .PdfOutlineTreeNode ,&_edbaab .PdfOutlineTreeNode ,nil ;};_ebeba ,_efbabg :=_bdfe (_fdbcd );if _efbabg !=nil {return nil ,nil ,_efbabg ;};_ebeba .Parent =_egcg ;if _bgdd :=_bgcgb .Get ("\u0046\u0069\u0072s\u0074");_bgdd !=nil {_bgdd =_fee .ResolveReference (_bgdd );if _ ,_fedag :=_eacaf [_bgdd ];_bgdd !=nil &&_bgdd !=_fdbcd &&!_fedag {_fbfcb :=_fee .TraceToDirectObject (_bgdd );if _ ,_bdbd :=_fbfcb .(*_fee .PdfObjectNull );!_bdbd &&_fbfcb !=nil {_gebe ,_bdbdb ,_effc :=_aeace .buildOutlineTree (_bgdd ,&_ebeba .PdfOutlineTreeNode ,nil ,_eacaf );if _effc !=nil {_adc .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_effc );}else {_ebeba .First =_gebe ;_ebeba .Last =_bdbdb ;};};};};return &_ebeba .PdfOutlineTreeNode ,&_ebeba .PdfOutlineTreeNode ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_fcg :=NewPdfAnnotation ();_bebc :=&PdfAnnotationFileAttachment {};_bebc .PdfAnnotation =_fcg ;_bebc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcg .SetContext (_bebc );return _bebc ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overriden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _fee .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_fee .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_fggdg ,_ggada :=encoder .EncodeBytes (img .Data );if _ggada !=nil {_adc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ggada );return nil ,_ggada ;};_cgce :=NewXObjectImage ();_ababb :=img .Width ;_dbbgg :=img .Height ;_cgce .Width =&_ababb ;_cgce .Height =&_dbbgg ;_gaabf :=img .BitsPerComponent ;_cgce .BitsPerComponent =&_gaabf ;_cgce .Filter =encoder ;_cgce .Stream =_fggdg ;if cs ==nil {if img .ColorComponents ==1{_cgce .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_cgce .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_cgce .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_beg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_cgce .ColorSpace =cs ;};if len (img ._babdc )!=0{_adedf :=NewXObjectImage ();_adedf .Filter =encoder ;_cecgdb ,_ggfgb :=encoder .EncodeBytes (img ._babdc );if _ggfgb !=nil {_adc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ggfgb );return nil ,_ggfgb ;};_adedf .Stream =_cecgdb ;_adedf .BitsPerComponent =_cgce .BitsPerComponent ;_adedf .Width =&img .Width ;_adedf .Height =&img .Height ;_adedf .ColorSpace =NewPdfColorspaceDeviceGray ();_cgce .SMask =_adedf .ToPdfObject ();}else {_cgce .SMask =xobjIn .SMask ;_cgce .ImageMask =xobjIn .ImageMask ;if _cgce .ColorSpace .GetNumComponents ()==1{_cbcaa (_cgce );};};return _cgce ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gcdc *PdfColorspaceDeviceRGB )ToPdfObject ()_fee .PdfObject {return _fee .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_ggfef =author };

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _fee .PdfObject )(_fee .PdfObjectName ,error ){var _bgceb *_fee .PdfObjectName ;var _geafe *_fee .PdfObjectArray ;if _fedc ,_ggdbc :=obj .(*_fee .PdfIndirectObject );_ggdbc {if _bbca ,_geb :=_fedc .PdfObject .(*_fee .PdfObjectArray );_geb {_geafe =_bbca ;}else if _afgea ,_aab :=_fedc .PdfObject .(*_fee .PdfObjectName );_aab {_bgceb =_afgea ;};}else if _fcfb ,_dddbc :=obj .(*_fee .PdfObjectArray );_dddbc {_geafe =_fcfb ;}else if _cffc ,_decg :=obj .(*_fee .PdfObjectName );_decg {_bgceb =_cffc ;};if _bgceb !=nil {switch *_bgceb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_bgceb ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_bgceb ,nil ;};};if _geafe !=nil &&_geafe .Len ()> 0{if _adbb ,_afdf :=_geafe .Get (0).(*_fee .PdfObjectName );_afdf {switch *_adbb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _geafe .Len ()==1{return *_adbb ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_adbb ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_adbb ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_adbb ,nil ;};};};return "",nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ccafc *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_adc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_beg .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fee .PdfObject ;LE _fee .PdfObject ;BS _fee .PdfObject ;IC _fee .PdfObject ;BE _fee .PdfObject ;IT _fee .PdfObject ;Measure _fee .PdfObject ;};func (_gcdb PdfFont )actualFont ()pdfFont {if _gcdb ._ddaad ==nil {_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gcdb );};return _gcdb ._ddaad ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_fdfeb OutlineDest )ToPdfObject ()_fee .PdfObject {if (_fdfeb .PageObj ==nil &&_fdfeb .Page < 0)||_fdfeb .Mode ==""{return _fee .MakeNull ();};_aaaff :=_fee .MakeArray ();if _fdfeb .PageObj !=nil {_aaaff .Append (_fdfeb .PageObj );}else {_aaaff .Append (_fee .MakeInteger (_fdfeb .Page ));};_aaaff .Append (_fee .MakeName (_fdfeb .Mode ));switch _fdfeb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_aaaff .Append (_fee .MakeFloat (_fdfeb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_aaaff .Append (_fee .MakeFloat (_fdfeb .X ));case "\u0058\u0059\u005a":_aaaff .Append (_fee .MakeFloat (_fdfeb .X ));_aaaff .Append (_fee .MakeFloat (_fdfeb .Y ));_aaaff .Append (_fee .MakeFloat (_fdfeb .Zoom ));default:_aaaff .Set (1,_fee .MakeName ("\u0046\u0069\u0074"));};return _aaaff ;};

// ToPdfObject implements interface PdfModel.
func (_ddcc *PdfAnnotationPrinterMark )ToPdfObject ()_fee .PdfObject {_ddcc .PdfAnnotation .ToPdfObject ();_efed :=_ddcc ._gdc ;_fagc :=_efed .PdfObject .(*_fee .PdfObjectDictionary );_fagc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_fagc .SetIfNotNil ("\u004d\u004e",_ddcc .MN );return _efed ;};func (_ccc *PdfReader )newPdfAnnotationUnderlineFromDict (_bcg *_fee .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_fgb :=PdfAnnotationUnderline {};_dcga ,_fead :=_ccc .newPdfAnnotationMarkupFromDict (_bcg );if _fead !=nil {return nil ,_fead ;};_fgb .PdfAnnotationMarkup =_dcga ;_fgb .QuadPoints =_bcg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fgb ,nil ;};func (_gdeg *PdfReader )newPdfSignatureFromIndirect (_dabda *_fee .PdfIndirectObject )(*PdfSignature ,error ){_affg ,_cadaa :=_dabda .PdfObject .(*_fee .PdfObjectDictionary );if !_cadaa {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _dgab ,_adadbd :=_gdeg ._abgg .GetModelFromPrimitive (_dabda ).(*PdfSignature );_adadbd {return _dgab ,nil ;};_afgeg :=&PdfSignature {};_afgeg ._fcfage =_dabda ;_afgeg .Type ,_ =_fee .GetName (_affg .Get ("\u0054\u0079\u0070\u0065"));_afgeg .Filter ,_cadaa =_fee .GetName (_affg .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cadaa {_adc .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_afgeg .SubFilter ,_ =_fee .GetName (_affg .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_afgeg .Contents ,_cadaa =_fee .GetString (_affg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cadaa {_adc .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_afgeg .Cert =_affg .Get ("\u0043\u0065\u0072\u0074");_afgeg .ByteRange ,_ =_fee .GetArray (_affg .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_afgeg .Reference ,_ =_fee .GetArray (_affg .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_afgeg .Changes ,_ =_fee .GetArray (_affg .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_afgeg .Name ,_ =_fee .GetString (_affg .Get ("\u004e\u0061\u006d\u0065"));_afgeg .M ,_ =_fee .GetString (_affg .Get ("\u004d"));_afgeg .Location ,_ =_fee .GetString (_affg .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_afgeg .Reason ,_ =_fee .GetString (_affg .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_afgeg .ContactInfo ,_ =_fee .GetString (_affg .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_afgeg .R ,_ =_fee .GetInt (_affg .Get ("\u0052"));_afgeg .V ,_ =_fee .GetInt (_affg .Get ("\u0056"));_afgeg .PropBuild ,_ =_fee .GetDict (_affg .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_afgeg .PropAuthTime ,_ =_fee .GetInt (_affg .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_afgeg .PropAuthType ,_ =_fee .GetName (_affg .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _afgeg ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_cafdb *pdfSignDictionary )WriteString ()string {_cafdb ._abeef =0;_cafdb ._eeced =0;_cafdb ._fggf =0;_cafdb ._eebfb =0;_afecf :=_ed .NewBuffer (nil );_afecf .WriteString ("\u003c\u003c");for _ ,_afbgb :=range _cafdb .Keys (){_ebgdf :=_cafdb .Get (_afbgb );switch _afbgb {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_afecf .WriteString (_afbgb .WriteString ());_afecf .WriteString ("\u0020");_cafdb ._fggf =_afecf .Len ();_afecf .WriteString (_ebgdf .WriteString ());_afecf .WriteString ("\u0020");_cafdb ._eebfb =_afecf .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_afecf .WriteString (_afbgb .WriteString ());_afecf .WriteString ("\u0020");_cafdb ._abeef =_afecf .Len ();_afecf .WriteString (_ebgdf .WriteString ());_afecf .WriteString ("\u0020");_cafdb ._eeced =_afecf .Len ()-1;default:_afecf .WriteString (_afbgb .WriteString ());_afecf .WriteString ("\u0020");_afecf .WriteString (_ebgdf .WriteString ());};};_afecf .WriteString ("\u003e\u003e");return _afecf .String ();};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_bee :=NewPdfAction ();_dgg :=&PdfActionMovie {};_dgg .PdfAction =_bee ;_bee .SetContext (_dgg );return _dgg ;};

// ToInteger convert to an integer format.
func (_agfb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_aabc :=_eba .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_aabc *_agfb .C ()),uint32 (_aabc *_agfb .M ()),uint32 (_aabc *_agfb .Y ()),uint32 (_aabc *_agfb .K ())};};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_fee .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _fee .PdfObject ;A _fee .PdfObject ;SE _fee .PdfObject ;C _fee .PdfObject ;F _fee .PdfObject ;_cgdg *_fee .PdfIndirectObject ;};func (_gda *PdfReader )newPdfAnnotationLineFromDict (_gbe *_fee .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_aeb :=PdfAnnotationLine {};_cacb ,_ggbc :=_gda .newPdfAnnotationMarkupFromDict (_gbe );if _ggbc !=nil {return nil ,_ggbc ;};_aeb .PdfAnnotationMarkup =_cacb ;_aeb .L =_gbe .Get ("\u004c");_aeb .BS =_gbe .Get ("\u0042\u0053");_aeb .LE =_gbe .Get ("\u004c\u0045");_aeb .IC =_gbe .Get ("\u0049\u0043");_aeb .LL =_gbe .Get ("\u004c\u004c");_aeb .LLE =_gbe .Get ("\u004c\u004c\u0045");_aeb .Cap =_gbe .Get ("\u0043\u0061\u0070");_aeb .IT =_gbe .Get ("\u0049\u0054");_aeb .LLO =_gbe .Get ("\u004c\u004c\u004f");_aeb .CP =_gbe .Get ("\u0043\u0050");_aeb .Measure =_gbe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_aeb .CO =_gbe .Get ("\u0043\u004f");return &_aeb ,nil ;};func (_bcbgde *PdfReader )traverseObjectData (_ebdc _fee .PdfObject )error {return _fee .ResolveReferencesDeep (_ebdc ,_bcbgde ._ebag );};func (_beabg *PdfSignature )extractChainFromCert ()([]*_d .Certificate ,error ){var _bdcba *_fee .PdfObjectArray ;switch _badb :=_beabg .Cert .(type ){case *_fee .PdfObjectString :_bdcba =_fee .MakeArray (_badb );case *_fee .PdfObjectArray :_bdcba =_badb ;default:return nil ,_ba .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_badb );};var _gcaea _ed .Buffer ;for _ ,_agfffa :=range _bdcba .Elements (){_eddbf ,_ggce :=_fee .GetString (_agfffa );if !_ggce {return nil ,_ba .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_agfffa );};if _ ,_afada :=_gcaea .Write (_eddbf .Bytes ());_afada !=nil {return nil ,_afada ;};};return _d .ParseCertificates (_gcaea .Bytes ());};func (_eff *PdfReader )newPdfAnnotationCaretFromDict (_fed *_fee .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_abeeb :=PdfAnnotationCaret {};_cfda ,_edfd :=_eff .newPdfAnnotationMarkupFromDict (_fed );if _edfd !=nil {return nil ,_edfd ;};_abeeb .PdfAnnotationMarkup =_cfda ;_abeeb .RD =_fed .Get ("\u0052\u0044");_abeeb .Sy =_fed .Get ("\u0053\u0079");return &_abeeb ,nil ;};func _cbfbfc ()_e .Time {return _abbca };

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func _ggeeac (_cdbc *_fee .PdfObjectDictionary ,_ecgd *fontCommon )(*pdfCIDFontType0 ,error ){if _ecgd ._agbcd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_adc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ecgd );return nil ,_fee .ErrRangeError ;};_afdae :=_edacd (_ecgd );_fggdf ,_fgfdc :=_fee .GetDict (_cdbc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fgfdc {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ecgd );return nil ,ErrRequiredAttributeMissing ;};_afdae .CIDSystemInfo =_fggdf ;_afdae .DW =_cdbc .Get ("\u0044\u0057");_afdae .W =_cdbc .Get ("\u0057");_afdae .DW2 =_cdbc .Get ("\u0044\u0057\u0032");_afdae .W2 =_cdbc .Get ("\u0057\u0032");_afdae ._cbgg =1000.0;if _cdfbg ,_fcaa :=_fee .GetNumberAsFloat (_afdae .DW );_fcaa ==nil {_afdae ._cbgg =_cdfbg ;};_gbea ,_bggd :=_ddgf (_afdae .W );if _bggd !=nil {return nil ,_bggd ;};if _gbea ==nil {_gbea =map[_de .CharCode ]float64 {};};_afdae ._aegc =_gbea ;return _afdae ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggg *PdfBorderStyle )ToPdfObject ()_fee .PdfObject {_cffa :=_fee .MakeDict ();if _ggg ._agdb !=nil {if _defca ,_bgae :=_ggg ._agdb .(*_fee .PdfIndirectObject );_bgae {_defca .PdfObject =_cffa ;};};_cffa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _ggg .W !=nil {_cffa .Set ("\u0057",_fee .MakeFloat (*_ggg .W ));};if _ggg .S !=nil {_cffa .Set ("\u0053",_fee .MakeName (_ggg .S .GetPdfName ()));};if _ggg .D !=nil {_cffa .Set ("\u0044",_fee .MakeArrayFromIntegers (*_ggg .D ));};if _ggg ._agdb !=nil {return _ggg ._agdb ;};return _cffa ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_faaf *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _faaf .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_gaegd *_fee .PdfIndirectObject ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_efdf *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_cddb ,_cace :=color .(*PdfColorDeviceCMYK );if !_cace {_adc .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ebab :=_cddb .C ();_cfcf :=_cddb .M ();_fgba :=_cddb .Y ();_eadf :=_cddb .K ();_ebab =_ebab *(1-_eadf )+_eadf ;_cfcf =_cfcf *(1-_eadf )+_eadf ;_fgba =_fgba *(1-_eadf )+_eadf ;_acag :=1-_ebab ;_ccded :=1-_cfcf ;_cfdfc :=1-_fgba ;return NewPdfColorDeviceRGB (_acag ,_ccded ,_cfdfc ),nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bbb :=PdfColorDeviceGray (grayVal );return &_bbb ;};

// ToPdfObject returns the PDF representation of the function.
func (_baccb *PdfFunctionType4 )ToPdfObject ()_fee .PdfObject {_cddde :=_baccb ._geag ;if _cddde ==nil {_baccb ._geag =&_fee .PdfObjectStream {};_cddde =_baccb ._geag ;};_facbd :=_fee .MakeDict ();_facbd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fee .MakeInteger (4));_dcec :=&_fee .PdfObjectArray {};for _ ,_dbbaa :=range _baccb .Domain {_dcec .Append (_fee .MakeFloat (_dbbaa ));};_facbd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcec );_cccfd :=&_fee .PdfObjectArray {};for _ ,_ccfe :=range _baccb .Range {_cccfd .Append (_fee .MakeFloat (_ccfe ));};_facbd .Set ("\u0052\u0061\u006eg\u0065",_cccfd );if _baccb ._dfcgg ==nil &&_baccb .Program !=nil {_baccb ._dfcgg =[]byte (_baccb .Program .String ());};_facbd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fee .MakeInteger (int64 (len (_baccb ._dfcgg ))));_cddde .Stream =_baccb ._dfcgg ;_cddde .PdfObjectDictionary =_facbd ;return _cddde ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_fee .PdfObjectName ;Colorants _fee .PdfObject ;Process _fee .PdfObject ;MixingHints _fee .PdfObject ;_cada *_fee .PdfIndirectObject ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_fee .PdfObject ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _fee .PdfObject ;};

// ToInteger convert to an integer format.
func (_bfaec *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_cacd :=_eba .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cacd *_bfaec .A ()),uint32 (_cacd *_bfaec .B ()),uint32 (_cacd *_bfaec .C ())};};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_deab *pdfFontSimple )addEncoding ()error {var (_adga string ;_degd map[_de .CharCode ]_de .GlyphName ;_eacf _de .SimpleEncoder ;);if _deab .Encoder ()!=nil {_aegb ,_cefff :=_deab .Encoder ().(_de .SimpleEncoder );if _cefff &&_aegb !=nil {_adga =_aegb .BaseName ();};};if _deab .Encoding !=nil {_eacd ,_bdac ,_gbfa :=_deab .getFontEncoding ();if _gbfa !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_deab ._fagfdc ,_deab ._agbcd ,_deab .Encoding ,_deab .Encoding ,_gbfa );return _gbfa ;};if _eacd !=""{_adga =_eacd ;};_degd =_bdac ;_eacf ,_gbfa =_de .NewSimpleTextEncoder (_adga ,_degd );if _gbfa !=nil {return _gbfa ;};};if _eacf ==nil {_dgfeg :=_deab ._dedcg ;if _dgfeg !=nil {switch _deab ._agbcd {case "\u0054\u0079\u0070e\u0031":if _dgfeg .fontFile !=nil &&_dgfeg .fontFile ._dedb !=nil {_adc .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_eacf =_dgfeg .fontFile ._dedb ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _dgfeg ._cgee !=nil {_adc .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_gceg ,_bdae :=_dgfeg ._cgee .MakeEncoder ();if _bdae ==nil {_eacf =_gceg ;};};};};};if _eacf !=nil {if _degd !=nil {_adc .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_degd ,_deab .baseFields ());_eacf =_de .ApplyDifferences (_eacf ,_degd );};_deab .SetEncoder (_eacf );};return nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_bfgfb *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _bfgfb ._cdbde ==nil {_bfgfb ._cdbde =_bac .NewPSExecutor (_bfgfb .Program );};var _gagfc []_bac .PSObject ;for _ ,_abebd :=range xVec {_gagfc =append (_gagfc ,_bac .MakeReal (_abebd ));};_bedb ,_bbde :=_bfgfb ._cdbde .Execute (_gagfc );if _bbde !=nil {return nil ,_bbde ;};_aeac ,_bbde :=_bac .PSObjectArrayToFloat64Array (_bedb );if _bbde !=nil {return nil ,_bbde ;};return _aeac ,nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// AddPages adds pages to be appended to the end of the source PDF.
func (_aeaf *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_edbg :=range pages {_edbg =_edbg .Duplicate ();_eacdc (_edbg );_aeaf ._facda =append (_aeaf ._facda ,_edbg );};return ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_bfdb *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _fee .GetNumberAsFloat (_bfdb .CapHeight );};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dacbf *PdfPageResources )HasFontByName (keyName _fee .PdfObjectName )bool {_ ,_dgedc :=_dacbf .GetFontByName (keyName );return _dgedc ;};

// SetContext sets the sub annotation (context).
func (_fca *PdfAnnotation )SetContext (ctx PdfModel ){_fca ._gbfd =ctx };const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_fee .PdfObjectDictionary )(*PdfPageResources ,error ){_geafec :=NewPdfPageResources ();if _fcaab :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fcaab !=nil {_geafec .ExtGState =_fcaab ;};if _aafbf :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_aafbf !=nil &&!_fee .IsNullObject (_aafbf ){_geafec .ColorSpace =_aafbf ;};if _efbc :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_efbc !=nil {_geafec .Pattern =_efbc ;};if _eagf :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_eagf !=nil {_geafec .Shading =_eagf ;};if _fdfb :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_fdfb !=nil {_geafec .XObject =_fdfb ;};if _ddegg :=_fee .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_ddegg !=nil {_geafec .Font =_ddegg ;};if _fcaeea :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_fcaeea !=nil {_geafec .ProcSet =_fcaeea ;};if _beda :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_beda !=nil {_geafec .Properties =_beda ;};return _geafec ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_bfb :=NewPdfAction ();_ce :=&PdfActionGoTo {};_ce .PdfAction =_bfb ;_bfb .SetContext (_ce );return _ce ;};func _cbcaa (_fgbaae *XObjectImage )error {if _fgbaae .SMask ==nil {return nil ;};_bccagb ,_bdgcg :=_fgbaae .SMask .(*_fee .PdfObjectStream );if !_bdgcg {_adc .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _fee .ErrTypeError ;};_gded :=_bccagb .PdfObjectDictionary ;_affff :=_gded .Get ("\u004d\u0061\u0074t\u0065");if _affff ==nil {return nil ;};_cgdac ,_adcdd :=_bccb (_affff .(*_fee .PdfObjectArray ));if _adcdd !=nil {return _adcdd ;};_eaddc :=_fee .MakeArrayFromFloats ([]float64 {_cgdac });_gded .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_eaddc );return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ggee *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abaa :=vals [0];if _abaa < 0.0||_abaa > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfg :=NewPdfColorCalGray (_abaa );return _abfg ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_fgea DefaultImageHandler )NewGrayImageFromGoImage (goimg _cd .Image )(*Image ,error ){_cecaa :=goimg .Bounds ();_fdacg :=&Image {Width :int64 (_cecaa .Dx ()),Height :int64 (_cecaa .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _eacde :=goimg .(type ){case *_cd .Gray :if len (_eacde .Pix )!=_cecaa .Dx ()*_cecaa .Dy (){_abgbe ,_gcbde :=_ffg .GrayConverter .Convert (goimg );if _gcbde !=nil {return nil ,_gcbde ;};_fdacg .Data =_abgbe .Pix ();}else {_fdacg .Data =_eacde .Pix ;};case *_cd .Gray16 :_fdacg .BitsPerComponent =16;if len (_eacde .Pix )!=_cecaa .Dx ()*_cecaa .Dy ()*2{_ccafd ,_egag :=_ffg .Gray16Converter .Convert (goimg );if _egag !=nil {return nil ,_egag ;};_fdacg .Data =_ccafd .Pix ();}else {_fdacg .Data =_eacde .Pix ;};default:_fdaa ,_dege :=_ffg .GrayConverter .Convert (goimg );if _dege !=nil {return nil ,_dege ;};_fdacg .Data =_fdaa .Pix ();};return _fdacg ,nil ;};func _begfc (_fdaad _fee .PdfObject )(string ,error ){_fdaad =_fee .TraceToDirectObject (_fdaad );switch _ffbaa :=_fdaad .(type ){case *_fee .PdfObjectString :return _ffbaa .Str (),nil ;case *_fee .PdfObjectStream :_gfbde ,_gfdb :=_fee .DecodeStream (_ffbaa );if _gfdb !=nil {return "",_gfdb ;};return string (_gfbde ),nil ;};return "",_ba .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fdaad );};func (_cbee *PdfAcroForm )fill (_gbcag FieldValueProvider ,_ggbb FieldAppearanceGenerator )error {if _cbee ==nil {return nil ;};_gdaab ,_dgecf :=_gbcag .FieldValues ();if _dgecf !=nil {return _dgecf ;};for _ ,_fcbc :=range _cbee .AllFields (){_dffdf :=_fcbc .PartialName ();_cdbbd ,_afccb :=_gdaab [_dffdf ];if !_afccb {if _cdbfe ,_ddfge :=_fcbc .FullName ();_ddfge ==nil {_cdbbd ,_afccb =_gdaab [_cdbfe ];};};if !_afccb {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_dffdf );continue ;};if _ccdee :=_adda (_fcbc ,_cdbbd );_ccdee !=nil {return _ccdee ;};if _ggbb ==nil {continue ;};for _ ,_cegc :=range _fcbc .Annotations {_cfgf ,_bbcaf :=_ggbb .GenerateAppearanceDict (_cbee ,_fcbc ,_cegc );if _bbcaf !=nil {return _bbcaf ;};_cegc .AP =_cfgf ;_cegc .ToPdfObject ();};};return nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_aecc *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// Register registers (caches) a model to primitive object relationship.
func (_bdadd *modelManager )Register (primitive _fee .PdfObject ,model PdfModel ){_bdadd ._gcfg [model ]=primitive ;_bdadd ._dgfdf [primitive ]=model ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_bbee *PdfField )SetContext (ctx PdfModel ){_bbee ._defg =ctx };

// Encoder returns the font's text encoder.
func (_gacd *pdfFontSimple )Encoder ()_de .TextEncoder {if _gacd ._agcc !=nil {return _gacd ._agcc ;};if _gacd ._bbged !=nil {return _gacd ._bbged ;};_eebeg ,_ :=_de .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _eebeg ;};

// ToPdfObject converts rectangle to a PDF object.
func (_eaaef *PdfRectangle )ToPdfObject ()_fee .PdfObject {return _fee .MakeArray (_fee .MakeFloat (_eaaef .Llx ),_fee .MakeFloat (_eaaef .Lly ),_fee .MakeFloat (_eaaef .Urx ),_fee .MakeFloat (_eaaef .Ury ));};func (_bddaf fontCommon )asPdfObjectDictionary (_gefc string )*_fee .PdfObjectDictionary {if _gefc !=""&&_bddaf ._agbcd !=""&&_gefc !=_bddaf ._agbcd {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_gefc ,_bddaf );}else if _gefc ==""&&_bddaf ._agbcd ==""{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bddaf );}else if _bddaf ._agbcd ==""{_bddaf ._agbcd =_gefc ;};_caag :=_fee .MakeDict ();_caag .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0046\u006f\u006e\u0074"));_caag .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fee .MakeName (_bddaf ._fagfdc ));_caag .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName (_bddaf ._agbcd ));if _bddaf ._dedcg !=nil {_caag .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_bddaf ._dedcg .ToPdfObject ());};if _bddaf ._gcfe !=nil {_caag .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bddaf ._gcfe );}else if _bddaf ._edeab !=nil {_agbag ,_bcecd :=_bddaf ._edeab .Stream ();if _bcecd !=nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_bcecd );}else {_caag .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_agbag );};};return _caag ;};

// ToGoTime returns the date in time.Time format.
func (_cdfg PdfDate )ToGoTime ()_e .Time {_eeabf :=int (_cdfg ._eebfg *60*60+_cdfg ._bafga *60);switch _cdfg ._adbe {case '-':_eeabf =-_eeabf ;case 'Z':_eeabf =0;};_cfgfc :=_ba .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_cdfg ._adbe ,_cdfg ._eebfg ,_cdfg ._bafga );_effca :=_e .FixedZone (_cfgfc ,_eeabf );return _e .Date (int (_cdfg ._agfda ),_e .Month (_cdfg ._dgaac ),int (_cdfg ._gfgad ),int (_cdfg ._cgbab ),int (_cdfg ._fdcba ),int (_cdfg ._dbead ),0,_effca );};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_adffaa :=&XObjectForm {};_cdgac :=&_fee .PdfObjectStream {};_cdgac .PdfObjectDictionary =_fee .MakeDict ();_adffaa ._cdbge =_cdgac ;return _adffaa ;};func _cagbgf ()string {_ccgg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _fgff _ed .Buffer ;for _efda :=0;_efda < 6;_efda ++{_fgff .WriteRune (rune (_ccgg [_bf .Intn (len (_ccgg ))]));};return _fgff .String ();};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dfabe *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// GetCharMetrics returns the char metrics for character code `code`.
func (_eadbb pdfCIDFontType0 )GetCharMetrics (code _de .CharCode )(_cg .CharMetrics ,bool ){_ddcef :=_eadbb ._cbgg ;if _gggea ,_debbb :=_eadbb ._aegc [code ];_debbb {_ddcef =_gggea ;};return _cg .CharMetrics {Wx :_ddcef },true ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_bac .PSProgram ;_cdbde *_bac .PSExecutor ;_dfcgg []byte ;_geag *_fee .PdfObjectStream ;};func (_ab *PdfReader )newPdfActionFromIndirectObject (_bfa *_fee .PdfIndirectObject )(*PdfAction ,error ){_fff ,_efa :=_bfa .PdfObject .(*_fee .PdfObjectDictionary );if !_efa {return nil ,_ba .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_ab ._abgg .GetModelFromPrimitive (_fff );model !=nil {_bacc ,_gcgf :=model .(*PdfAction );if !_gcgf {return nil ,_ba .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _bacc ,nil ;};_ede :=&PdfAction {};_ede ._fg =_bfa ;_ab ._abgg .Register (_fff ,_ede );if _fdd :=_fff .Get ("\u0054\u0079\u0070\u0065");_fdd !=nil {_cfc ,_edc :=_fdd .(*_fee .PdfObjectName );if !_edc {_adc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fdd );}else {if *_cfc !="\u0041\u0063\u0074\u0069\u006f\u006e"{_adc .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_cfc );};_ede .Type =_cfc ;};};if _bdc :=_fff .Get ("\u004e\u0065\u0078\u0074");_bdc !=nil {_ede .Next =_bdc ;};if _cbc :=_fff .Get ("\u0053");_cbc !=nil {_ede .S =_cbc ;};_gffc ,_ggf :=_ede .S .(*_fee .PdfObjectName );if !_ggf {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ede .S );return nil ,_ba .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ede .S );};_ddfb :=PdfActionType (_gffc .String ());switch _ddfb {case ActionTypeGoTo :_deb ,_debe :=_ab .newPdfActionGotoFromDict (_fff );if _debe !=nil {return nil ,_debe ;};_deb .PdfAction =_ede ;_ede ._eee =_deb ;return _ede ,nil ;case ActionTypeGoToR :_ebe ,_ec :=_ab .newPdfActionGotoRFromDict (_fff );if _ec !=nil {return nil ,_ec ;};_ebe .PdfAction =_ede ;_ede ._eee =_ebe ;return _ede ,nil ;case ActionTypeGoToE :_acgd ,_bfg :=_ab .newPdfActionGotoEFromDict (_fff );if _bfg !=nil {return nil ,_bfg ;};_acgd .PdfAction =_ede ;_ede ._eee =_acgd ;return _ede ,nil ;case ActionTypeLaunch :_cce ,_agf :=_ab .newPdfActionLaunchFromDict (_fff );if _agf !=nil {return nil ,_agf ;};_cce .PdfAction =_ede ;_ede ._eee =_cce ;return _ede ,nil ;case ActionTypeThread :_acce ,_bde :=_ab .newPdfActionThreadFromDict (_fff );if _bde !=nil {return nil ,_bde ;};_acce .PdfAction =_ede ;_ede ._eee =_acce ;return _ede ,nil ;case ActionTypeURI :_fbf ,_agc :=_ab .newPdfActionURIFromDict (_fff );if _agc !=nil {return nil ,_agc ;};_fbf .PdfAction =_ede ;_ede ._eee =_fbf ;return _ede ,nil ;case ActionTypeSound :_efg ,_dgad :=_ab .newPdfActionSoundFromDict (_fff );if _dgad !=nil {return nil ,_dgad ;};_efg .PdfAction =_ede ;_ede ._eee =_efg ;return _ede ,nil ;case ActionTypeMovie :_abe ,_bedg :=_ab .newPdfActionMovieFromDict (_fff );if _bedg !=nil {return nil ,_bedg ;};_abe .PdfAction =_ede ;_ede ._eee =_abe ;return _ede ,nil ;case ActionTypeHide :_bgf ,_gcd :=_ab .newPdfActionHideFromDict (_fff );if _gcd !=nil {return nil ,_gcd ;};_bgf .PdfAction =_ede ;_ede ._eee =_bgf ;return _ede ,nil ;case ActionTypeNamed :_fddd ,_bacdg :=_ab .newPdfActionNamedFromDict (_fff );if _bacdg !=nil {return nil ,_bacdg ;};_fddd .PdfAction =_ede ;_ede ._eee =_fddd ;return _ede ,nil ;case ActionTypeSubmitForm :_fgd ,_fea :=_ab .newPdfActionSubmitFormFromDict (_fff );if _fea !=nil {return nil ,_fea ;};_fgd .PdfAction =_ede ;_ede ._eee =_fgd ;return _ede ,nil ;case ActionTypeResetForm :_gd ,_cbe :=_ab .newPdfActionResetFormFromDict (_fff );if _cbe !=nil {return nil ,_cbe ;};_gd .PdfAction =_ede ;_ede ._eee =_gd ;return _ede ,nil ;case ActionTypeImportData :_dgd ,_dgc :=_ab .newPdfActionImportDataFromDict (_fff );if _dgc !=nil {return nil ,_dgc ;};_dgd .PdfAction =_ede ;_ede ._eee =_dgd ;return _ede ,nil ;case ActionTypeSetOCGState :_fffc ,_bef :=_ab .newPdfActionSetOCGStateFromDict (_fff );if _bef !=nil {return nil ,_bef ;};_fffc .PdfAction =_ede ;_ede ._eee =_fffc ;return _ede ,nil ;case ActionTypeRendition :_cdf ,_db :=_ab .newPdfActionRenditionFromDict (_fff );if _db !=nil {return nil ,_db ;};_cdf .PdfAction =_ede ;_ede ._eee =_cdf ;return _ede ,nil ;case ActionTypeTrans :_dab ,_cgb :=_ab .newPdfActionTransFromDict (_fff );if _cgb !=nil {return nil ,_cgb ;};_dab .PdfAction =_ede ;_ede ._eee =_dab ;return _ede ,nil ;case ActionTypeGoTo3DView :_agd ,_eag :=_ab .newPdfActionGoTo3DViewFromDict (_fff );if _eag !=nil {return nil ,_eag ;};_agd .PdfAction =_ede ;_ede ._eee =_agd ;return _ede ,nil ;case ActionTypeJavaScript :_aad ,_fccd :=_ab .newPdfActionJavaScriptFromDict (_fff );if _fccd !=nil {return nil ,_fccd ;};_aad .PdfAction =_ede ;_ede ._eee =_aad ;return _ede ,nil ;};_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_ddfb );return nil ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_ggfdc *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdff :=vals [0];_efbdc :=[]float64 {_cdff };_aeceb ,_dagd :=_ggfdc .TintTransform .Evaluate (_efbdc );if _dagd !=nil {_adc .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_dagd );_adc .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ggfdc .TintTransform );return nil ,_dagd ;};_adc .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_aeceb ,_ggfdc .AlternateSpace );_cab ,_dagd :=_ggfdc .AlternateSpace .ColorFromFloats (_aeceb );if _dagd !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_dagd );return nil ,_dagd ;};return _cab ,nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_bbgc *PdfReader )GetOCProperties ()(_fee .PdfObject ,error ){_gagg :=_bbgc ._egdgd ;_edeaa :=_gagg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_edeaa =_fee .ResolveReference (_edeaa );if !_bbgc ._cgff {_aedeb :=_bbgc .traverseObjectData (_edeaa );if _aedeb !=nil {return nil ,_aedeb ;};};return _edeaa ,nil ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_ffdeaa :=PdfDate {};_dadd :=_cecec .FindAllStringSubmatch (dateStr ,1);if len (_dadd )< 1{return _ffdeaa ,_ba .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_dadd [0])!=10{return _ffdeaa ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_ffdeaa ._agfda ,_ =_af .ParseInt (_dadd [0][1],10,32);_ffdeaa ._dgaac ,_ =_af .ParseInt (_dadd [0][2],10,32);_ffdeaa ._gfgad ,_ =_af .ParseInt (_dadd [0][3],10,32);_ffdeaa ._cgbab ,_ =_af .ParseInt (_dadd [0][4],10,32);_ffdeaa ._fdcba ,_ =_af .ParseInt (_dadd [0][5],10,32);_ffdeaa ._dbead ,_ =_af .ParseInt (_dadd [0][6],10,32);if len (_dadd [0][7])> 0{_ffdeaa ._adbe =_dadd [0][7][0];}else {_ffdeaa ._adbe ='+';};if len (_dadd [0][8])> 0{_ffdeaa ._eebfg ,_ =_af .ParseInt (_dadd [0][8],10,32);}else {_ffdeaa ._eebfg =0;};if len (_dadd [0][9])> 0{_ffdeaa ._bafga ,_ =_af .ParseInt (_dadd [0][9],10,32);}else {_ffdeaa ._bafga =0;};return _ffdeaa ,nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_bea :=NewPdfAction ();_gb :=&PdfActionGoTo3DView {};_gb .PdfAction =_bea ;_bea .SetContext (_gb );return _gb ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_cgg :=&PdfAction {};_cgg ._fg =_fee .MakeIndirectObject (_fee .MakeDict ());return _cgg ;};func (_gfaaf *LTV )getCRLs (_dfde []*_d .Certificate )([][]byte ,error ){_bggf :=make ([][]byte ,0,len (_dfde ));for _ ,_egga :=range _dfde {for _ ,_gegce :=range _egga .CRLDistributionPoints {if _gfaaf ._fgegg .IsCA (_egga ){continue ;};_bfcgd ,_baafb :=_gfaaf ._geecf .MakeRequest (_gegce ,_egga );if _baafb !=nil {_adc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_baafb );continue ;};_bggf =append (_bggf ,_bfcgd );};};return _bggf ,nil ;};func _gbbe (_ggac *_fee .PdfObjectDictionary ,_eacc *fontCommon )(*pdfFontType0 ,error ){_badfb ,_aegfe :=_fee .GetArray (_ggac .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_aegfe {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_eacc );return nil ,_fee .ErrRangeError ;};if _badfb .Len ()!=1{_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_badfb .Len ());return nil ,_fee .ErrRangeError ;};_dbgfg ,_bgge :=_bccga (_badfb .Get (0),false );if _bgge !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bgge ,_eacc );return nil ,_bgge ;};_cdcbc :=_fgbf (_eacc );_cdcbc .DescendantFont =_dbgfg ;_edff ,_aegfe :=_fee .GetNameVal (_ggac .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _aegfe {if _edff =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_edff =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_cdcbc ._daad =_de .NewIdentityTextEncoder (_edff );}else if _afb .IsPredefinedCMap (_edff ){_cdcbc ._ddddf ,_bgge =_afb .LoadPredefinedCMap (_edff );if _bgge !=nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_edff ,_bgge );};}else {_adc .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_edff );};};if _ecbaf :=_dbgfg .baseFields ()._edeab ;_ecbaf !=nil {if _cfcg :=_ecbaf .Name ();_cfcg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_cfcg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_cfcg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_cfcg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_cdcbc ._daad =_de .NewCMapEncoder (_edff ,_cdcbc ._ddddf ,_ecbaf );};};return _cdcbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ffdf *PdfAnnotationPolyLine )ToPdfObject ()_fee .PdfObject {_ffdf .PdfAnnotation .ToPdfObject ();_ageg :=_ffdf ._gdc ;_cagb :=_ageg .PdfObject .(*_fee .PdfObjectDictionary );_ffdf .PdfAnnotationMarkup .appendToPdfDictionary (_cagb );_cagb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_cagb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ffdf .Vertices );_cagb .SetIfNotNil ("\u004c\u0045",_ffdf .LE );_cagb .SetIfNotNil ("\u0042\u0053",_ffdf .BS );_cagb .SetIfNotNil ("\u0049\u0043",_ffdf .IC );_cagb .SetIfNotNil ("\u0042\u0045",_ffdf .BE );_cagb .SetIfNotNil ("\u0049\u0054",_ffdf .IT );_cagb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ffdf .Measure );return _ageg ;};var (CourierName =_cg .CourierName ;CourierBoldName =_cg .CourierBoldName ;CourierObliqueName =_cg .CourierObliqueName ;CourierBoldObliqueName =_cg .CourierBoldObliqueName ;HelveticaName =_cg .HelveticaName ;HelveticaBoldName =_cg .HelveticaBoldName ;HelveticaObliqueName =_cg .HelveticaObliqueName ;HelveticaBoldObliqueName =_cg .HelveticaBoldObliqueName ;SymbolName =_cg .SymbolName ;ZapfDingbatsName =_cg .ZapfDingbatsName ;TimesRomanName =_cg .TimesRomanName ;TimesBoldName =_cg .TimesBoldName ;TimesItalicName =_cg .TimesItalicName ;TimesBoldItalicName =_cg .TimesBoldItalicName ;);

// String returns a string describing the font descriptor.
func (_cgfgg *PdfFontDescriptor )String ()string {var _edgfb []string ;if _cgfgg .FontName !=nil {_edgfb =append (_edgfb ,_cgfgg .FontName .String ());};if _cgfgg .FontFamily !=nil {_edgfb =append (_edgfb ,_cgfgg .FontFamily .String ());};if _cgfgg .fontFile !=nil {_edgfb =append (_edgfb ,_cgfgg .fontFile .String ());};if _cgfgg ._cgee !=nil {_edgfb =append (_edgfb ,_cgfgg ._cgee .String ());};_edgfb =append (_edgfb ,_ba .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_cgfgg .FontFile3 !=nil ));return _ba .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ebc .Join (_edgfb ,"\u002c\u0020"));};func (_eaaga *Image )resampleLowBits (_fedd []uint32 ){_aaafd :=_ffg .BytesPerLine (int (_eaaga .Width ),int (_eaaga .BitsPerComponent ),_eaaga .ColorComponents );_ccddd :=make ([]byte ,_eaaga .ColorComponents *_aaafd *int (_eaaga .Height ));_eeccb :=int (_eaaga .BitsPerComponent )*_eaaga .ColorComponents *int (_eaaga .Width );_dgfce :=uint8 (8);var (_eafgb ,_gdgae int ;_fgcae uint32 ;);for _gcggfg :=0;_gcggfg < int (_eaaga .Height );_gcggfg ++{_gdgae =_gcggfg *_aaafd ;for _adgag :=0;_adgag < _eeccb ;_adgag ++{_fgcae =_fedd [_eafgb ];_dgfce -=uint8 (_eaaga .BitsPerComponent );_ccddd [_gdgae ]|=byte (_fgcae )<<_dgfce ;if _dgfce ==0{_dgfce =8;_gdgae ++;};_eafgb ++;};};_eaaga .Data =_ccddd ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_aac :=NewPdfAnnotation ();_cee :=&PdfAnnotationHighlight {};_cee .PdfAnnotation =_aac ;_cee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aac .SetContext (_cee );return _cee ;};

// GetContainingPdfObject implements interface PdfModel.
func (_degdd *PdfSignature )GetContainingPdfObject ()_fee .PdfObject {return _degdd ._fcfage };

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _fee .PdfObject ;Volume _fee .PdfObject ;Synchronous _fee .PdfObject ;Repeat _fee .PdfObject ;Mix _fee .PdfObject ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_ebda :=NewPdfAnnotation ();_bgcfg :=&PdfAnnotationFreeText {};_bgcfg .PdfAnnotation =_ebda ;_bgcfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebda .SetContext (_bgcfg );return _bgcfg ;};

// SetBorderWidth sets the style's border width.
func (_bbe *PdfBorderStyle )SetBorderWidth (width float64 ){_bbe .W =&width };func _bdfe (_gafd *_fee .PdfIndirectObject )(*PdfOutline ,error ){_baaff ,_adeda :=_gafd .PdfObject .(*_fee .PdfObjectDictionary );if !_adeda {return nil ,_ba .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_degg :=NewPdfOutline ();if _abbcb :=_baaff .Get ("\u0054\u0079\u0070\u0065");_abbcb !=nil {_agfbf ,_acbc :=_abbcb .(*_fee .PdfObjectName );if _acbc {if *_agfbf !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_agfbf );};};};if _abeba :=_baaff .Get ("\u0043\u006f\u0075n\u0074");_abeba !=nil {_ebccg ,_ecdb :=_fee .GetNumberAsInt64 (_abeba );if _ecdb !=nil {return nil ,_ecdb ;};_degg .Count =&_ebccg ;};return _degg ,nil ;};func (_bcb *PdfReader )newPdfActionSubmitFormFromDict (_agea *_fee .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_deg ,_abc :=_dcg (_agea .Get ("\u0046"));if _abc !=nil {return nil ,_abc ;};return &PdfActionSubmitForm {F :_deg ,Fields :_agea .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_agea .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func (_feg *PdfReader )newPdfActionTransFromDict (_egd *_fee .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_egd .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_ebbg :=PdfColorLab {l ,a ,b };return &_ebbg };

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_gbdbe *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_agfa :=_ef .NewReader (img .getBase ());_agaea :=_ffg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._babdc ,img ._gbaa );_eggc :=_ef .NewWriter (_agaea );_ggeea :=_eba .Pow (2,float64 (img .BitsPerComponent ))-1;_fgeeb :=_gbdbe .GetNumComponents ();_ecbb :=make ([]uint32 ,_fgeeb );_eecb :=make ([]float64 ,_fgeeb );for {_ffgc :=_agfa .ReadSamples (_ecbb );if _ffgc ==_be .EOF {break ;}else if _ffgc !=nil {return img ,_ffgc ;};for _ceae :=0;_ceae < _fgeeb ;_ceae ++{_ffge :=float64 (_ecbb [_ceae ])/_ggeea ;_eecb [_ceae ]=_ffge ;};_feec ,_ffgc :=_gbdbe .TintTransform .Evaluate (_eecb );if _ffgc !=nil {return img ,_ffgc ;};for _ ,_eefg :=range _feec {_eefg =_eba .Min (_eba .Max (0,_eefg ),1.0);if _ffgc =_eggc .WriteSample (uint32 (_eefg *_ggeea ));_ffgc !=nil {return img ,_ffgc ;};};};return _gbdbe .AlternateSpace .ImageToRGB (_edabc (&_agaea ));};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_gbgf :=NewPdfAnnotation ();_feea :=&PdfAnnotationSquiggly {};_feea .PdfAnnotation =_gbgf ;_feea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbgf .SetContext (_feea );return _feea ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_adf :=NewPdfAnnotation ();_egc :=&PdfAnnotationWatermark {};_egc .PdfAnnotation =_adf ;_adf .SetContext (_egc );return _egc ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_feeb :=NewPdfAnnotation ();_bccg :=&PdfAnnotationStamp {};_bccg .PdfAnnotation =_feeb ;_bccg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_feeb .SetContext (_bccg );return _bccg ;};

// String implements interface PdfObject.
func (_gff *PdfAction )String ()string {_baa ,_cc :=_gff .ToPdfObject ().(*_fee .PdfIndirectObject );if _cc {return _ba .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gff ._eee ,_baa .PdfObject .String ());};return "";};

// String returns a string representation of what flags are set.
func (_bccec FieldFlag )String ()string {_ecfab :="";if _bccec ==FieldFlagClear {_ecfab ="\u0043\u006c\u0065a\u0072";return _ecfab ;};if _bccec &FieldFlagReadOnly > 0{_ecfab +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bccec &FieldFlagRequired > 0{_ecfab +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bccec &FieldFlagNoExport > 0{_ecfab +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _bccec &FieldFlagNoToggleToOff > 0{_ecfab +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _bccec &FieldFlagRadio > 0{_ecfab +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _bccec &FieldFlagPushbutton > 0{_ecfab +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _bccec &FieldFlagRadiosInUnision > 0{_ecfab +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _bccec &FieldFlagMultiline > 0{_ecfab +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _bccec &FieldFlagPassword > 0{_ecfab +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _bccec &FieldFlagFileSelect > 0{_ecfab +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _bccec &FieldFlagDoNotScroll > 0{_ecfab +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _bccec &FieldFlagComb > 0{_ecfab +="\u007c\u0043\u006fm\u0062";};if _bccec &FieldFlagRichText > 0{_ecfab +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _bccec &FieldFlagDoNotSpellCheck > 0{_ecfab +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _bccec &FieldFlagCombo > 0{_ecfab +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _bccec &FieldFlagEdit > 0{_ecfab +="\u007c\u0045\u0064i\u0074";};if _bccec &FieldFlagSort > 0{_ecfab +="\u007c\u0053\u006fr\u0074";};if _bccec &FieldFlagMultiSelect > 0{_ecfab +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _bccec &FieldFlagCommitOnSelChange > 0{_ecfab +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ebc .Trim (_ecfab ,"\u007c");};

// GetFontDescriptor returns the font descriptor for `font`.
func (_aafe PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _aafe ._ddaad .getFontDescriptor (),nil ;};func (_dbdee *PdfWriter )updateObjectNumbers (){_cebaf :=_dbdee .ObjNumOffset ;_dgbdcc :=0;for _ ,_fecf :=range _dbdee ._fagbg {_bbgcb :=int64 (_dgbdcc +1+_cebaf );_decbb :=true ;if _dbdee ._ccadg {if _fdfag ,_defbd :=_dbdee ._afcce [_fecf ];_defbd {_bbgcb =_fdfag ;_decbb =false ;};};switch _bdge :=_fecf .(type ){case *_fee .PdfIndirectObject :_bdge .ObjectNumber =_bbgcb ;_bdge .GenerationNumber =0;case *_fee .PdfObjectStream :_bdge .ObjectNumber =_bbgcb ;_bdge .GenerationNumber =0;case *_fee .PdfObjectStreams :_bdge .ObjectNumber =_bbgcb ;_bdge .GenerationNumber =0;default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_bdge );continue ;};if _decbb {_dgbdcc ++;};};_edgea :=func (_ccffbb _fee .PdfObject )int64 {switch _bgfbb :=_ccffbb .(type ){case *_fee .PdfIndirectObject :return _bgfbb .ObjectNumber ;case *_fee .PdfObjectStream :return _bgfbb .ObjectNumber ;case *_fee .PdfObjectStreams :return _bgfbb .ObjectNumber ;};return 0;};_dd .SliceStable (_dbdee ._fagbg ,func (_ddgeb ,_bfefg int )bool {return _edgea (_dbdee ._fagbg [_ddgeb ])< _edgea (_dbdee ._fagbg [_bfefg ])});};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_aabga *PdfPattern )GetContainingPdfObject ()_fee .PdfObject {return _aabga ._aege };

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_eafdb *PdfReader )GetEncryptionMethod ()string {_fdbcb :=_eafdb ._daae .GetCrypter ();return _fdbcb .String ();};

// B returns the value of the blue component of the color.
func (_gdab *PdfColorDeviceRGB )B ()float64 {return float64 (_gdab [2])};func _adbc (_fdcf *_fee .PdfObjectDictionary )(*PdfFieldChoice ,error ){_egab :=&PdfFieldChoice {};_egab .Opt ,_ =_fee .GetArray (_fdcf .Get ("\u004f\u0070\u0074"));_egab .TI ,_ =_fee .GetInt (_fdcf .Get ("\u0054\u0049"));_egab .I ,_ =_fee .GetArray (_fdcf .Get ("\u0049"));return _egab ,nil ;};func (_dgbc *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// Encoder returns the font's text encoder.
func (_adde pdfFontType0 )Encoder ()_de .TextEncoder {return _adde ._daad };func (_daff *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// ToPdfObject implements interface PdfModel.
func (_bgba *PdfAnnotationRedact )ToPdfObject ()_fee .PdfObject {_bgba .PdfAnnotation .ToPdfObject ();_cagcf :=_bgba ._gdc ;_ceee :=_cagcf .PdfObject .(*_fee .PdfObjectDictionary );_bgba .PdfAnnotationMarkup .appendToPdfDictionary (_ceee );_ceee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_ceee .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bgba .QuadPoints );_ceee .SetIfNotNil ("\u0049\u0043",_bgba .IC );_ceee .SetIfNotNil ("\u0052\u004f",_bgba .RO );_ceee .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_bgba .OverlayText );_ceee .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bgba .Repeat );_ceee .SetIfNotNil ("\u0044\u0041",_bgba .DA );_ceee .SetIfNotNil ("\u0051",_bgba .Q );return _cagcf ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_aadcd *pdfFontSimple )ToPdfObject ()_fee .PdfObject {if _aadcd ._bafdf ==nil {_aadcd ._bafdf =&_fee .PdfIndirectObject {};};_aafc :=_aadcd .baseFields ().asPdfObjectDictionary ("");_aadcd ._bafdf .PdfObject =_aafc ;if _aadcd .FirstChar !=nil {_aafc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_aadcd .FirstChar );};if _aadcd .LastChar !=nil {_aafc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_aadcd .LastChar );};if _aadcd .Widths !=nil {_aafc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_aadcd .Widths );};if _aadcd .Encoding !=nil {_aafc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aadcd .Encoding );}else if _aadcd ._agcc !=nil {_baad :=_aadcd ._agcc .ToPdfObject ();if _baad !=nil {_aafc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_baad );};};return _aadcd ._bafdf ;};var _ _fee .PdfObject =&pdfSignDictionary {};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_adfea *_fee .PdfIndirectObject ;Certs []*_fee .PdfObjectStream ;OCSPs []*_fee .PdfObjectStream ;CRLs []*_fee .PdfObjectStream ;VRI map[string ]*VRI ;_fbcf map[string ]*_fee .PdfObjectStream ;_ggdg map[string ]*_fee .PdfObjectStream ;_bfagf map[string ]*_fee .PdfObjectStream ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_ceed :=NewPdfAnnotation ();_cea :=&PdfAnnotationTrapNet {};_cea .PdfAnnotation =_ceed ;_ceed .SetContext (_cea );return _cea ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_cgga []byte )(_aafaaa int ,_gbbc error );};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_feeff *pdfFontSimple )SetEncoder (encoder _de .TextEncoder ){_feeff ._agcc =encoder };

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_gde *PdfFieldSignature )ToPdfObject ()_fee .PdfObject {if _gde .PdfAnnotationWidget !=nil {_gde .PdfAnnotationWidget .ToPdfObject ();};_gde .PdfField .ToPdfObject ();_gdfb :=_gde ._bdcdc ;_ggdc :=_gdfb .PdfObject .(*_fee .PdfObjectDictionary );_ggdc .SetIfNotNil ("\u0046\u0054",_fee .MakeName ("\u0053\u0069\u0067"));_ggdc .SetIfNotNil ("\u004c\u006f\u0063\u006b",_gde .Lock );_ggdc .SetIfNotNil ("\u0053\u0056",_gde .SV );if _gde .V !=nil {_ggdc .SetIfNotNil ("\u0056",_gde .V .ToPdfObject ());};return _gdfb ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_dfaca *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_dfaca ._bbgg =colorspace ;};func _acaa (_cagfg *_fee .PdfObjectStream )(*PdfFunctionType0 ,error ){_bfbdd :=&PdfFunctionType0 {};_bfbdd ._bfdcd =_cagfg ;_dbcga :=_cagfg .PdfObjectDictionary ;_fdef ,_ecdab :=_fee .TraceToDirectObject (_dbcga .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fee .PdfObjectArray );if !_ecdab {_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fdef .Len ()< 0||_fdef .Len ()%2!=0{_adc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_beg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bfbdd .NumInputs =_fdef .Len ()/2;_bdaeb ,_afee :=_fdef .ToFloat64Array ();if _afee !=nil {return nil ,_afee ;};_bfbdd .Domain =_bdaeb ;_fdef ,_ecdab =_fee .TraceToDirectObject (_dbcga .Get ("\u0052\u0061\u006eg\u0065")).(*_fee .PdfObjectArray );if !_ecdab {_adc .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fdef .Len ()< 0||_fdef .Len ()%2!=0{return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bfbdd .NumOutputs =_fdef .Len ()/2;_acadf ,_afee :=_fdef .ToFloat64Array ();if _afee !=nil {return nil ,_afee ;};_bfbdd .Range =_acadf ;_fdef ,_ecdab =_fee .TraceToDirectObject (_dbcga .Get ("\u0053\u0069\u007a\u0065")).(*_fee .PdfObjectArray );if !_ecdab {_adc .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bfcb ,_afee :=_fdef .ToIntegerArray ();if _afee !=nil {return nil ,_afee ;};if len (_bfcb )!=_bfbdd .NumInputs {_adc .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfbdd .Size =_bfcb ;_cafg ,_ecdab :=_fee .TraceToDirectObject (_dbcga .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_fee .PdfObjectInteger );if !_ecdab {_adc .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_cafg !=1&&*_cafg !=2&&*_cafg !=4&&*_cafg !=8&&*_cafg !=12&&*_cafg !=16&&*_cafg !=24&&*_cafg !=32{_adc .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_cafg );return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfbdd .BitsPerSample =int (*_cafg );_bfbdd .Order =1;_bcga ,_ecdab :=_fee .TraceToDirectObject (_dbcga .Get ("\u004f\u0072\u0064e\u0072")).(*_fee .PdfObjectInteger );if _ecdab {if *_bcga !=1&&*_bcga !=3{_adc .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_bcga );return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfbdd .Order =int (*_bcga );};_fdef ,_ecdab =_fee .TraceToDirectObject (_dbcga .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fee .PdfObjectArray );if _ecdab {_bdeb ,_ebec :=_fdef .ToFloat64Array ();if _ebec !=nil {return nil ,_ebec ;};_bfbdd .Encode =_bdeb ;};_fdef ,_ecdab =_fee .TraceToDirectObject (_dbcga .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_fee .PdfObjectArray );if _ecdab {_bdfcaf ,_bfff :=_fdef .ToFloat64Array ();if _bfff !=nil {return nil ,_bfff ;};_bfbdd .Decode =_bdfcaf ;};_cfdfe ,_afee :=_fee .DecodeStream (_cagfg );if _afee !=nil {return nil ,_afee ;};_bfbdd ._cgadae =_cfdfe ;return _bfbdd ,nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _fee .PdfObject ;AN _fee .PdfObject ;OP _fee .PdfObject ;JS _fee .PdfObject ;};func _bbefd (_gedbe _fee .PdfObject )(*PdfShading ,error ){_feedf :=&PdfShading {};var _gbffb *_fee .PdfObjectDictionary ;if _afdb ,_acddg :=_fee .GetIndirect (_gedbe );_acddg {_feedf ._gbadg =_afdb ;_daceb ,_fcdgc :=_afdb .PdfObject .(*_fee .PdfObjectDictionary );if !_fcdgc {_adc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_fee .ErrTypeError ;};_gbffb =_daceb ;}else if _deaeg ,_dabge :=_fee .GetStream (_gedbe );_dabge {_feedf ._gbadg =_deaeg ;_gbffb =_deaeg .PdfObjectDictionary ;}else if _ecfdf ,_beccb :=_fee .GetDict (_gedbe );_beccb {_feedf ._gbadg =_ecfdf ;_gbffb =_ecfdf ;}else {_adc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_gedbe );return nil ,_fee .ErrTypeError ;};if _gbffb ==nil {_adc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_beg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gedbe =_gbffb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gedbe ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gedbe =_fee .TraceToDirectObject (_gedbe );_eged ,_feafd :=_gedbe .(*_fee .PdfObjectInteger );if !_feafd {_adc .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gedbe );return nil ,_fee .ErrTypeError ;};if *_eged < 1||*_eged > 7{_adc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_eged );return nil ,_fee .ErrTypeError ;};_feedf .ShadingType =_eged ;_gedbe =_gbffb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _gedbe ==nil {_adc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_daaba ,_cbggc :=NewPdfColorspaceFromPdfObject (_gedbe );if _cbggc !=nil {_adc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_cbggc );return nil ,_cbggc ;};_feedf .ColorSpace =_daaba ;_gedbe =_gbffb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _gedbe !=nil {_gedbe =_fee .TraceToDirectObject (_gedbe );_gbagd ,_cgbe :=_gedbe .(*_fee .PdfObjectArray );if !_cgbe {_adc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gedbe );return nil ,_fee .ErrTypeError ;};_feedf .Background =_gbagd ;};_gedbe =_gbffb .Get ("\u0042\u0042\u006f\u0078");if _gedbe !=nil {_gedbe =_fee .TraceToDirectObject (_gedbe );_fffac ,_ecgdb :=_gedbe .(*_fee .PdfObjectArray );if !_ecgdb {_adc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gedbe );return nil ,_fee .ErrTypeError ;};_fbbfg ,_afaf :=NewPdfRectangle (*_fffac );if _afaf !=nil {_adc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_afaf );return nil ,_afaf ;};_feedf .BBox =_fbbfg ;};_gedbe =_gbffb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _gedbe !=nil {_gedbe =_fee .TraceToDirectObject (_gedbe );_bbdggd ,_caccc :=_gedbe .(*_fee .PdfObjectBool );if !_caccc {_adc .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gedbe );return nil ,_fee .ErrTypeError ;};_feedf .AntiAlias =_bbdggd ;};switch *_eged {case 1:_bfcga ,_dfege :=_gddea (_gbffb );if _dfege !=nil {return nil ,_dfege ;};_bfcga .PdfShading =_feedf ;_feedf ._gfae =_bfcga ;return _feedf ,nil ;case 2:_ebgdb ,_fdebac :=_cfbac (_gbffb );if _fdebac !=nil {return nil ,_fdebac ;};_ebgdb .PdfShading =_feedf ;_feedf ._gfae =_ebgdb ;return _feedf ,nil ;case 3:_fadgd ,_ebfb :=_dbec (_gbffb );if _ebfb !=nil {return nil ,_ebfb ;};_fadgd .PdfShading =_feedf ;_feedf ._gfae =_fadgd ;return _feedf ,nil ;case 4:_aafce ,_eeegd :=_afaec (_gbffb );if _eeegd !=nil {return nil ,_eeegd ;};_aafce .PdfShading =_feedf ;_feedf ._gfae =_aafce ;return _feedf ,nil ;case 5:_fagbc ,_ffebe :=_eebed (_gbffb );if _ffebe !=nil {return nil ,_ffebe ;};_fagbc .PdfShading =_feedf ;_feedf ._gfae =_fagbc ;return _feedf ,nil ;case 6:_dgbee ,_cbccc :=_bfddc (_gbffb );if _cbccc !=nil {return nil ,_cbccc ;};_dgbee .PdfShading =_feedf ;_feedf ._gfae =_dgbee ;return _feedf ,nil ;case 7:_fdffe ,_efbbe :=_dbaf (_gbffb );if _efbbe !=nil {return nil ,_efbbe ;};_fdffe .PdfShading =_feedf ;_feedf ._gfae =_fdffe ;return _feedf ,nil ;};return nil ,_beg .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func _aeaa (_ceaa *_fee .PdfObjectDictionary )*VRI {_ecad ,_ :=_fee .GetString (_ceaa .Get ("\u0054\u0055"));_cddc ,_ :=_fee .GetString (_ceaa .Get ("\u0054\u0053"));return &VRI {Cert :_fgab (_ceaa .Get ("\u0043\u0065\u0072\u0074")),OCSP :_fgab (_ceaa .Get ("\u004f\u0043\u0053\u0050")),CRL :_fgab (_ceaa .Get ("\u0043\u0052\u004c")),TU :_ecad ,TS :_cddc };};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fee .PdfObject ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ecaa *PdfFontDescriptor )ToPdfObject ()_fee .PdfObject {_fbfdb :=_fee .MakeDict ();if _ecaa ._gbag ==nil {_ecaa ._gbag =&_fee .PdfIndirectObject {};};_ecaa ._gbag .PdfObject =_fbfdb ;_fbfdb .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _ecaa .FontName !=nil {_fbfdb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ecaa .FontName );};if _ecaa .FontFamily !=nil {_fbfdb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ecaa .FontFamily );};if _ecaa .FontStretch !=nil {_fbfdb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ecaa .FontStretch );};if _ecaa .FontWeight !=nil {_fbfdb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ecaa .FontWeight );};if _ecaa .Flags !=nil {_fbfdb .Set ("\u0046\u006c\u0061g\u0073",_ecaa .Flags );};if _ecaa .FontBBox !=nil {_fbfdb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ecaa .FontBBox );};if _ecaa .ItalicAngle !=nil {_fbfdb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ecaa .ItalicAngle );};if _ecaa .Ascent !=nil {_fbfdb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ecaa .Ascent );};if _ecaa .Descent !=nil {_fbfdb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ecaa .Descent );};if _ecaa .Leading !=nil {_fbfdb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ecaa .Leading );};if _ecaa .CapHeight !=nil {_fbfdb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ecaa .CapHeight );};if _ecaa .XHeight !=nil {_fbfdb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ecaa .XHeight );};if _ecaa .StemV !=nil {_fbfdb .Set ("\u0053\u0074\u0065m\u0056",_ecaa .StemV );};if _ecaa .StemH !=nil {_fbfdb .Set ("\u0053\u0074\u0065m\u0048",_ecaa .StemH );};if _ecaa .AvgWidth !=nil {_fbfdb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ecaa .AvgWidth );};if _ecaa .MaxWidth !=nil {_fbfdb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ecaa .MaxWidth );};if _ecaa .MissingWidth !=nil {_fbfdb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ecaa .MissingWidth );};if _ecaa .FontFile !=nil {_fbfdb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ecaa .FontFile );};if _ecaa .FontFile2 !=nil {_fbfdb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ecaa .FontFile2 );};if _ecaa .FontFile3 !=nil {_fbfdb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ecaa .FontFile3 );};if _ecaa .CharSet !=nil {_fbfdb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ecaa .CharSet );};if _ecaa .Style !=nil {_fbfdb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ecaa .FontName );};if _ecaa .Lang !=nil {_fbfdb .Set ("\u004c\u0061\u006e\u0067",_ecaa .Lang );};if _ecaa .FD !=nil {_fbfdb .Set ("\u0046\u0044",_ecaa .FD );};if _ecaa .CIDSet !=nil {_fbfdb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ecaa .CIDSet );};return _ecaa ._gbag ;};

// SetContext sets the sub action (context).
func (_ffa *PdfAction )SetContext (ctx PdfModel ){_ffa ._eee =ctx };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _fee .PdfObject ;Name _fee .PdfObject ;};func (_cbgc *pdfCIDFontType2 )baseFields ()*fontCommon {return &_cbgc .fontCommon };const (_gffe =0x00001;_ffged =0x00002;_efdga =0x00004;_daeeb =0x00008;_fdegg =0x00020;_cggf =0x00040;_aeeea =0x10000;_gbec =0x20000;_fafbd =0x40000;);func (_fgfd *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ToPdfObject implements interface PdfModel.
func (_gbcc *PdfAnnotationRichMedia )ToPdfObject ()_fee .PdfObject {_gbcc .PdfAnnotation .ToPdfObject ();_efba :=_gbcc ._gdc ;_cba :=_efba .PdfObject .(*_fee .PdfObjectDictionary );_cba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_cba .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_gbcc .RichMediaSettings );_cba .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_gbcc .RichMediaContent );return _efba ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_bcbg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )!=_bcbg .GetNumComponents (){return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgcfgd ,_dabe :=_fee .GetNumbersAsFloat (objects );if _dabe !=nil {return nil ,_dabe ;};return _bcbg .ColorFromFloats (_bgcfgd );};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_dgeea *PdfFont )CharcodesToUnicodeWithStats (charcodes []_de .CharCode )(_egda []rune ,_dabd ,_ccec int ){_dcfe ,_dabd ,_ccec :=_dgeea .CharcodesToStrings (charcodes );return []rune (_ebc .Join (_dcfe ,"")),_dabd ,_ccec ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_gfaff *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_gebbf ,_dcgf :=color .(*PdfColorCalRGB );if !_dcgf {_adc .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffba :=_gebbf .A ();_fdca :=_gebbf .B ();_afgc :=_gebbf .C ();X :=_gfaff .Matrix [0]*_eba .Pow (_ffba ,_gfaff .Gamma [0])+_gfaff .Matrix [3]*_eba .Pow (_fdca ,_gfaff .Gamma [1])+_gfaff .Matrix [6]*_eba .Pow (_afgc ,_gfaff .Gamma [2]);Y :=_gfaff .Matrix [1]*_eba .Pow (_ffba ,_gfaff .Gamma [0])+_gfaff .Matrix [4]*_eba .Pow (_fdca ,_gfaff .Gamma [1])+_gfaff .Matrix [7]*_eba .Pow (_afgc ,_gfaff .Gamma [2]);Z :=_gfaff .Matrix [2]*_eba .Pow (_ffba ,_gfaff .Gamma [0])+_gfaff .Matrix [5]*_eba .Pow (_fdca ,_gfaff .Gamma [1])+_gfaff .Matrix [8]*_eba .Pow (_afgc ,_gfaff .Gamma [2]);_fagdf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dbcb :=-0.969256*X +1.875992*Y +0.041556*Z ;_ccdge :=0.055648*X +-0.204043*Y +1.057311*Z ;_fagdf =_eba .Min (_eba .Max (_fagdf ,0),1.0);_dbcb =_eba .Min (_eba .Max (_dbcb ,0),1.0);_ccdge =_eba .Min (_eba .Max (_ccdge ,0),1.0);return NewPdfColorDeviceRGB (_fagdf ,_dbcb ,_ccdge ),nil ;};

// SetForms sets the Acroform for a PDF file.
func (_agdbc *PdfWriter )SetForms (form *PdfAcroForm )error {_agdbc ._feeaa =form ;return nil };func _eaecf (_cgeea *_fee .PdfObjectDictionary )(*PdfTilingPattern ,error ){_fgfac :=&PdfTilingPattern {};_efge :=_cgeea .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _efge ==nil {_adc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_caccd ,_bcgb :=_efge .(*_fee .PdfObjectInteger );if !_bcgb {_adc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_efge );return nil ,_fee .ErrTypeError ;};_fgfac .PaintType =_caccd ;_efge =_cgeea .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _efge ==nil {_adc .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_baff ,_bcgb :=_efge .(*_fee .PdfObjectInteger );if !_bcgb {_adc .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_efge );return nil ,_fee .ErrTypeError ;};_fgfac .TilingType =_baff ;_efge =_cgeea .Get ("\u0042\u0042\u006f\u0078");if _efge ==nil {_adc .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_efge =_fee .TraceToDirectObject (_efge );_beba ,_bcgb :=_efge .(*_fee .PdfObjectArray );if !_bcgb {_adc .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_efge );return nil ,_fee .ErrTypeError ;};_ceef ,_gbbaf :=NewPdfRectangle (*_beba );if _gbbaf !=nil {_adc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gbbaf );return nil ,_gbbaf ;};_fgfac .BBox =_ceef ;_efge =_cgeea .Get ("\u0058\u0053\u0074e\u0070");if _efge ==nil {_adc .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bgbb ,_gbbaf :=_fee .GetNumberAsFloat (_efge );if _gbbaf !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bgbb );return nil ,_gbbaf ;};_fgfac .XStep =_fee .MakeFloat (_bgbb );_efge =_cgeea .Get ("\u0059\u0053\u0074e\u0070");if _efge ==nil {_adc .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfgb ,_gbbaf :=_fee .GetNumberAsFloat (_efge );if _gbbaf !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cfgb );return nil ,_gbbaf ;};_fgfac .YStep =_fee .MakeFloat (_cfgb );_efge =_cgeea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _efge ==nil {_adc .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cgeea ,_bcgb =_fee .TraceToDirectObject (_efge ).(*_fee .PdfObjectDictionary );if !_bcgb {return nil ,_ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_efge );};_begfcg ,_gbbaf :=NewPdfPageResourcesFromDict (_cgeea );if _gbbaf !=nil {return nil ,_gbbaf ;};_fgfac .Resources =_begfcg ;if _bdecd :=_cgeea .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bdecd !=nil {_gbcda ,_ccfbc :=_bdecd .(*_fee .PdfObjectArray );if !_ccfbc {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdecd );return nil ,_fee .ErrTypeError ;};_fgfac .Matrix =_gbcda ;};return _fgfac ,nil ;};func (_aeg *PdfReader )newPdfAnnotationTextFromDict (_faa *_fee .PdfObjectDictionary )(*PdfAnnotationText ,error ){_abee :=PdfAnnotationText {};_cdc ,_gad :=_aeg .newPdfAnnotationMarkupFromDict (_faa );if _gad !=nil {return nil ,_gad ;};_abee .PdfAnnotationMarkup =_cdc ;_abee .Open =_faa .Get ("\u004f\u0070\u0065\u006e");_abee .Name =_faa .Get ("\u004e\u0061\u006d\u0065");_abee .State =_faa .Get ("\u0053\u0074\u0061t\u0065");_abee .StateModel =_faa .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_abee ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bafdd *PdfReader )GetOutlines ()(*Outline ,error ){if _bafdd ==nil {return nil ,_beg .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_gcad :=_bafdd .GetOutlineTree ();if _gcad ==nil {return nil ,_beg .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _cbfd func (_deagb *PdfOutlineTreeNode ,_ffdea *[]*OutlineItem );_cbfd =func (_cgagd *PdfOutlineTreeNode ,_edgfbd *[]*OutlineItem ){if _cgagd ==nil {return ;};if _cgagd ._dbcdc ==nil {_adc .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _edfa *OutlineItem ;if _aabb ,_ecagd :=_cgagd ._dbcdc .(*PdfOutlineItem );_ecagd {_gacad :=_aabb .Dest ;if (_gacad ==nil ||_fee .IsNullObject (_gacad ))&&_aabb .A !=nil {if _fgeab ,_ebbbg :=_fee .GetDict (_aabb .A );_ebbbg {_gacad ,_ =_fee .GetArray (_fgeab .Get ("\u0044"));};};var _cecfe OutlineDest ;if _gacad !=nil &&!_fee .IsNullObject (_gacad ){if _gbbd ,_dcgeb :=_gbgag (_gacad ,_bafdd );_dcgeb ==nil {_cecfe =*_gbbd ;}else {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_gacad ,_dcgeb );};};_edfa =NewOutlineItem (_aabb .Title .Decoded (),_cecfe );*_edgfbd =append (*_edgfbd ,_edfa );if _aabb .Next !=nil {_cbfd (_aabb .Next ,_edgfbd );};};if _cgagd .First !=nil {if _edfa !=nil {_edgfbd =&_edfa .Entries ;};_cbfd (_cgagd .First ,_edgfbd );};};_eceeg :=NewOutline ();_cbfd (_gcad ,&_eceeg .Entries );return _eceeg ,nil ;};func (_agfac *PdfReader )flattenFieldsWithOpts (_eccd bool ,_dbag FieldAppearanceGenerator ,_gbefd *FieldFlattenOpts )error {if _gbefd ==nil {_gbefd =&FieldFlattenOpts {};};var _baed bool ;_gebc :=map[*PdfAnnotation ]bool {};{var _bfeb []*PdfField ;_ecfed :=_agfac .AcroForm ;if _ecfed !=nil {if _gbefd .FilterFunc !=nil {_bfeb =_ecfed .filteredFields (_gbefd .FilterFunc ,true );_baed =_ecfed .Fields !=nil &&len (*_ecfed .Fields )> 0;}else {_bfeb =_ecfed .AllFields ();};};for _ ,_cbdd :=range _bfeb {for _ ,_bdfgg :=range _cbdd .Annotations {_gebc [_bdfgg .PdfAnnotation ]=_cbdd .V !=nil ;if _dbag !=nil {_ddcb ,_eadbg :=_dbag .GenerateAppearanceDict (_ecfed ,_cbdd ,_bdfgg );if _eadbg !=nil {return _eadbg ;};_bdfgg .AP =_ddcb ;};};};};if _eccd {for _ ,_beeb :=range _agfac .PageList {_bfcdg ,_fdae :=_beeb .GetAnnotations ();if _fdae !=nil {return _fdae ;};for _ ,_dabbg :=range _bfcdg {_gebc [_dabbg ]=true ;};};};for _ ,_fdadc :=range _agfac .PageList {var _bbbf []*PdfAnnotation ;if _dbag !=nil {if _dabga :=_dbag .WrapContentStream (_fdadc );_dabga !=nil {return _dabga ;};};_edacg ,_cgadea :=_fdadc .GetAnnotations ();if _cgadea !=nil {return _cgadea ;};for _ ,_fddb :=range _edacg {_abga ,_feeaeb :=_gebc [_fddb ];if !_feeaeb {_bbbf =append (_bbbf ,_fddb );continue ;};switch _fddb .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_cgdfb ,_gfga ,_cbbe :=_cceb (_fddb );if _cbbe !=nil {if !_abga {_adc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_cbbe );continue ;};if _cgdfb ==nil {continue ;};_bcada :=_fdadc .Resources .GenerateXObjectName ();_fdadc .Resources .SetXObjectFormByName (_bcada ,_cgdfb );_afgec :=_eba .Min (_gfga .Llx ,_gfga .Urx );_cbbc :=_eba .Min (_gfga .Lly ,_gfga .Ury );var _acfgg []string ;_acfgg =append (_acfgg ,"\u0071");_acfgg =append (_acfgg ,_ba .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_afgec ,_cbbc ));_acfgg =append (_acfgg ,_ba .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bcada .String ()));_acfgg =append (_acfgg ,"\u0051");_ccdedg :=_ebc .Join (_acfgg ,"\u000a");_cbbe =_fdadc .AppendContentStream (_ccdedg );if _cbbe !=nil {return _cbbe ;};if _cgdfb .Resources !=nil {_fcgg ,_fdbf :=_fee .GetDict (_cgdfb .Resources .Font );if _fdbf {for _ ,_cbge :=range _fcgg .Keys (){if !_fdadc .Resources .HasFontByName (_cbge ){_fdadc .Resources .SetFontByName (_cbge ,_fcgg .Get (_cbge ));};};};};};if len (_bbbf )> 0{_fdadc ._dacea =_bbbf ;}else {_fdadc ._dacea =[]*PdfAnnotation {};};};if !_baed {_agfac .AcroForm =nil ;};return nil ;};

// AddWatermarkImage adds a watermark to the page.
func (_cafcf *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_gdef ,_ccbe :=_cafcf .GetMediaBox ();if _ccbe !=nil {return _ccbe ;};_ccfce :=_gdef .Urx -_gdef .Llx ;_gfgc :=_gdef .Ury -_gdef .Lly ;_dafff :=float64 (*ximg .Width );_bcfbf :=(float64 (_ccfce )-float64 (_dafff ))/2;if opt .FitToWidth {_dafff =_ccfce ;_bcfbf =0;};_gfdcb :=_gfgc ;_bbcc :=float64 (0);if opt .PreserveAspectRatio {_gfdcb =_dafff *float64 (*ximg .Height )/float64 (*ximg .Width );_bbcc =(_gfgc -_gfdcb )/2;};if _cafcf .Resources ==nil {_cafcf .Resources =NewPdfPageResources ();};_efca :=0;_gfdac :=_fee .PdfObjectName (_ba .Sprintf ("\u0049\u006d\u0077%\u0064",_efca ));for _cafcf .Resources .HasXObjectByName (_gfdac ){_efca ++;_gfdac =_fee .PdfObjectName (_ba .Sprintf ("\u0049\u006d\u0077%\u0064",_efca ));};_ccbe =_cafcf .AddImageResource (_gfdac ,ximg );if _ccbe !=nil {return _ccbe ;};_efca =0;_ggcg :=_fee .PdfObjectName (_ba .Sprintf ("\u0047\u0053\u0025\u0064",_efca ));for _cafcf .HasExtGState (_ggcg ){_efca ++;_ggcg =_fee .PdfObjectName (_ba .Sprintf ("\u0047\u0053\u0025\u0064",_efca ));};_bcffc :=_fee .MakeDict ();_bcffc .Set ("\u0042\u004d",_fee .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_bcffc .Set ("\u0043\u0041",_fee .MakeFloat (opt .Alpha ));_bcffc .Set ("\u0063\u0061",_fee .MakeFloat (opt .Alpha ));_ccbe =_cafcf .AddExtGState (_ggcg ,_bcffc );if _ccbe !=nil {return _ccbe ;};_dbabg :=_ba .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ggcg ,_dafff ,_gfdcb ,_bcfbf ,_bbcc ,_gfdac );_cafcf .AddContentStreamByString (_dbabg );return nil ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_aecgde *PdfWriter )SetNamedDestinations (names _fee .PdfObject )error {if names ==nil {return nil ;};_adc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_aecgde ._cbcgfc .Set ("\u004e\u0061\u006de\u0073",names );return _aecgde .addObjects (names );};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _fee .PdfObject )(*PdfFont ,error ){return _bccga (fontObj ,true )};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_affa *PdfFont )ToPdfObject ()_fee .PdfObject {if _affa ._ddaad ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _fee .MakeNull ();};return _affa ._ddaad .ToPdfObject ();};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_fee .PdfObjectArray ;Domain *_fee .PdfObjectArray ;Function []PdfFunction ;Extend *_fee .PdfObjectArray ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_gaae :=&PdfColorspaceCalGray {};_gaae .BlackPoint =[]float64 {0.0,0.0,0.0};_gaae .Gamma =1;return _gaae ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _fee .PdfObject ;NewWindow _fee .PdfObject ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _fee .StreamEncoder ;FormType _fee .PdfObject ;BBox _fee .PdfObject ;Matrix _fee .PdfObject ;Resources *PdfPageResources ;Group _fee .PdfObject ;Ref _fee .PdfObject ;MetaData _fee .PdfObject ;PieceInfo _fee .PdfObject ;LastModified _fee .PdfObject ;StructParent _fee .PdfObject ;StructParents _fee .PdfObject ;OPI _fee .PdfObject ;OC _fee .PdfObject ;Name _fee .PdfObject ;

// Stream data.
Stream []byte ;_cdbge *_fee .PdfObjectStream ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_fee .PdfObjectArray ;Matrix *_fee .PdfObjectArray ;Function []PdfFunction ;};func _gddea (_affbd *_fee .PdfObjectDictionary )(*PdfShadingType1 ,error ){_aaca :=PdfShadingType1 {};if _egcaad :=_affbd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_egcaad !=nil {_egcaad =_fee .TraceToDirectObject (_egcaad );_bbfef ,_dacc :=_egcaad .(*_fee .PdfObjectArray );if !_dacc {_adc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egcaad );return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aaca .Domain =_bbfef ;};if _eecfa :=_affbd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eecfa !=nil {_eecfa =_fee .TraceToDirectObject (_eecfa );_bedbg ,_fabgf :=_eecfa .(*_fee .PdfObjectArray );if !_fabgf {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eecfa );return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aaca .Matrix =_bedbg ;};_egbgd :=_affbd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _egbgd ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_aaca .Function =[]PdfFunction {};if _dgag ,_ceaef :=_egbgd .(*_fee .PdfObjectArray );_ceaef {for _ ,_gagca :=range _dgag .Elements (){_acabe ,_bedfa :=_ddgcb (_gagca );if _bedfa !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bedfa );return nil ,_bedfa ;};_aaca .Function =append (_aaca .Function ,_acabe );};}else {_gggdg ,_gaceb :=_ddgcb (_egbgd );if _gaceb !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gaceb );return nil ,_gaceb ;};_aaca .Function =append (_aaca .Function ,_gggdg );};return &_aaca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddf *PdfActionImportData )ToPdfObject ()_fee .PdfObject {_ddf .PdfAction .ToPdfObject ();_gbd :=_ddf ._fg ;_acg :=_gbd .PdfObject .(*_fee .PdfObjectDictionary );_acg .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeImportData )));if _ddf .F !=nil {_acg .Set ("\u0046",_ddf .F .ToPdfObject ());};return _gbd ;};

// ToPdfObject implements interface PdfModel.
func (_bfdc *PdfAnnotationUnderline )ToPdfObject ()_fee .PdfObject {_bfdc .PdfAnnotation .ToPdfObject ();_cegb :=_bfdc ._gdc ;_adffa :=_cegb .PdfObject .(*_fee .PdfObjectDictionary );_bfdc .PdfAnnotationMarkup .appendToPdfDictionary (_adffa );_adffa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_adffa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bfdc .QuadPoints );return _cegb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_egdcc *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _egdcc .Alternate ==nil {if _egdcc .N ==1{_fdada :=NewPdfColorspaceDeviceGray ();return _fdada .ColorFromFloats (vals );}else if _egdcc .N ==3{_cafd :=NewPdfColorspaceDeviceRGB ();return _cafd .ColorFromFloats (vals );}else if _egdcc .N ==4{_ffbg :=NewPdfColorspaceDeviceCMYK ();return _ffbg .ColorFromFloats (vals );}else {return nil ,_beg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _egdcc .Alternate .ColorFromFloats (vals );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbed *PdfShadingType3 )ToPdfObject ()_fee .PdfObject {_bbed .PdfShading .ToPdfObject ();_defd ,_fgad :=_bbed .getShadingDict ();if _fgad !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bbed .Coords !=nil {_defd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bbed .Coords );};if _bbed .Domain !=nil {_defd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbed .Domain );};if _bbed .Function !=nil {if len (_bbed .Function )==1{_defd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbed .Function [0].ToPdfObject ());}else {_ggae :=_fee .MakeArray ();for _ ,_ggfg :=range _bbed .Function {_ggae .Append (_ggfg .ToPdfObject ());};_defd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggae );};};if _bbed .Extend !=nil {_defd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bbed .Extend );};return _bbed ._gbadg ;};

// K returns the value of the key component of the color.
func (_efdb *PdfColorDeviceCMYK )K ()float64 {return float64 (_efdb [3])};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// IsShading specifies if the pattern is a shading pattern.
func (_bdbc *PdfPattern )IsShading ()bool {return _bdbc .PatternType ==2};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_fee .PdfObjectInteger ;TilingType *_fee .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_fee .PdfObjectFloat ;YStep *_fee .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_fee .PdfObjectArray ;};

// HasExtGState checks if ExtGState name is available.
func (_gbdeb *PdfPage )HasExtGState (name _fee .PdfObjectName )bool {if _gbdeb .Resources ==nil {return false ;};if _gbdeb .Resources .ExtGState ==nil {return false ;};_cfcca ,_bgbf :=_fee .TraceToDirectObject (_gbdeb .Resources .ExtGState ).(*_fee .PdfObjectDictionary );if !_bgbf {_adc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fee .TraceToDirectObject (_gbdeb .Resources .ExtGState ));return false ;};_ebbbe :=_cfcca .Get (name );_bafgc :=_ebbbe !=nil ;return _bafgc ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_cfbde *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _fcefd []*PdfOutlineTreeNode ;var _ffgbg []string ;var _eggg func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_eggg =func (_babdce *PdfOutlineTreeNode ,_acffd *[]*PdfOutlineTreeNode ,_cacgb *[]string ,_edgce int ){if _babdce ==nil {return ;};if _babdce ._dbcdc ==nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bfada ,_ffcgf :=_babdce ._dbcdc .(*PdfOutlineItem );if _ffcgf {*_acffd =append (*_acffd ,&_bfada .PdfOutlineTreeNode );_adadb :=_ebc .Repeat ("\u0020",_edgce *2)+_bfada .Title .Decoded ();*_cacgb =append (*_cacgb ,_adadb );};if _babdce .First !=nil {_dffdg :=_ebc .Repeat ("\u0020",_edgce *2)+"\u002b";*_cacgb =append (*_cacgb ,_dffdg );_eggg (_babdce .First ,_acffd ,_cacgb ,_edgce +1);};if _ffcgf &&_bfada .Next !=nil {_eggg (_bfada .Next ,_acffd ,_cacgb ,_edgce );};};_eggg (_cfbde ._added ,&_fcefd ,&_ffgbg ,0);return _fcefd ,_ffgbg ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_cdgcf *_fee .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dfda *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_dfda .Base .GetNumComponents ();_bfeag :=int (vals [0])*N ;if _bfeag < 0||(_bfeag +N -1)>=len (_dfda ._cddad ){return nil ,_beg .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_afcf :=_dfda ._cddad [_bfeag :_bfeag +N ];var _efce []float64 ;for _ ,_accg :=range _afcf {_efce =append (_efce ,float64 (_accg )/255.0);};_dfbe ,_ebdg :=_dfda .Base .ColorFromFloats (_efce );if _ebdg !=nil {return nil ,_ebdg ;};return _dfbe ,nil ;};func _bgbe (_aacbg []byte )[]byte {const _agfbe =52845;const _deace =22719;_geead :=55665;for _ ,_fffeb :=range _aacbg [:4]{_geead =(int (_fffeb )+_geead )*_agfbe +_deace ;};_edge :=make ([]byte ,len (_aacbg )-4);for _agcce ,_bbgf :=range _aacbg [4:]{_edge [_agcce ]=byte (int (_bbgf )^_geead >>8);_geead =(int (_bbgf )+_geead )*_agfbe +_deace ;};return _edge ;};

// SetOCProperties sets the optional content properties.
func (_ccceb *PdfWriter )SetOCProperties (ocProperties _fee .PdfObject )error {_aggaa :=_ccceb ._cbcgfc ;if ocProperties !=nil {_adc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_aggaa .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _ccceb .addObjects (ocProperties );};return nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fbb :=NewPdfAnnotation ();_dfea :=&PdfAnnotation3D {};_dfea .PdfAnnotation =_fbb ;_fbb .SetContext (_dfea );return _dfea ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_efafe *PdfPageResources )SetXObjectFormByName (keyName _fee .PdfObjectName ,xform *XObjectForm )error {_becee :=xform .ToPdfObject ().(*_fee .PdfObjectStream );_efeac :=_efafe .SetXObjectByName (keyName ,_becee );return _efeac ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_fgega *_fee .PdfIndirectObject ;};

// SetContext set the sub annotation (context).
func (_gaaef *PdfShading )SetContext (ctx PdfModel ){_gaaef ._gfae =ctx };

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_fee .PdfObjectArray ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_abgb *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _bfggd []_de .TextEncoder ;if _gdbce :=_abgb .baseFields ()._edeab ;_gdbce !=nil {_bfggd =append (_bfggd ,_de .NewCMapEncoder ("",nil ,_gdbce ));};if _geegf :=_abgb .Encoder ();_geegf !=nil {_bfggd =append (_bfggd ,_geegf );};var _fdadd _ed .Buffer ;var _deff int ;for _ ,_bagb :=range data {var _cfbb bool ;for _ ,_bccee :=range _bfggd {if _bdcdcc :=_bccee .Encode (string (_bagb ));len (_bdcdcc )> 0{_fdadd .Write (_bdcdcc );_cfbb =true ;break ;};};if !_cfbb {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_bagb );_deff ++;};};if _deff !=0{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_deff ,_abgb ,_bfggd );};return _fdadd .Bytes (),_deff ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_accfg *PdfSignature )bool ;Validate (_gcfgg *PdfSignature ,_gfff Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_bacgf *PdfSignature )(Hasher ,error );Sign (_eegee *PdfSignature ,_abade Hasher )error ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _fee .PdfObjectName ;};func (_eece *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _eece ._dedcg };func (_fbbe *PdfReader )newPdfAnnotationMovieFromDict (_egbc *_fee .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_acad :=PdfAnnotationMovie {};_acad .T =_egbc .Get ("\u0054");_acad .Movie =_egbc .Get ("\u004d\u006f\u0076i\u0065");_acad .A =_egbc .Get ("\u0041");return &_acad ,nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_fee .PdfIndirectObject ;SV *_fee .PdfIndirectObject ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_edadc *PdfReader )GetTrailer ()(*_fee .PdfObjectDictionary ,error ){_eaebg :=_edadc ._daae .GetTrailer ();if _eaebg ==nil {return nil ,_beg .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _eaebg ,nil ;};func _fcbgd ()_e .Time {return _ebabd };func (_gcfbb *PdfWriter )seekByName (_adcfe _fee .PdfObject ,_aaega []string ,_gebff string )([]_fee .PdfObject ,error ){_adc .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_adcfe );var _faae []_fee .PdfObject ;if _ccgb ,_aafda :=_adcfe .(*_fee .PdfIndirectObject );_aafda {return _gcfbb .seekByName (_ccgb .PdfObject ,_aaega ,_gebff );};if _cbbbf ,_beaffg :=_adcfe .(*_fee .PdfObjectStream );_beaffg {return _gcfbb .seekByName (_cbbbf .PdfObjectDictionary ,_aaega ,_gebff );};if _fddc ,_eaff :=_adcfe .(*_fee .PdfObjectDictionary );_eaff {_adc .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_bbgaa :=range _fddc .Keys (){_ffbgae :=_fddc .Get (_bbgaa );if string (_bbgaa )==_gebff {_faae =append (_faae ,_ffbgae );};for _ ,_cefdg :=range _aaega {if string (_bbgaa )==_cefdg {_adc .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_cefdg );_fegf ,_bfcdb :=_gcfbb .seekByName (_ffbgae ,_aaega ,_gebff );if _bfcdb !=nil {return _faae ,_bfcdb ;};for _ ,_cgeac :=range _fegf {_faae =append (_faae ,_cgeac );};break ;};};};return _faae ,nil ;};return _faae ,nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_begddd *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _begddd ._egef .(*PdfTilingPattern );};func _dbec (_gabba *_fee .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fdgdfc :=PdfShadingType3 {};_daffe :=_gabba .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _daffe ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_bffdd ,_gcfce :=_daffe .(*_fee .PdfObjectArray );if !_gcfce {_adc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_daffe );return nil ,_fee .ErrTypeError ;};if _bffdd .Len ()!=6{_adc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bffdd .Len ());return nil ,ErrInvalidAttribute ;};_fdgdfc .Coords =_bffdd ;if _fedfd :=_gabba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fedfd !=nil {_fedfd =_fee .TraceToDirectObject (_fedfd );_fgbag ,_ebecg :=_fedfd .(*_fee .PdfObjectArray );if !_ebecg {_adc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fedfd );return nil ,_fee .ErrTypeError ;};_fdgdfc .Domain =_fgbag ;};_daffe =_gabba .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _daffe ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_fdgdfc .Function =[]PdfFunction {};if _baaec ,_gccbb :=_daffe .(*_fee .PdfObjectArray );_gccbb {for _ ,_febag :=range _baaec .Elements (){_beffd ,_dagb :=_ddgcb (_febag );if _dagb !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dagb );return nil ,_dagb ;};_fdgdfc .Function =append (_fdgdfc .Function ,_beffd );};}else {_edbfc ,_daccc :=_ddgcb (_daffe );if _daccc !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daccc );return nil ,_daccc ;};_fdgdfc .Function =append (_fdgdfc .Function ,_edbfc );};if _ecbdc :=_gabba .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ecbdc !=nil {_ecbdc =_fee .TraceToDirectObject (_ecbdc );_dacgg ,_acgda :=_ecbdc .(*_fee .PdfObjectArray );if !_acgda {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecbdc );return nil ,_fee .ErrTypeError ;};if _dacgg .Len ()!=2{_adc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dacgg .Len ());return nil ,ErrInvalidAttribute ;};_fdgdfc .Extend =_dacgg ;};return &_fdgdfc ,nil ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_eaab *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ccfbg ,_ddbba :=_fee .GetDict (_eaab ._cbcgfc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_ddbba {_ccfbg =_fee .MakeDict ();_eaab ._cbcgfc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ccfbg );};_debea ,_ddbba :=_fee .GetDict (_ccfbg .Get (_fee .PdfObjectName (extName )));if !_ddbba {_debea =_fee .MakeDict ();_ccfbg .Set (_fee .PdfObjectName (extName ),_debea );};if _ecbad ,_ :=_fee .GetNameVal (_debea .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));_ecbad !=baseVersion {_debea .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_fee .MakeName (baseVersion ));};if _gddcd ,_ :=_fee .GetIntVal (_debea .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));_gddcd !=extLevel {_debea .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_fee .MakeInteger (int64 (extLevel )));};};

// String returns a human readable description of `fontfile`.
func (_aaad *fontFile )String ()string {_dffca :="\u005b\u004e\u006f\u006e\u0065\u005d";if _aaad ._dedb !=nil {_dffca =_aaad ._dedb .String ();};return _ba .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_aaad ._aebeed ,_dffca );};var _gecba =false ;

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _fee .PdfObject ;Dest _fee .PdfObject ;H _fee .PdfObject ;PA _fee .PdfObject ;QuadPoints _fee .PdfObject ;BS _fee .PdfObject ;_fdfe *PdfAction ;_fgdg *PdfReader ;};

// ToPdfObject implements interface PdfModel.
func (_ace *PdfAnnotationSquare )ToPdfObject ()_fee .PdfObject {_ace .PdfAnnotation .ToPdfObject ();_cgad :=_ace ._gdc ;_cadb :=_cgad .PdfObject .(*_fee .PdfObjectDictionary );if _ace .PdfAnnotationMarkup !=nil {_ace .PdfAnnotationMarkup .appendToPdfDictionary (_cadb );};_cadb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_cadb .SetIfNotNil ("\u0042\u0053",_ace .BS );_cadb .SetIfNotNil ("\u0049\u0043",_ace .IC );_cadb .SetIfNotNil ("\u0042\u0045",_ace .BE );_cadb .SetIfNotNil ("\u0052\u0044",_ace .RD );return _cgad ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_fee .PdfObjectInteger ;BitsPerComponent *_fee .PdfObjectInteger ;BitsPerFlag *_fee .PdfObjectInteger ;Decode *_fee .PdfObjectArray ;Function []PdfFunction ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_caffd *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _caffd .fill (provider ,appGen );};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _be .ReadSeeker )(*PdfReader ,error ){_dedf :=&PdfReader {_acgec :rs ,_ebag :map[_fee .PdfObject ]struct{}{},_abgg :_gadee (),_cgff :false };_daed ,_fbcef :=_fee .NewParser (rs );if _fbcef !=nil {return nil ,_fbcef ;};_dedf ._daae =_daed ;_dbda ,_fbcef :=_dedf .IsEncrypted ();if _fbcef !=nil {return nil ,_fbcef ;};if !_dbda {_fbcef =_dedf .loadStructure ();if _fbcef !=nil {return nil ,_fbcef ;};};return _dedf ,nil ;};func (_ccaga *PdfWriter )copyObject (_cebce _fee .PdfObject ,_fcce map[_fee .PdfObject ]_fee .PdfObject ,_fgcba map[_fee .PdfObject ]struct{},_bcgeb bool )_fee .PdfObject {_gbfe :=!_ccaga ._ccadg &&_fgcba !=nil ;if _egff ,_bgbeg :=_fcce [_cebce ];_bgbeg {if _gbfe &&!_bcgeb {delete (_fgcba ,_cebce );};return _egff ;};_abge :=_cebce ;switch _bdeff :=_cebce .(type ){case *_fee .PdfObjectArray :_ggfgg :=_fee .MakeArray ();_abge =_ggfgg ;_fcce [_cebce ]=_abge ;for _ ,_gggaf :=range _bdeff .Elements (){_ggfgg .Append (_ccaga .copyObject (_gggaf ,_fcce ,_fgcba ,_bcgeb ));};case *_fee .PdfObjectStreams :_bfcda :=&_fee .PdfObjectStreams {PdfObjectReference :_bdeff .PdfObjectReference };_abge =_bfcda ;_fcce [_cebce ]=_abge ;for _ ,_edbd :=range _bdeff .Elements (){_bfcda .Append (_ccaga .copyObject (_edbd ,_fcce ,_fgcba ,_bcgeb ));};case *_fee .PdfObjectStream :_agcedd :=&_fee .PdfObjectStream {Stream :_bdeff .Stream ,PdfObjectReference :_bdeff .PdfObjectReference };_abge =_agcedd ;_fcce [_cebce ]=_abge ;_agcedd .PdfObjectDictionary =_ccaga .copyObject (_bdeff .PdfObjectDictionary ,_fcce ,_fgcba ,_bcgeb ).(*_fee .PdfObjectDictionary );case *_fee .PdfObjectDictionary :var _egegb bool ;if _gbfe &&!_bcgeb {if _aaafdg ,_ :=_fee .GetNameVal (_bdeff .Get ("\u0054\u0079\u0070\u0065"));_aaafdg =="\u0050\u0061\u0067\u0065"{_ ,_ededb :=_ccaga ._ccfbe [_bdeff ];_bcgeb =!_ededb ;_egegb =_bcgeb ;};};_dbbgc :=_fee .MakeDict ();_abge =_dbbgc ;_fcce [_cebce ]=_abge ;for _ ,_cdggb :=range _bdeff .Keys (){_dbbgc .Set (_cdggb ,_ccaga .copyObject (_bdeff .Get (_cdggb ),_fcce ,_fgcba ,_bcgeb ));};if _egegb {_abge =_fee .MakeNull ();_bcgeb =false ;};case *_fee .PdfIndirectObject :_ggceb :=&_fee .PdfIndirectObject {PdfObjectReference :_bdeff .PdfObjectReference };_abge =_ggceb ;_fcce [_cebce ]=_abge ;_ggceb .PdfObject =_ccaga .copyObject (_bdeff .PdfObject ,_fcce ,_fgcba ,_bcgeb );case *_fee .PdfObjectString :_ffbca :=*_bdeff ;_abge =&_ffbca ;_fcce [_cebce ]=_abge ;case *_fee .PdfObjectName :_efcf :=_fee .PdfObjectName (*_bdeff );_abge =&_efcf ;_fcce [_cebce ]=_abge ;case *_fee .PdfObjectNull :_abge =_fee .MakeNull ();_fcce [_cebce ]=_abge ;case *_fee .PdfObjectInteger :_dgdfde :=_fee .PdfObjectInteger (*_bdeff );_abge =&_dgdfde ;_fcce [_cebce ]=_abge ;case *_fee .PdfObjectReference :_edabg :=_fee .PdfObjectReference (*_bdeff );_abge =&_edabg ;_fcce [_cebce ]=_abge ;case *_fee .PdfObjectFloat :_abage :=_fee .PdfObjectFloat (*_bdeff );_abge =&_abage ;_fcce [_cebce ]=_abge ;case *_fee .PdfObjectBool :_cbdaa :=_fee .PdfObjectBool (*_bdeff );_abge =&_cbdaa ;_fcce [_cebce ]=_abge ;case *pdfSignDictionary :_fgecb :=&pdfSignDictionary {PdfObjectDictionary :_fee .MakeDict (),_fcbf :_bdeff ._fcbf ,_ecceb :_bdeff ._ecceb };_abge =_fgecb ;_fcce [_cebce ]=_abge ;for _ ,_ecga :=range _bdeff .Keys (){_fgecb .Set (_ecga ,_ccaga .copyObject (_bdeff .Get (_ecga ),_fcce ,_fgcba ,_bcgeb ));};default:_adc .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_cebce );};if _gbfe &&_bcgeb {_fgcba [_cebce ]=struct{}{};};return _abge ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_aeebe *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fadf ,_gbcd :=_fee .GetNumbersAsFloat (objects );if _gbcd !=nil {return nil ,_gbcd ;};return _aeebe .ColorFromFloats (_fadf );};func (_dggg fontCommon )isCIDFont ()bool {if _dggg ._agbcd ==""{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dggg );};_eebge :=false ;switch _dggg ._agbcd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_eebge =true ;};_adc .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_eebge ,_dggg );return _eebge ;};

// C returns the value of the cyan component of the color.
func (_ccag *PdfColorDeviceCMYK )C ()float64 {return float64 (_ccag [0])};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_bdcdc :_fee .MakeIndirectObject (_fee .MakeDict ())}};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_ebdd *pdfCIDFontType2 )ToPdfObject ()_fee .PdfObject {if _ebdd ._cfaa ==nil {_ebdd ._cfaa =&_fee .PdfIndirectObject {};};_fbbea :=_ebdd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_ebdd ._cfaa .PdfObject =_fbbea ;if _ebdd .CIDSystemInfo !=nil {_fbbea .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_ebdd .CIDSystemInfo );};if _ebdd .DW !=nil {_fbbea .Set ("\u0044\u0057",_ebdd .DW );};if _ebdd .DW2 !=nil {_fbbea .Set ("\u0044\u0057\u0032",_ebdd .DW2 );};if _ebdd .W !=nil {_fbbea .Set ("\u0057",_ebdd .W );};if _ebdd .W2 !=nil {_fbbea .Set ("\u0057\u0032",_ebdd .W2 );};if _ebdd .CIDToGIDMap !=nil {_fbbea .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_ebdd .CIDToGIDMap );};return _ebdd ._cfaa ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_bbdg *PdfPageResources )GetExtGState (keyName _fee .PdfObjectName )(_fee .PdfObject ,bool ){if _bbdg .ExtGState ==nil {return nil ,false ;};_acdcc ,_dgcd :=_fee .TraceToDirectObject (_bbdg .ExtGState ).(*_fee .PdfObjectDictionary );if !_dgcd {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbdg .ExtGState );return nil ,false ;};if _cfccaa :=_acdcc .Get (keyName );_cfccaa !=nil {return _cfccaa ,true ;};return nil ,false ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_gaaae *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_gaaae .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_gaaae ._cbcd =acroForm ;};func (_fbgd *PdfFont )baseFields ()*fontCommon {if _fbgd ._ddaad ==nil {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _fbgd ._ddaad .baseFields ();};type fontFile struct{_aebeed string ;_gdff string ;_dedb _de .SimpleEncoder ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _fee .PdfObject ;PreserveRB _fee .PdfObject ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_acgac *PdfPage )AppendContentStream (contentStr string )error {_agef ,_cbgfd :=_acgac .GetContentStreams ();if _cbgfd !=nil {return _cbgfd ;};if len (_agef )==0{_agef =[]string {contentStr };return _acgac .SetContentStreams (_agef ,_fee .NewFlateEncoder ());};var _cfaga _ed .Buffer ;_cfaga .WriteString (_agef [len (_agef )-1]);_cfaga .WriteString ("\u000a");_cfaga .WriteString (contentStr );_agef [len (_agef )-1]=_cfaga .String ();return _acgac .SetContentStreams (_agef ,_fee .NewFlateEncoder ());};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _fee .PdfObject ;MK _fee .PdfObject ;A _fee .PdfObject ;AA _fee .PdfObject ;BS _fee .PdfObject ;Parent _fee .PdfObject ;_agg *PdfField ;_edb bool ;};func (_cffd *PdfWriter )copyObjects (){_efggb :=make (map[_fee .PdfObject ]_fee .PdfObject );_ddfc :=make ([]_fee .PdfObject ,0,len (_cffd ._fagbg ));_gcfaa :=make (map[_fee .PdfObject ]struct{},len (_cffd ._fagbg ));_dcgded :=make (map[_fee .PdfObject ]struct{});for _ ,_ffcf :=range _cffd ._fagbg {_befec :=_cffd .copyObject (_ffcf ,_efggb ,_dcgded ,false );if _ ,_bcdeg :=_dcgded [_ffcf ];_bcdeg {continue ;};_ddfc =append (_ddfc ,_befec );_gcfaa [_befec ]=struct{}{};};_cffd ._fagbg =_ddfc ;_cffd ._faegg =_gcfaa ;_cffd ._agfae =_cffd .copyObject (_cffd ._agfae ,_efggb ,nil ,false ).(*_fee .PdfIndirectObject );_cffd ._bcbd =_cffd .copyObject (_cffd ._bcbd ,_efggb ,nil ,false ).(*_fee .PdfIndirectObject );if _cffd ._ffcce !=nil {_cffd ._ffcce =_cffd .copyObject (_cffd ._ffcce ,_efggb ,nil ,false ).(*_fee .PdfIndirectObject );};if _cffd ._ccadg {_facde :=make (map[_fee .PdfObject ]int64 );for _fbcbc ,_ddccaa :=range _cffd ._afcce {if _eacgc ,_eeegf :=_efggb [_fbcbc ];_eeegf {_facde [_eacgc ]=_ddccaa ;}else {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_cffd ._afcce =_facde ;};};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_ffbga *PdfFieldButton )IsRadio ()bool {return _ffbga .GetType ()==ButtonTypeRadio };

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fee .PdfObject ;IC _fee .PdfObject ;BE _fee .PdfObject ;RD _fee .PdfObject ;};

// String returns the name of the colorspace (DeviceN).
func (_fcad *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_gfbdf *Image )AlphaMap (mapFunc AlphaMapFunc ){for _ggdf ,_acaeb :=range _gfbdf ._babdc {_gfbdf ._babdc [_ggdf ]=mapFunc (_acaeb );};};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_egdfb *Outline )ToPdfOutline ()*PdfOutline {_cgacf :=NewPdfOutline ();var _bgdee []*PdfOutlineItem ;var _fccac int64 ;var _geega *PdfOutlineItem ;for _ ,_gcfc :=range _egdfb .Entries {_cedeg ,_dbge :=_gcfc .ToPdfOutlineItem ();_cedeg .Parent =&_cgacf .PdfOutlineTreeNode ;if _geega !=nil {_geega .Next =&_cedeg .PdfOutlineTreeNode ;_cedeg .Prev =&_geega .PdfOutlineTreeNode ;};_bgdee =append (_bgdee ,_cedeg );_fccac +=_dbge ;_geega =_cedeg ;};_gecda :=int64 (len (_bgdee ));_fccac +=int64 (_gecda );if _gecda > 0{_cgacf .First =&_bgdee [0].PdfOutlineTreeNode ;_cgacf .Last =&_bgdee [_gecda -1].PdfOutlineTreeNode ;_cgacf .Count =&_fccac ;};return _cgacf ;};func (_adgf *DSS )add (_aggc *[]*_fee .PdfObjectStream ,_dfdc map[string ]*_fee .PdfObjectStream ,_ddeac [][]byte )([]*_fee .PdfObjectStream ,error ){_efec :=make ([]*_fee .PdfObjectStream ,0,len (_ddeac ));for _ ,_gafae :=range _ddeac {_fcaee ,_dgdd :=_gfeg (_gafae );if _dgdd !=nil {return nil ,_dgdd ;};_ffad ,_acfg :=_dfdc [string (_fcaee )];if !_acfg {_ffad ,_dgdd =_fee .MakeStream (_gafae ,_fee .NewRawEncoder ());if _dgdd !=nil {return nil ,_dgdd ;};_dfdc [string (_fcaee )]=_ffad ;*_aggc =append (*_aggc ,_ffad );};_efec =append (_efec ,_ffad );};return _efec ,nil ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _fee .PdfObject ;NewWindow _fee .PdfObject ;T _fee .PdfObject ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gdcg []_fee .PdfObject )([]_fee .PdfObject ,error );};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attemps to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_feeag *LTV )EnableChain (chain []*_d .Certificate )error {return _feeag .enable (nil ,chain ,"")};

// SetName sets the `Name` field of the signature.
func (_agbecb *PdfSignature )SetName (name string ){_agbecb .Name =_fee .MakeString (name )};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_aggf :=NewPdfAnnotation ();_geeg :=&PdfAnnotationScreen {};_geeg .PdfAnnotation =_aggf ;_aggf .SetContext (_geeg );return _geeg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_adbf *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acac :=vals [0];if _acac < 0.0||_acac > 100.0{_adc .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_acac );return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bddc :=vals [1];_adace :=float64 (-100);_becg :=float64 (100);if len (_adbf .Range )> 1{_adace =_adbf .Range [0];_becg =_adbf .Range [1];};if _bddc < _adace ||_bddc > _becg {_adc .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bddc ,_adace ,_becg );return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gebf :=vals [2];_fedf :=float64 (-100);_fafe :=float64 (100);if len (_adbf .Range )> 3{_fedf =_adbf .Range [2];_fafe =_adbf .Range [3];};if _gebf < _fedf ||_gebf > _fafe {_adc .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gebf ,_fedf ,_fafe );return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgcf :=NewPdfColorLab (_acac ,_bddc ,_gebf );return _dgcf ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _fee .PdfObject )(*PdfFilespec ,error ){_bcbag :=&PdfFilespec {};var _afbcc *_fee .PdfObjectDictionary ;if _dgfe ,_cbfa :=_fee .GetIndirect (obj );_cbfa {_bcbag ._acfd =_dgfe ;_gfbfg ,_cdfb :=_fee .GetDict (_dgfe .PdfObject );if !_cdfb {_adc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_fee .ErrTypeError ;};_afbcc =_gfbfg ;}else if _dcddb ,_geabf :=_fee .GetDict (obj );_geabf {_bcbag ._acfd =_dcddb ;_afbcc =_dcddb ;}else {_adc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_fee .ErrTypeError ;};if _afbcc ==nil {_adc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_beg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ddeag :=_afbcc .Get ("\u0054\u0079\u0070\u0065");_ddeag !=nil {_gbfda ,_eedgg :=_ddeag .(*_fee .PdfObjectName );if !_eedgg {_adc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ddeag );}else {if *_gbfda !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_adc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_gbfda );};};};if _ffgea :=_afbcc .Get ("\u0046\u0053");_ffgea !=nil {_bcbag .FS =_ffgea ;};if _gaff :=_afbcc .Get ("\u0046");_gaff !=nil {_bcbag .F =_gaff ;};if _egdf :=_afbcc .Get ("\u0055\u0046");_egdf !=nil {_bcbag .UF =_egdf ;};if _dgbgc :=_afbcc .Get ("\u0044\u004f\u0053");_dgbgc !=nil {_bcbag .DOS =_dgbgc ;};if _aeafc :=_afbcc .Get ("\u004d\u0061\u0063");_aeafc !=nil {_bcbag .Mac =_aeafc ;};if _fgcbc :=_afbcc .Get ("\u0055\u006e\u0069\u0078");_fgcbc !=nil {_bcbag .Unix =_fgcbc ;};if _eeaa :=_afbcc .Get ("\u0049\u0044");_eeaa !=nil {_bcbag .ID =_eeaa ;};if _gadb :=_afbcc .Get ("\u0056");_gadb !=nil {_bcbag .V =_gadb ;};if _cffcf :=_afbcc .Get ("\u0045\u0046");_cffcf !=nil {_bcbag .EF =_cffcf ;};if _aeeff :=_afbcc .Get ("\u0052\u0046");_aeeff !=nil {_bcbag .RF =_aeeff ;};if _cbabe :=_afbcc .Get ("\u0044\u0065\u0073\u0063");_cbabe !=nil {_bcbag .Desc =_cbabe ;};if _gged :=_afbcc .Get ("\u0043\u0049");_gged !=nil {_bcbag .CI =_gged ;};return _bcbag ,nil ;};func (_bgff *PdfReader )newPdfOutlineItemFromIndirectObject (_decgc *_fee .PdfIndirectObject )(*PdfOutlineItem ,error ){_decge ,_dbbf :=_decgc .PdfObject .(*_fee .PdfObjectDictionary );if !_dbbf {return nil ,_ba .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gafde :=NewPdfOutlineItem ();_dfdaa :=_decge .Get ("\u0054\u0069\u0074l\u0065");if _dfdaa ==nil {return nil ,_ba .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_ggeeae ,_afbg :=_fee .GetString (_dfdaa );if !_afbg {return nil ,_ba .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_dfdaa );};_gafde .Title =_ggeeae ;if _efdba :=_decge .Get ("\u0043\u006f\u0075n\u0074");_efdba !=nil {_cdaa ,_dacag :=_efdba .(*_fee .PdfObjectInteger );if !_dacag {return nil ,_ba .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_efdba );};_bfac :=int64 (*_cdaa );_gafde .Count =&_bfac ;};if _afdga :=_decge .Get ("\u0044\u0065\u0073\u0074");_afdga !=nil {_gafde .Dest =_fee .ResolveReference (_afdga );if !_bgff ._cgff {_fcge :=_bgff .traverseObjectData (_gafde .Dest );if _fcge !=nil {return nil ,_fcge ;};};};if _gdaf :=_decge .Get ("\u0041");_gdaf !=nil {_gafde .A =_fee .ResolveReference (_gdaf );if !_bgff ._cgff {_edcdd :=_bgff .traverseObjectData (_gafde .A );if _edcdd !=nil {return nil ,_edcdd ;};};};if _aedaf :=_decge .Get ("\u0053\u0045");_aedaf !=nil {_gafde .SE =nil ;};if _ggbgf :=_decge .Get ("\u0043");_ggbgf !=nil {_gafde .C =_fee .ResolveReference (_ggbgf );};if _ecfcd :=_decge .Get ("\u0046");_ecfcd !=nil {_gafde .F =_fee .ResolveReference (_ecfcd );};return _gafde ,nil ;};func (_bccc *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _bccc ._daae .GetCrypter ()!=nil &&!_bccc ._daae .IsAuthenticated (){return nil ,_ba .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_afcfe :=_bccc ._egdgd ;_egdga :=_afcfe .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _egdga ==nil {return nil ,nil ;};_gfdga ,_ :=_fee .GetIndirect (_egdga );_egdga =_fee .TraceToDirectObject (_egdga );if _fee .IsNullObject (_egdga ){_adc .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_aabcf ,_gefg :=_fee .GetDict (_egdga );if !_gefg {_adc .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_egdga );_adc .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_ba .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_egdga );};_adc .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_adc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_bccc ._cgff {_eefbg :=_bccc .traverseObjectData (_aabcf );if _eefbg !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_eefbg );return nil ,_eefbg ;};};_ddeea ,_fbeea :=_bccc .newPdfAcroFormFromDict (_gfdga ,_aabcf );if _fbeea !=nil {return nil ,_fbeea ;};return _ddeea ,nil ;};

// IsColored specifies if the pattern is colored.
func (_baeg *PdfTilingPattern )IsColored ()bool {if _baeg .PaintType !=nil &&*_baeg .PaintType ==1{return true ;};return false ;};func _bccb (_aabce *_fee .PdfObjectArray )(float64 ,error ){_cafad ,_aecef :=_aabce .ToFloat64Array ();if _aecef !=nil {_adc .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aabce ,_aecef );};switch len (_cafad ){case 1:return _cafad [0],nil ;case 3:_bfaae :=PdfColorspaceDeviceRGB {};_gbbef ,_ddgd :=_bfaae .ColorFromFloats (_cafad );if _ddgd !=nil {return 0.0,_ddgd ;};return _gbbef .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_dfcd :=PdfColorspaceDeviceCMYK {};_dbfca ,_gbbde :=_dfcd .ColorFromFloats (_cafad );if _gbbde !=nil {return 0.0,_gbbde ;};_bbgfg ,_gbbde :=_dfcd .ColorToRGB (_dbfca .(*PdfColorDeviceCMYK ));if _gbbde !=nil {return 0.0,_gbbde ;};return _bbgfg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_aecef =_beg .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_adc .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aabce ,_aecef );return 0.0,_aecef ;};func (_agfff *PdfFunctionType0 )processSamples ()error {_adbba :=_ef .ResampleBytes (_agfff ._cgadae ,_agfff .BitsPerSample );_agfff ._caced =_adbba ;return nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_cfg :=&PdfColorspaceSpecialSeparation {};return _cfg ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_decfd *PdfColorspaceCalGray )ToPdfObject ()_fee .PdfObject {_cgcb :=&_fee .PdfObjectArray {};_cgcb .Append (_fee .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_bcgf :=_fee .MakeDict ();if _decfd .WhitePoint !=nil {_bcgf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fee .MakeArray (_fee .MakeFloat (_decfd .WhitePoint [0]),_fee .MakeFloat (_decfd .WhitePoint [1]),_fee .MakeFloat (_decfd .WhitePoint [2])));}else {_adc .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _decfd .BlackPoint !=nil {_bcgf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fee .MakeArray (_fee .MakeFloat (_decfd .BlackPoint [0]),_fee .MakeFloat (_decfd .BlackPoint [1]),_fee .MakeFloat (_decfd .BlackPoint [2])));};_bcgf .Set ("\u0047\u0061\u006dm\u0061",_fee .MakeFloat (_decfd .Gamma ));_cgcb .Append (_bcgf );if _decfd ._abab !=nil {_decfd ._abab .PdfObject =_cgcb ;return _decfd ._abab ;};return _cgcb ;};

// SetAction sets the PDF action for the annotation link.
func (_faff *PdfAnnotationLink )SetAction (action *PdfAction ){_faff ._fdfe =action ;if action ==nil {_faff .A =nil ;};};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_egfe *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_deeb *Image )samplesAddPadding (_ggef []uint32 )[]uint32 {_geba :=_ffg .BytesPerLine (int (_deeb .Width ),int (_deeb .BitsPerComponent ),_deeb .ColorComponents )*(8/int (_deeb .BitsPerComponent ));_gaffc :=_geba *int (_deeb .Height );if len (_ggef )==_gaffc {return _ggef ;};_bgaa :=make ([]uint32 ,_gaffc );_bddac :=int (_deeb .Width )*_deeb .ColorComponents ;for _bbaea :=0;_bbaea < int (_deeb .Height );_bbaea ++{_afdc :=_bbaea *int (_deeb .Width );_accf :=_bbaea *_geba ;for _gedg :=0;_gedg < _bddac ;_gedg ++{_bgaa [_accf +_gedg ]=_ggef [_afdc +_gedg ];};};return _bgaa ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_aagbd *PdfRectangle )Normalize (){if _aagbd .Llx > _aagbd .Urx {_aagbd .Llx ,_aagbd .Urx =_aagbd .Urx ,_aagbd .Llx ;};if _aagbd .Lly > _aagbd .Ury {_aagbd .Lly ,_aagbd .Ury =_aagbd .Ury ,_aagbd .Lly ;};};

// GetContentStreams returns the content stream as an array of strings.
func (_ccadd *PdfPage )GetContentStreams ()([]string ,error ){_ebff :=_ccadd .GetContentStreamObjs ();var _ffca []string ;for _ ,_bddb :=range _ebff {_ffga ,_ecgg :=_begfc (_bddb );if _ecgg !=nil {return nil ,_ecgg ;};_ffca =append (_ffca ,_ffga );};return _ffca ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gfba *PdfFont )ToUnicode ()string {if _gfba .baseFields ()._edeab ==nil {return "";};return _gfba .baseFields ()._edeab .Name ();};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_bgcf :=NewPdfAction ();_bcc :=&PdfActionImportData {};_bcc .PdfAction =_bgcf ;_bgcf .SetContext (_bcc );return _bcc ;};type pdfCIDFontType2 struct{fontCommon ;_cfaa *_fee .PdfIndirectObject ;_adcb _de .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_fee .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fee .PdfObject ;W _fee .PdfObject ;DW2 _fee .PdfObject ;W2 _fee .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _fee .PdfObject ;_bbeg map[_de .CharCode ]float64 ;_gcea float64 ;_eefa map[rune ]int ;};func (_ebb *PdfReader )newPdfActionSetOCGStateFromDict (_baaf *_fee .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_baaf .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_baaf .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_cfbad *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_cfbad .HiVal )};};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_feceag ,_aafcd :=_da .Open (filePath );if _aafcd !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_aafcd );return nil ,_aafcd ;};defer _feceag .Close ();return NewPdfFontFromTTF (_feceag );};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _fee .PdfObject ;V _fee .PdfObject ;};func (_cbf *PdfReader )newPdfAnnotationMarkupFromDict (_dge *_fee .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_acgdd :=&PdfAnnotationMarkup {};if _bbga :=_dge .Get ("\u0054");_bbga !=nil {_acgdd .T =_bbga ;};if _gcbf :=_dge .Get ("\u0050\u006f\u0070u\u0070");_gcbf !=nil {_ddbe ,_aece :=_gcbf .(*_fee .PdfIndirectObject );if !_aece {if _ ,_cgfg :=_gcbf .(*_fee .PdfObjectNull );!_cgfg {return nil ,_beg .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_dea ,_ggb :=_cbf .newPdfAnnotationFromIndirectObject (_ddbe );if _ggb !=nil {return nil ,_ggb ;};if _dea !=nil {_dbb ,_fgf :=_dea ._gbfd .(*PdfAnnotationPopup );if !_fgf {return nil ,_beg .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_acgdd .Popup =_dbb ;};};};if _fae :=_dge .Get ("\u0043\u0041");_fae !=nil {_acgdd .CA =_fae ;};if _ccb :=_dge .Get ("\u0052\u0043");_ccb !=nil {_acgdd .RC =_ccb ;};if _edae :=_dge .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_edae !=nil {_acgdd .CreationDate =_edae ;};if _fbfb :=_dge .Get ("\u0049\u0052\u0054");_fbfb !=nil {_acgdd .IRT =_fbfb ;};if _gfbf :=_dge .Get ("\u0053\u0075\u0062\u006a");_gfbf !=nil {_acgdd .Subj =_gfbf ;};if _def :=_dge .Get ("\u0052\u0054");_def !=nil {_acgdd .RT =_def ;};if _dgb :=_dge .Get ("\u0049\u0054");_dgb !=nil {_acgdd .IT =_dgb ;};if _gaf :=_dge .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_gaf !=nil {_acgdd .ExData =_gaf ;};return _acgdd ,nil ;};

// IsCID returns true if the underlying font is CID.
func (_gcbd *PdfFont )IsCID ()bool {return _gcbd .baseFields ().isCIDFont ()};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_defg PdfModel ;_bdcdc *_fee .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_fee .PdfObjectName ;T *_fee .PdfObjectString ;TU *_fee .PdfObjectString ;TM *_fee .PdfObjectString ;Ff *_fee .PdfObjectInteger ;V _fee .PdfObject ;DV _fee .PdfObject ;AA _fee .PdfObject ;};func _gadee ()*modelManager {_dbbae :=modelManager {};_dbbae ._gcfg =map[PdfModel ]_fee .PdfObject {};_dbbae ._dgfdf =map[_fee .PdfObject ]PdfModel {};return &_dbbae ;};func (_ccefcg *PdfPage )setContainer (_ggefe *_fee .PdfIndirectObject ){_ggefe .PdfObject =_ccefcg ._eddb ;_ccefcg ._abdg =_ggefe ;};func (_ccdfg *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _ccdfg ._dedcg ==nil &&_ccdfg .DescendantFont !=nil {return _ccdfg .DescendantFont .FontDescriptor ();};return _ccdfg ._dedcg ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gdee *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gdee ._bbgg !=nil {return _gdee ._bbgg ,nil ;};if _gdee .ColorSpace ==nil {return nil ,nil ;};_feedb ,_gcbcb :=_dbac (_gdee .ColorSpace );if _gcbcb !=nil {return nil ,_gcbcb ;};_gdee ._bbgg =_feedb ;return _gdee ._bbgg ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfbgd *PdfShadingType1 )ToPdfObject ()_fee .PdfObject {_gfbgd .PdfShading .ToPdfObject ();_gaac ,_deeaa :=_gfbgd .getShadingDict ();if _deeaa !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gfbgd .Domain !=nil {_gaac .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gfbgd .Domain );};if _gfbgd .Matrix !=nil {_gaac .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfbgd .Matrix );};if _gfbgd .Function !=nil {if len (_gfbgd .Function )==1{_gaac .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfbgd .Function [0].ToPdfObject ());}else {_affabf :=_fee .MakeArray ();for _ ,_efdeb :=range _gfbgd .Function {_affabf .Append (_efdeb .ToPdfObject ());};_gaac .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_affabf );};};return _gfbgd ._gbadg ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_afgfg *PdfPage )GetAllContentStreams ()(string ,error ){_eagg ,_eaga :=_afgfg .GetContentStreams ();if _eaga !=nil {return "",_eaga ;};return _ebc .Join (_eagg ,"\u0020"),nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_agfbd :=&PdfPageResources {};_agfbd ._edaeea =_fee .MakeDict ();return _agfbd ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_dcdcc *PdfReader )GetObjectNums ()[]int {return _dcdcc ._daae .GetObjectNums ()};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gcb :=NewPdfAction ();_aa :=&PdfActionLaunch {};_aa .PdfAction =_gcb ;_gcb .SetContext (_aa );return _aa ;};

// HasXObjectByName checks if has XObject resource by name.
func (_fagb *PdfPage )HasXObjectByName (name _fee .PdfObjectName )bool {_bdcea ,_faggb :=_fagb .Resources .XObject .(*_fee .PdfObjectDictionary );if !_faggb {return false ;};if _bfafce :=_bdcea .Get (name );_bfafce !=nil {return true ;};return false ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_cbbae *PdfPage )AddExtGState (name _fee .PdfObjectName ,egs *_fee .PdfObjectDictionary )error {if _cbbae .Resources ==nil {_cbbae .Resources =NewPdfPageResources ();};if _cbbae .Resources .ExtGState ==nil {_cbbae .Resources .ExtGState =_fee .MakeDict ();};_dbcgb ,_cdccf :=_fee .TraceToDirectObject (_cbbae .Resources .ExtGState ).(*_fee .PdfObjectDictionary );if !_cdccf {_adc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fee .TraceToDirectObject (_cbbae .Resources .ExtGState ));return _beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dbcgb .Set (name ,egs );return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_deac *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbe ,_fecb :=_fee .GetNumbersAsFloat (objects );if _fecb !=nil {return nil ,_fecb ;};return _deac .ColorFromFloats (_fbe );};

// ToPdfObject implements interface PdfModel.
func (_ged *PdfActionSubmitForm )ToPdfObject ()_fee .PdfObject {_ged .PdfAction .ToPdfObject ();_ded :=_ged ._fg ;_fgg :=_ded .PdfObject .(*_fee .PdfObjectDictionary );_fgg .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeSubmitForm )));if _ged .F !=nil {_fgg .Set ("\u0046",_ged .F .ToPdfObject ());};_fgg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ged .Fields );_fgg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ged .Flags );return _ded ;};func _cacc (_abbd _fee .PdfObject )(*PdfFontDescriptor ,error ){_ddec :=&PdfFontDescriptor {};_abbd =_fee .ResolveReference (_abbd );if _geecd ,_fbcga :=_abbd .(*_fee .PdfIndirectObject );_fbcga {_ddec ._gbag =_geecd ;_abbd =_geecd .PdfObject ;};_cbbb ,_bacb :=_fee .GetDict (_abbd );if !_bacb {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_abbd );return nil ,_fee .ErrTypeError ;};if _eabbd :=_cbbb .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_eabbd !=nil {_ddec .FontName =_eabbd ;}else {_adc .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_adgge ,_ :=_fee .GetName (_ddec .FontName );if _ggdga :=_cbbb .Get ("\u0054\u0079\u0070\u0065");_ggdga !=nil {_fbgda ,_cbcea :=_ggdga .(*_fee .PdfObjectName );if !_cbcea ||string (*_fbgda )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_adc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ggdga ,_adgge ,_ddec .FontName );};}else {_adc .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_adgge ,_ddec .FontName );};_ddec .FontFamily =_cbbb .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_ddec .FontStretch =_cbbb .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_ddec .FontWeight =_cbbb .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_ddec .Flags =_cbbb .Get ("\u0046\u006c\u0061g\u0073");_ddec .FontBBox =_cbbb .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_ddec .ItalicAngle =_cbbb .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_ddec .Ascent =_cbbb .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_ddec .Descent =_cbbb .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_ddec .Leading =_cbbb .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_ddec .CapHeight =_cbbb .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_ddec .XHeight =_cbbb .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_ddec .StemV =_cbbb .Get ("\u0053\u0074\u0065m\u0056");_ddec .StemH =_cbbb .Get ("\u0053\u0074\u0065m\u0048");_ddec .AvgWidth =_cbbb .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_ddec .MaxWidth =_cbbb .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_ddec .MissingWidth =_cbbb .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_ddec .FontFile =_cbbb .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_ddec .FontFile2 =_cbbb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_ddec .FontFile3 =_cbbb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_ddec .CharSet =_cbbb .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_ddec .Style =_cbbb .Get ("\u0053\u0074\u0079l\u0065");_ddec .Lang =_cbbb .Get ("\u004c\u0061\u006e\u0067");_ddec .FD =_cbbb .Get ("\u0046\u0044");_ddec .CIDSet =_cbbb .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _ddec .Flags !=nil {if _bdgc ,_cbfbc :=_fee .GetIntVal (_ddec .Flags );_cbfbc {_ddec ._dcdc =_bdgc ;};};if _ddec .MissingWidth !=nil {if _caadg ,_cedde :=_fee .GetNumberAsFloat (_ddec .MissingWidth );_cedde ==nil {_ddec ._dffb =_caadg ;};};if _ddec .FontFile !=nil {_gcgee ,_fbaaf :=_efbdfa (_ddec .FontFile );if _fbaaf !=nil {return _ddec ,_fbaaf ;};_adc .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_gcgee );_ddec .fontFile =_gcgee ;};if _ddec .FontFile2 !=nil {_dbea ,_affab :=_cg .NewFontFile2FromPdfObject (_ddec .FontFile2 );if _affab !=nil {return _ddec ,_affab ;};_adc .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dbea .String ());_ddec ._cgee =&_dbea ;};return _ddec ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fbac pdfFontType0 )GetCharMetrics (code _de .CharCode )(_cg .CharMetrics ,bool ){if _fbac .DescendantFont ==nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fbac );return _cg .CharMetrics {},false ;};return _fbac .DescendantFont .GetCharMetrics (code );};

// ToPdfObject returns a stream object.
func (_agdc *XObjectForm )ToPdfObject ()_fee .PdfObject {_cgbge :=_agdc ._cdbge ;_aggcg :=_cgbge .PdfObjectDictionary ;if _agdc .Filter !=nil {_aggcg =_agdc .Filter .MakeStreamDict ();_cgbge .PdfObjectDictionary =_aggcg ;};_aggcg .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_aggcg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0046\u006f\u0072\u006d"));_aggcg .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_agdc .FormType );_aggcg .SetIfNotNil ("\u0042\u0042\u006f\u0078",_agdc .BBox );_aggcg .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_agdc .Matrix );if _agdc .Resources !=nil {_aggcg .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_agdc .Resources .ToPdfObject ());};_aggcg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_agdc .Group );_aggcg .SetIfNotNil ("\u0052\u0065\u0066",_agdc .Ref );_aggcg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_agdc .MetaData );_aggcg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_agdc .PieceInfo );_aggcg .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_agdc .LastModified );_aggcg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_agdc .StructParent );_aggcg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_agdc .StructParents );_aggcg .SetIfNotNil ("\u004f\u0050\u0049",_agdc .OPI );_aggcg .SetIfNotNil ("\u004f\u0043",_agdc .OC );_aggcg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_agdc .Name );_aggcg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fee .MakeInteger (int64 (len (_agdc .Stream ))));_cgbge .Stream =_agdc .Stream ;return _cgbge ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_cdadf *PdfPageResources )AddExtGState (gsName _fee .PdfObjectName ,gsDict _fee .PdfObject )error {if _cdadf .ExtGState ==nil {_cdadf .ExtGState =_fee .MakeDict ();};_egegg :=_cdadf .ExtGState ;_ffcec ,_cfee :=_fee .TraceToDirectObject (_egegg ).(*_fee .PdfObjectDictionary );if !_cfee {_adc .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_egegg ,_fee .TraceToDirectObject (_egegg ));return _fee .ErrTypeError ;};_ffcec .Set (gsName ,gsDict );return nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fabc *PdfOutlineTreeNode )GetContainingPdfObject ()_fee .PdfObject {return _fabc .GetContext ().GetContainingPdfObject ();};func (_cgf *PdfReader )newPdfActionGotoFromDict (_fdf *_fee .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fdf .Get ("\u0044")},nil ;};var _fbaf ="";

// GetNumPages returns the number of pages in the document.
func (_gaeef *PdfReader )GetNumPages ()(int ,error ){if _gaeef ._daae .GetCrypter ()!=nil &&!_gaeef ._daae .IsAuthenticated (){return 0,_ba .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_gaeef ._aagc ),nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _fee .PdfObject ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_fee .PdfIndirectObject )*PdfOutlineItem {_abccb :=PdfOutlineItem {};_abccb ._dbcdc =&_abccb ;_abccb .Title =_fee .MakeString (title );_cecbg :=_fee .MakeArray ();_cecbg .Append (page );_cecbg .Append (_fee .MakeName ("\u0046\u0069\u0074"));_abccb .Dest =_cecbg ;return &_abccb ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dgaef *PdfReader )CheckAccessRights (password []byte )(bool ,_bfc .Permissions ,error ){return _dgaef ._daae .CheckAccessRights (password );};

// B returns the value of the B component of the color.
func (_ffbe *PdfColorLab )B ()float64 {return float64 (_ffbe [2])};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_geabd *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caed :=vals [0];if _caed < 0.0||_caed > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bceg :=vals [1];if _bceg < 0.0||_bceg > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeae :=vals [2];if _aeae < 0.0||_aeae > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agae :=vals [3];if _agae < 0.0||_agae > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acga :=NewPdfColorDeviceCMYK (_caed ,_bceg ,_aeae ,_agae );return _acga ,nil ;};func (_dded *PdfAppender )updateObjectsDeep (_aefcc _fee .PdfObject ,_cece map[_fee .PdfObject ]struct{}){if _cece ==nil {_cece =map[_fee .PdfObject ]struct{}{};};if _ ,_fcba :=_cece [_aefcc ];_fcba ||_aefcc ==nil {return ;};_cece [_aefcc ]=struct{}{};_dffa :=_fee .ResolveReferencesDeep (_aefcc ,_dded ._eccc );if _dffa !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dffa );};switch _ddfe :=_aefcc .(type ){case *_fee .PdfIndirectObject :switch {case _ddfe .GetParser ()==_dded ._agaa ._daae :return ;case _ddfe .GetParser ()==_dded .Reader ._daae :_dccec ,_ :=_dded ._agaa .GetIndirectObjectByNumber (int (_ddfe .ObjectNumber ));_ddaa ,_bfbd :=_dccec .(*_fee .PdfIndirectObject );if _bfbd &&_ddaa !=nil {if _ddaa .PdfObject !=_ddfe .PdfObject &&_ddaa .PdfObject .WriteString ()!=_ddfe .PdfObject .WriteString (){_dded .addNewObject (_aefcc );_dded ._adagd [_aefcc ]=_ddfe .ObjectNumber ;};};default:_dded .addNewObject (_aefcc );};_dded .updateObjectsDeep (_ddfe .PdfObject ,_cece );case *_fee .PdfObjectArray :for _ ,_cbdfa :=range _ddfe .Elements (){_dded .updateObjectsDeep (_cbdfa ,_cece );};case *_fee .PdfObjectDictionary :for _ ,_bfag :=range _ddfe .Keys (){_dded .updateObjectsDeep (_ddfe .Get (_bfag ),_cece );};case *_fee .PdfObjectStreams :if _ddfe .GetParser ()!=_dded ._agaa ._daae {for _ ,_gbgfe :=range _ddfe .Elements (){_dded .updateObjectsDeep (_gbgfe ,_cece );};};case *_fee .PdfObjectStream :switch {case _ddfe .GetParser ()==_dded ._agaa ._daae :return ;case _ddfe .GetParser ()==_dded .Reader ._daae :if _cegf ,_ddff :=_dded ._agaa ._daae .LookupByReference (_ddfe .PdfObjectReference );_ddff ==nil {var _edeb bool ;if _aedc ,_cebb :=_fee .GetStream (_cegf );_cebb &&_ed .Equal (_aedc .Stream ,_ddfe .Stream ){_edeb =true ;};if _dbgd ,_feagc :=_fee .GetDict (_cegf );_edeb &&_feagc {_edeb =_dbgd .WriteString ()==_ddfe .PdfObjectDictionary .WriteString ();};if _edeb {return ;};};if _ddfe .ObjectNumber !=0{_dded ._adagd [_aefcc ]=_ddfe .ObjectNumber ;};default:if _ ,_cadf :=_dded ._aeeb [_aefcc ];!_cadf {_dded .addNewObject (_aefcc );};};_dded .updateObjectsDeep (_ddfe .PdfObjectDictionary ,_cece );};};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cbfb FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cbfb .Mask ()&^fl .Mask ())};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bcfd :=NewPdfAnnotation ();_ddb :=&PdfAnnotationSquare {};_ddb .PdfAnnotation =_bcfd ;_ddb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcfd .SetContext (_ddb );return _ddb ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _fee .PdfObject ;FontFamily _fee .PdfObject ;FontStretch _fee .PdfObject ;FontWeight _fee .PdfObject ;Flags _fee .PdfObject ;FontBBox _fee .PdfObject ;ItalicAngle _fee .PdfObject ;Ascent _fee .PdfObject ;Descent _fee .PdfObject ;Leading _fee .PdfObject ;CapHeight _fee .PdfObject ;XHeight _fee .PdfObject ;StemV _fee .PdfObject ;StemH _fee .PdfObject ;AvgWidth _fee .PdfObject ;MaxWidth _fee .PdfObject ;MissingWidth _fee .PdfObject ;FontFile _fee .PdfObject ;FontFile2 _fee .PdfObject ;FontFile3 _fee .PdfObject ;CharSet _fee .PdfObject ;_dcdc int ;_dffb float64 ;*fontFile ;_cgee *_cg .TtfType ;

// Additional entries for CIDFonts
Style _fee .PdfObject ;Lang _fee .PdfObject ;FD _fee .PdfObject ;CIDSet _fee .PdfObject ;_gbag *_fee .PdfIndirectObject ;};func (_fadec *PdfWriter )addObject (_eebcd _fee .PdfObject )bool {_fgae :=_fadec .hasObject (_eebcd );if !_fgae {_bacbg :=_fee .ResolveReferencesDeep (_eebcd ,_fadec ._bbegc );if _bacbg !=nil {_adc .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_bacbg );};_fadec ._fagbg =append (_fadec ._fagbg ,_eebcd );_fadec ._faegg [_eebcd ]=struct{}{};return true ;};return false ;};var _gfdg =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};func (_fabe *fontFile )parseASCIIPart (_fcdf []byte )error {if len (_fcdf )< 2||string (_fcdf [:2])!="\u0025\u0021"{return _beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_fgbcg ,_gdac ,_cefd :=_fbbaf (_fcdf );if _cefd !=nil {return _cefd ;};_egebe :=_gdfde (_fgbcg );_fabe ._aebeed =_egebe ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _fabe ._aebeed ==""{_adc .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _gdac !=""{_baga ,_cggg :=_fbag (_gdac );if _cggg !=nil {return _cggg ;};_ggecg ,_cggg :=_de .NewCustomSimpleTextEncoder (_baga ,nil );if _cggg !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_cggg );return nil ;};_fabe ._dedb =_ggecg ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebd *PdfActionGoToR )ToPdfObject ()_fee .PdfObject {_ebd .PdfAction .ToPdfObject ();_fd :=_ebd ._fg ;_fda :=_fd .PdfObject .(*_fee .PdfObjectDictionary );_fda .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeGoToR )));if _ebd .F !=nil {_fda .Set ("\u0046",_ebd .F .ToPdfObject ());};_fda .SetIfNotNil ("\u0044",_ebd .D );_fda .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ebd .NewWindow );return _fd ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_ddg :=NewPdfAction ();_fcc :=&PdfActionNamed {};_fcc .PdfAction =_ddg ;_ddg .SetContext (_fcc );return _fcc ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fee .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_afa *PdfActionGoTo )ToPdfObject ()_fee .PdfObject {_afa .PdfAction .ToPdfObject ();_eaa :=_afa ._fg ;_gee :=_eaa .PdfObject .(*_fee .PdfObjectDictionary );_gee .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeGoTo )));_gee .SetIfNotNil ("\u0044",_afa .D );return _eaa ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_cfabb *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _cfabb ._egef .(*PdfShadingPattern );};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gegg :=&PdfColorspaceCalRGB {};_gegg .BlackPoint =[]float64 {0.0,0.0,0.0};_gegg .Gamma =[]float64 {1.0,1.0,1.0};_gegg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gegg ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fcbcc DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// HasFontByName checks if has font resource by name.
func (_fbedg *PdfPage )HasFontByName (name _fee .PdfObjectName )bool {_cffef ,_fdeb :=_fbedg .Resources .Font .(*_fee .PdfObjectDictionary );if !_fdeb {return false ;};if _dbcf :=_cffef .Get (name );_dbcf !=nil {return true ;};return false ;};func (_edade *XObjectImage )getParamsDict ()*_fee .PdfObjectDictionary {_effe :=_fee .MakeDict ();_effe .Set ("\u0057\u0069\u0064t\u0068",_fee .MakeInteger (*_edade .Width ));_effe .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fee .MakeInteger (*_edade .Height ));_effe .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fee .MakeInteger (int64 (_edade .ColorSpace .GetNumComponents ())));_effe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fee .MakeInteger (*_edade .BitsPerComponent ));return _effe ;};

// GetPage returns the PdfPage model for the specified page number.
func (_cdbbf *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _cdbbf ._daae .GetCrypter ()!=nil &&!_cdbbf ._daae .IsAuthenticated (){return nil ,_ba .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_cdbbf ._aagc )< pageNumber {return nil ,_beg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_fffbbc :=pageNumber -1;if _fffbbc < 0{return nil ,_ba .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_cfbdg :=_cdbbf .PageList [_fffbbc ];return _cfbdg ,nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_cfbbb *PdfPageResourcesColorspaces )Set (key _fee .PdfObjectName ,val PdfColorspace ){if _ ,_dbgfd :=_cfbbb .Colorspaces [string (key )];!_dbgfd {_cfbbb .Names =append (_cfbbb .Names ,string (key ));};_cfbbb .Colorspaces [string (key )]=val ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_deeg *PdfColorLab )GetNumComponents ()int {return 3};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_fbdc *pdfCIDFontType0 )ToPdfObject ()_fee .PdfObject {return _fee .MakeNull ()};func _ddgf (_bdedce _fee .PdfObject )(map[_de .CharCode ]float64 ,error ){if _bdedce ==nil {return nil ,nil ;};_fcda ,_bgbce :=_fee .GetArray (_bdedce );if !_bgbce {return nil ,nil ;};_bdcdce :=map[_de .CharCode ]float64 {};_bfbbg :=_fcda .Len ();for _fgece :=0;_fgece < _bfbbg -1;_fgece ++{_gfgag :=_fee .TraceToDirectObject (_fcda .Get (_fgece ));_begdf ,_fefe :=_fee .GetIntVal (_gfgag );if !_fefe {return nil ,_ba .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_fgece ,_gfgag );};_fgece ++;if _fgece > _bfbbg -1{return nil ,_ba .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fcda );};_fbee :=_fee .TraceToDirectObject (_fcda .Get (_fgece ));switch _fbee .(type ){case *_fee .PdfObjectArray :_egdag ,_ :=_fee .GetArray (_fbee );if _aagb ,_gggba :=_egdag .ToFloat64Array ();_gggba ==nil {for _afaeed :=0;_afaeed < len (_aagb );_afaeed ++{_bdcdce [_de .CharCode (_begdf +_afaeed )]=_aagb [_afaeed ];};}else {return nil ,_ba .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fgece ,_fbee );};case *_fee .PdfObjectInteger :_bffc ,_deaaa :=_fee .GetIntVal (_fbee );if !_deaaa {return nil ,_ba .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fgece ,_fbee );};_fgece ++;if _fgece > _bfbbg -1{return nil ,_ba .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fcda );};_efgg :=_fcda .Get (_fgece );_ebbcb ,_agca :=_fee .GetNumberAsFloat (_efgg );if _agca !=nil {return nil ,_ba .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fgece ,_efgg );};for _fada :=_begdf ;_fada <=_bffc ;_fada ++{_bdcdce [_de .CharCode (_fada )]=_ebbcb ;};default:return nil ,_ba .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fgece ,_fbee );};};return _bdcdce ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_feeee *PdfSignature )SetLocation (location string ){_feeee .Location =_fee .MakeString (location )};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_cfca :=&PdfPageResourcesColorspaces {};_cfca .Names =[]string {};_cfca .Colorspaces =map[string ]PdfColorspace {};_cfca ._gaegd =&_fee .PdfIndirectObject {};return _cfca ;};func (_afdce *PdfSignature )extractChainFromPKCS7 ()([]*_d .Certificate ,error ){_ceebg ,_gcafab :=_ea .Parse (_afdce .Contents .Bytes ());if _gcafab !=nil {return nil ,_gcafab ;};return _ceebg .Certificates ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_fffbbg *PdfPage )GetPageDict ()*_fee .PdfObjectDictionary {_abed :=_fffbbg ._eddb ;_abed .Clear ();_abed .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0050\u0061\u0067\u0065"));_abed .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fffbbg .Parent );if _fffbbg .LastModified !=nil {_abed .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_fffbbg .LastModified .ToPdfObject ());};if _fffbbg .Resources !=nil {_abed .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fffbbg .Resources .ToPdfObject ());};if _fffbbg .CropBox !=nil {_abed .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_fffbbg .CropBox .ToPdfObject ());};if _fffbbg .MediaBox !=nil {_abed .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_fffbbg .MediaBox .ToPdfObject ());};if _fffbbg .BleedBox !=nil {_abed .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_fffbbg .BleedBox .ToPdfObject ());};if _fffbbg .TrimBox !=nil {_abed .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_fffbbg .TrimBox .ToPdfObject ());};if _fffbbg .ArtBox !=nil {_abed .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_fffbbg .ArtBox .ToPdfObject ());};_abed .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_fffbbg .BoxColorInfo );_abed .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fffbbg .Contents );if _fffbbg .Rotate !=nil {_abed .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fee .MakeInteger (*_fffbbg .Rotate ));};_abed .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_fffbbg .Group );_abed .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_fffbbg .Thumb );_abed .SetIfNotNil ("\u0042",_fffbbg .B );_abed .SetIfNotNil ("\u0044\u0075\u0072",_fffbbg .Dur );_abed .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fffbbg .Trans );_abed .SetIfNotNil ("\u0041\u0041",_fffbbg .AA );_abed .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fffbbg .Metadata );_abed .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_fffbbg .PieceInfo );_abed .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fffbbg .StructParents );_abed .SetIfNotNil ("\u0049\u0044",_fffbbg .ID );_abed .SetIfNotNil ("\u0050\u005a",_fffbbg .PZ );_abed .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_fffbbg .SeparationInfo );_abed .SetIfNotNil ("\u0054\u0061\u0062\u0073",_fffbbg .Tabs );_abed .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_fffbbg .TemplateInstantiated );_abed .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_fffbbg .PresSteps );_abed .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_fffbbg .UserUnit );_abed .SetIfNotNil ("\u0056\u0050",_fffbbg .VP );if _fffbbg ._dacea !=nil {_gfdc :=_fee .MakeArray ();for _ ,_bfedc :=range _fffbbg ._dacea {if _febf :=_bfedc .GetContext ();_febf !=nil {_gfdc .Append (_febf .ToPdfObject ());}else {_gfdc .Append (_bfedc .ToPdfObject ());};};if _gfdc .Len ()> 0{_abed .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_gfdc );};}else if _fffbbg .Annots !=nil {_abed .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_fffbbg .Annots );};return _abed ;};func (_ecccb *PdfAppender )replaceObject (_ebg ,_cbac _fee .PdfObject ){switch _aedb :=_ebg .(type ){case *_fee .PdfIndirectObject :_ecccb ._adagd [_cbac ]=_aedb .ObjectNumber ;case *_fee .PdfObjectStream :_ecccb ._adagd [_cbac ]=_aedb .ObjectNumber ;};};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_edac :=NewPdfAnnotation ();_bca :=&PdfAnnotationRedact {};_bca .PdfAnnotation =_edac ;_bca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edac .SetContext (_bca );return _bca ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_dgdfd *PdfPageResources )GetXObjectImageByName (keyName _fee .PdfObjectName )(*XObjectImage ,error ){_bbbbg ,_gffad :=_dgdfd .GetXObjectByName (keyName );if _bbbbg ==nil {return nil ,nil ;};if _gffad !=XObjectTypeImage {return nil ,_beg .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_ebebc ,_fbceg :=NewXObjectImageFromStream (_bbbbg );if _fbceg !=nil {return nil ,_fbceg ;};return _ebebc ,nil ;};func (_gbgc *PdfReader )newPdfActionResetFormFromDict (_afe *_fee .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_afe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_afe .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func _eebed (_eggfc *_fee .PdfObjectDictionary )(*PdfShadingType5 ,error ){_feac :=PdfShadingType5 {};_gcadd :=_eggfc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gcadd ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_gbadb ,_decc :=_gcadd .(*_fee .PdfObjectInteger );if !_decc {_adc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcadd );return nil ,_fee .ErrTypeError ;};_feac .BitsPerCoordinate =_gbadb ;_gcadd =_eggfc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gcadd ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_gbadb ,_decc =_gcadd .(*_fee .PdfObjectInteger );if !_decc {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gcadd );return nil ,_fee .ErrTypeError ;};_feac .BitsPerComponent =_gbadb ;_gcadd =_eggfc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _gcadd ==nil {_adc .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_gbadb ,_decc =_gcadd .(*_fee .PdfObjectInteger );if !_decc {_adc .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gcadd );return nil ,_fee .ErrTypeError ;};_feac .VerticesPerRow =_gbadb ;_gcadd =_eggfc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gcadd ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_bede ,_decc :=_gcadd .(*_fee .PdfObjectArray );if !_decc {_adc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcadd );return nil ,_fee .ErrTypeError ;};_feac .Decode =_bede ;if _eacdgf :=_eggfc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eacdgf !=nil {_feac .Function =[]PdfFunction {};if _addd ,_gfdf :=_eacdgf .(*_fee .PdfObjectArray );_gfdf {for _ ,_daacf :=range _addd .Elements (){_ddcge ,_aaae :=_ddgcb (_daacf );if _aaae !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aaae );return nil ,_aaae ;};_feac .Function =append (_feac .Function ,_ddcge );};}else {_afbe ,_bbagb :=_ddgcb (_eacdgf );if _bbagb !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbagb );return nil ,_bbagb ;};_feac .Function =append (_feac .Function ,_afbe );};};return &_feac ,nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_ddeaf *PdfAcroForm )ToPdfObject ()_fee .PdfObject {_decec :=_ddeaf ._edda ;_dfdf :=_decec .PdfObject .(*_fee .PdfObjectDictionary );if _ddeaf .Fields !=nil {_cbba :=_fee .PdfObjectArray {};for _ ,_bbcb :=range *_ddeaf .Fields {_aeccg :=_bbcb .GetContext ();if _aeccg !=nil {_cbba .Append (_aeccg .ToPdfObject ());}else {_cbba .Append (_bbcb .ToPdfObject ());};};_dfdf .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cbba );};if _ddeaf .NeedAppearances !=nil {_dfdf .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_ddeaf .NeedAppearances );};if _ddeaf .SigFlags !=nil {_dfdf .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_ddeaf .SigFlags );};if _ddeaf .CO !=nil {_dfdf .Set ("\u0043\u004f",_ddeaf .CO );};if _ddeaf .DR !=nil {_dfdf .Set ("\u0044\u0052",_ddeaf .DR .ToPdfObject ());};if _ddeaf .DA !=nil {_dfdf .Set ("\u0044\u0041",_ddeaf .DA );};if _ddeaf .Q !=nil {_dfdf .Set ("\u0051",_ddeaf .Q );};if _ddeaf .XFA !=nil {_dfdf .Set ("\u0058\u0046\u0041",_ddeaf .XFA );};return _decec ;};func (_gcebc *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_fee .PdfObjectInteger ;BitsPerComponent *_fee .PdfObjectInteger ;BitsPerFlag *_fee .PdfObjectInteger ;Decode *_fee .PdfObjectArray ;Function []PdfFunction ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bad *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffff :=vals [0];if _ffff < 0.0||_ffff > 1.0{_adc .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _ffff < 0.0{_ffff =0.0;}else if _ffff > 1.0{_ffff =1.0;};return NewPdfColorDeviceGray (_ffff ),nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_gebd *PdfField )GetContainingPdfObject ()_fee .PdfObject {return _gebd ._bdcdc };func _dbaf (_ccbcf *_fee .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bgdcce :=PdfShadingType7 {};_bdcgg :=_ccbcf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bdcgg ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cbdfbg ,_bedgb :=_bdcgg .(*_fee .PdfObjectInteger );if !_bedgb {_adc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdcgg );return nil ,_fee .ErrTypeError ;};_bgdcce .BitsPerCoordinate =_cbdfbg ;_bdcgg =_ccbcf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bdcgg ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cbdfbg ,_bedgb =_bdcgg .(*_fee .PdfObjectInteger );if !_bedgb {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bdcgg );return nil ,_fee .ErrTypeError ;};_bgdcce .BitsPerComponent =_cbdfbg ;_bdcgg =_ccbcf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bdcgg ==nil {_adc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbdfbg ,_bedgb =_bdcgg .(*_fee .PdfObjectInteger );if !_bedgb {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdcgg );return nil ,_fee .ErrTypeError ;};_bgdcce .BitsPerComponent =_cbdfbg ;_bdcgg =_ccbcf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bdcgg ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dffbc ,_bedgb :=_bdcgg .(*_fee .PdfObjectArray );if !_bedgb {_adc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdcgg );return nil ,_fee .ErrTypeError ;};_bgdcce .Decode =_dffbc ;if _cgfaf :=_ccbcf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cgfaf !=nil {_bgdcce .Function =[]PdfFunction {};if _ebgee ,_eafae :=_cgfaf .(*_fee .PdfObjectArray );_eafae {for _ ,_fffgd :=range _ebgee .Elements (){_edgag ,_ebbae :=_ddgcb (_fffgd );if _ebbae !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebbae );return nil ,_ebbae ;};_bgdcce .Function =append (_bgdcce .Function ,_edgag );};}else {_ceace ,_fbace :=_ddgcb (_cgfaf );if _fbace !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbace );return nil ,_fbace ;};_bgdcce .Function =append (_bgdcce .Function ,_ceace );};};return &_bgdcce ,nil ;};func _dbdea ()string {return _efgec };

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_caede *PdfFont )CharcodesToStrings (charcodes []_de .CharCode )([]string ,int ,int ){_gegge :=_caede .baseFields ();_acada :=make ([]string ,0,len (charcodes ));_egeefg :=0;for _ ,_abde :=range charcodes {if _gegge ._edeab !=nil {if _cgbgf ,_begd :=_gegge ._edeab .CharcodeToUnicode (_afb .CharCode (_abde ));_begd {_acada =append (_acada ,_cgbgf );continue ;};};_daecf :=_caede .Encoder ();if _daecf !=nil {if _gffd ,_ecce :=_daecf .CharcodeToRune (_abde );_ecce {_acada =append (_acada ,string (_gffd ));continue ;};};_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_abde ,charcodes ,_gegge .isCIDFont (),_caede ,_daecf );_egeefg ++;_acada =append (_acada ,_afb .MissingCodeString );};if _egeefg !=0{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_egeefg ,_caede );};return _acada ,len (_acada ),_egeefg ;};func (_agff *PdfReader )newPdfActionGotoRFromDict (_gge *_fee .PdfObjectDictionary )(*PdfActionGoToR ,error ){_adcd ,_bfe :=_dcg (_gge .Get ("\u0046"));if _bfe !=nil {return nil ,_bfe ;};return &PdfActionGoToR {D :_gge .Get ("\u0044"),NewWindow :_gge .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_adcd },nil ;};func (_bfaeg *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func (_aeaac fontCommon )coreString ()string {_bgfc :="";if _aeaac ._dedcg !=nil {_bgfc =_aeaac ._dedcg .String ();};return _ba .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_aeaac ._agbcd ,_aeaac ._fagfdc ,_aeaac ._fged ,_aeaac ._fcgf ,_aeaac ._gcfe !=nil ,_aeaac .fontFlags (),_bgfc );};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bagd *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_fee .StreamEncoder ,error ){_dbgfb ,_dbacg :=_bagd ._aege .(*_fee .PdfObjectStream );if !_dbacg {_adc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bagd ._aege );return nil ,nil ,_fee .ErrTypeError ;};_dgfa ,_fbccb :=_fee .DecodeStream (_dbgfb );if _fbccb !=nil {_adc .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_fbccb );return nil ,nil ,_fbccb ;};_adbda ,_fbccb :=_fee .NewEncoderFromStream (_dbgfb );if _fbccb !=nil {_adc .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_fbccb );return nil ,nil ,_fbccb ;};return _dgfa ,_adbda ,nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_aaead *PdfPageResources )SetPatternByName (keyName _fee .PdfObjectName ,pattern _fee .PdfObject )error {if _aaead .Pattern ==nil {_aaead .Pattern =_fee .MakeDict ();};_afdfb ,_ccbb :=_aaead .Pattern .(*_fee .PdfObjectDictionary );if !_ccbb {return _fee .ErrTypeError ;};_afdfb .Set (keyName ,pattern );return nil ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fee .PdfObject ;IC _fee .PdfObject ;RO _fee .PdfObject ;OverlayText _fee .PdfObject ;Repeat _fee .PdfObject ;DA _fee .PdfObject ;Q _fee .PdfObject ;};func _gcggg ()string {return _ggfef };

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_bfcff *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_fffb *PdfFieldText )ToPdfObject ()_fee .PdfObject {_fffb .PdfField .ToPdfObject ();_fbbgf :=_fffb ._bdcdc ;_efbb :=_fbbgf .PdfObject .(*_fee .PdfObjectDictionary );_efbb .Set ("\u0046\u0054",_fee .MakeName ("\u0054\u0078"));if _fffb .DA !=nil {_efbb .Set ("\u0044\u0041",_fffb .DA );};if _fffb .Q !=nil {_efbb .Set ("\u0051",_fffb .Q );};if _fffb .DS !=nil {_efbb .Set ("\u0044\u0053",_fffb .DS );};if _fffb .RV !=nil {_efbb .Set ("\u0052\u0056",_fffb .RV );};if _fffb .MaxLen !=nil {_efbb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_fffb .MaxLen );};return _fbbgf ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ecafc *XObjectForm )GetContainingPdfObject ()_fee .PdfObject {return _ecafc ._cdbge };

// Add appends a top level outline item to the outline.
func (_ecbae *Outline )Add (item *OutlineItem ){_ecbae .Entries =append (_ecbae .Entries ,item )};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_abda *PdfColorspaceICCBased )ToPdfObject ()_fee .PdfObject {_fceb :=&_fee .PdfObjectArray {};_fceb .Append (_fee .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _bdfdb *_fee .PdfObjectStream ;if _abda ._aega !=nil {_bdfdb =_abda ._aega ;}else {_bdfdb =&_fee .PdfObjectStream {};};_bfcge :=_fee .MakeDict ();_bfcge .Set ("\u004e",_fee .MakeInteger (int64 (_abda .N )));if _abda .Alternate !=nil {_bfcge .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_abda .Alternate .ToPdfObject ());};if _abda .Metadata !=nil {_bfcge .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_abda .Metadata );};if _abda .Range !=nil {var _eeadf []_fee .PdfObject ;for _ ,_ebad :=range _abda .Range {_eeadf =append (_eeadf ,_fee .MakeFloat (_ebad ));};_bfcge .Set ("\u0052\u0061\u006eg\u0065",_fee .MakeArray (_eeadf ...));};_bfcge .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fee .MakeInteger (int64 (len (_abda .Data ))));_bdfdb .Stream =_abda .Data ;_bdfdb .PdfObjectDictionary =_bfcge ;_fceb .Append (_bdfdb );if _abda ._cade !=nil {_abda ._cade .PdfObject =_fceb ;return _abda ._cade ;};return _fceb ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_fggec *PdfPattern )SetContext (ctx PdfModel ){_fggec ._egef =ctx };

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_dgfad *PdfPageResources )HasXObjectByName (keyName _fee .PdfObjectName )bool {_eggfa ,_ :=_dgfad .GetXObjectByName (keyName );return _eggfa !=nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_fee .PdfObjectInteger ;BitsPerComponent *_fee .PdfObjectInteger ;BitsPerFlag *_fee .PdfObjectInteger ;Decode *_fee .PdfObjectArray ;Function []PdfFunction ;};var _abbca _e .Time ;

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_daeegg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _cgaed []*PdfField ;_fbfbe :=map[*_fee .PdfIndirectObject ]struct{}{};for _ ,_begeb :=range _daeegg .PageList {_ddfd ,_daggd :=_begeb .GetAnnotations ();if _daggd !=nil {return _daggd ;};for _ ,_gafff :=range _ddfd {var _dffgf *PdfField ;switch _cagbb :=_gafff .GetContext ().(type ){case *PdfAnnotationWidget :if _cagbb ._agg !=nil {_dffgf =_cagbb ._agg ;break ;};if _ffaaf ,_cdcd :=_fee .GetIndirect (_cagbb .Parent );_cdcd {_dffgf ,_daggd =_daeegg .newPdfFieldFromIndirectObject (_ffaaf ,nil );if _daggd ==nil {break ;};_adc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ffaaf ,_daggd );};if _cagbb ._gdc !=nil {_dffgf ,_daggd =_daeegg .newPdfFieldFromIndirectObject (_cagbb ._gdc ,nil );if _daggd ==nil {break ;};_adc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cagbb ._gdc ,_daggd );};};if _dffgf ==nil {continue ;};if _ ,_agdec :=_fbfbe [_dffgf ._bdcdc ];_agdec {continue ;};_fbfbe [_dffgf ._bdcdc ]=struct{}{};_cgaed =append (_cgaed ,_dffgf );};};if len (_cgaed )==0{return nil ;};if _daeegg .AcroForm ==nil {_daeegg .AcroForm =NewPdfAcroForm ();};_daeegg .AcroForm .Fields =&_cgaed ;return nil ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_dacba *PdfPageResources )SetColorspaceByName (keyName _fee .PdfObjectName ,cs PdfColorspace )error {_fbffb ,_bbeba :=_dacba .GetColorspaces ();if _bbeba !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bbeba );return _bbeba ;};if _fbffb ==nil {_fbffb =NewPdfPageResourcesColorspaces ();_dacba .SetColorSpace (_fbffb );};_fbffb .Set (keyName ,cs );return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ac *PdfAction )GetContainingPdfObject ()_fee .PdfObject {return _ac ._fg };

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _fee .PdfObject ;ColorSpace _fee .PdfObject ;Pattern _fee .PdfObject ;Shading _fee .PdfObject ;XObject _fee .PdfObject ;Font _fee .PdfObject ;ProcSet _fee .PdfObject ;Properties _fee .PdfObject ;_edaeea *_fee .PdfObjectDictionary ;_bbgg *PdfPageResourcesColorspaces ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cefg =creator };func _ebcgb (_bdfb []*_fee .PdfObjectStream )*_fee .PdfObjectArray {if len (_bdfb )==0{return nil ;};_dggec :=make ([]_fee .PdfObject ,0,len (_bdfb ));for _ ,_ecgge :=range _bdfb {_dggec =append (_dggec ,_ecgge );};return _fee .MakeArray (_dggec ...);};var _efgec ="";

// ToPdfObject implements interface PdfModel.
func (_geea *PdfAnnotation3D )ToPdfObject ()_fee .PdfObject {_geea .PdfAnnotation .ToPdfObject ();_fbcg :=_geea ._gdc ;_dadaa :=_fbcg .PdfObject .(*_fee .PdfObjectDictionary );_dadaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0033\u0044"));_dadaa .SetIfNotNil ("\u0033\u0044\u0044",_geea .T3DD );_dadaa .SetIfNotNil ("\u0033\u0044\u0056",_geea .T3DV );_dadaa .SetIfNotNil ("\u0033\u0044\u0041",_geea .T3DA );_dadaa .SetIfNotNil ("\u0033\u0044\u0049",_geea .T3DI );_dadaa .SetIfNotNil ("\u0033\u0044\u0042",_geea .T3DB );return _fbcg ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_gbgbd *PdfReader )Decrypt (password []byte )(bool ,error ){_fdddb ,_bafbe :=_gbgbd ._daae .Decrypt (password );if _bafbe !=nil {return false ,_bafbe ;};if !_fdddb {return false ,nil ;};_bafbe =_gbgbd .loadStructure ();if _bafbe !=nil {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bafbe );return false ,_bafbe ;};return true ,nil ;};var _cdbb =_ad .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _fee .PdfObject ;Q _fee .PdfObject ;RC _fee .PdfObject ;DS _fee .PdfObject ;CL _fee .PdfObject ;IT _fee .PdfObject ;BE _fee .PdfObject ;RD _fee .PdfObject ;BS _fee .PdfObject ;LE _fee .PdfObject ;};func (_fcde *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_bgfb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bgfb .AlternateSpace ==nil {return nil ,_beg .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _bgfb .AlternateSpace .ColorToRGB (color );};

// GetOutlineTree returns the outline tree.
func (_gcfga *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _gcfga ._added };

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_gfbd *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bgad ,_dgbac :=color .(*PdfColorCalGray );if !_dgbac {_adc .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_bgad .Val ();X :=_gfbd .WhitePoint [0]*_eba .Pow (ANorm ,_gfbd .Gamma );Y :=_gfbd .WhitePoint [1]*_eba .Pow (ANorm ,_gfbd .Gamma );Z :=_gfbd .WhitePoint [2]*_eba .Pow (ANorm ,_gfbd .Gamma );_gbef :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dabc :=-0.969256*X +1.875992*Y +0.041556*Z ;_fffa :=0.055648*X +-0.204043*Y +1.057311*Z ;_gbef =_eba .Min (_eba .Max (_gbef ,0),1.0);_dabc =_eba .Min (_eba .Max (_dabc ,0),1.0);_fffa =_eba .Min (_eba .Max (_fffa ,0),1.0);return NewPdfColorDeviceRGB (_gbef ,_dabc ,_fffa ),nil ;};func (_gfgb *PdfField )inherit (_beffa func (*PdfField )bool )(bool ,error ){_dabg :=map[*PdfField ]bool {};_ffgd :=false ;_ddedc :=_gfgb ;for _ddedc !=nil {if _ ,_eafg :=_dabg [_ddedc ];_eafg {return false ,_beg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_efaf :=_beffa (_ddedc );if _efaf {_ffgd =true ;break ;};_dabg [_ddedc ]=true ;_ddedc =_ddedc .Parent ;};return _ffgd ,nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_dbef *PdfPattern )ToPdfObject ()_fee .PdfObject {_acaee :=_dbef .getDict ();_acaee .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_acaee .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_fee .MakeInteger (_dbef .PatternType ));return _dbef ._aege ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func (_bdbg *PdfReader )newPdfAnnotationRichMediaFromDict (_fcd *_fee .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ecb :=&PdfAnnotationRichMedia {};_ecb .RichMediaSettings =_fcd .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_ecb .RichMediaContent =_fcd .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ecb ,nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_cbea *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject implements interface PdfModel.
func (_bcf *PdfActionHide )ToPdfObject ()_fee .PdfObject {_bcf .PdfAction .ToPdfObject ();_bec :=_bcf ._fg ;_dddc :=_bec .PdfObject .(*_fee .PdfObjectDictionary );_dddc .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeHide )));_dddc .SetIfNotNil ("\u0054",_bcf .T );_dddc .SetIfNotNil ("\u0048",_bcf .H );return _bec ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_cfgac *PdfPageResources )GetFontByName (keyName _fee .PdfObjectName )(_fee .PdfObject ,bool ){if _cfgac .Font ==nil {return nil ,false ;};_bfcfg ,_fagec :=_fee .TraceToDirectObject (_cfgac .Font ).(*_fee .PdfObjectDictionary );if !_fagec {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fee .TraceToDirectObject (_cfgac .Font ));return nil ,false ;};if _cagbf :=_bfcfg .Get (keyName );_cagbf !=nil {return _cagbf ,true ;};return nil ,false ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gbed *PdfColorCalGray )GetNumComponents ()int {return 1};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_bddag :=&PdfFieldSignature {};_bddag .PdfField =NewPdfField ();_bddag .PdfField .SetContext (_bddag );_bddag .PdfAnnotationWidget =NewPdfAnnotationWidget ();_bddag .PdfAnnotationWidget .SetContext (_bddag );_bddag .PdfAnnotationWidget ._gdc =_bddag .PdfField ._bdcdc ;_bddag .T =_fee .MakeString ("");_bddag .F =_fee .MakeInteger (132);_bddag .V =signature ;return _bddag ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_adfea :_fee .MakeIndirectObject (_fee .MakeDict ()),VRI :map[string ]*VRI {}};};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_becec :=appender .Reader .DSS ;if _becec ==nil {_becec =NewDSS ();};if _aged :=_becec .generateHashMaps ();_aged !=nil {return nil ,_aged ;};return &LTV {_cggeb :_fe .NewOCSPClient (),_geecf :_fe .NewCRLClient (),_fgegg :_fe .NewCertClient (),_eded :appender ,_becc :_becec ,SkipExisting :true },nil ;};func _gfeg (_fadc []byte )([]byte ,error ){_fgfbe :=_gc .New ();if _ ,_abfd :=_be .Copy (_fgfbe ,_ed .NewReader (_fadc ));_abfd !=nil {return nil ,_abfd ;};return _fgfbe .Sum (nil ),nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_gcae *PdfPageResources )SetXObjectByName (keyName _fee .PdfObjectName ,stream *_fee .PdfObjectStream )error {if _gcae .XObject ==nil {_gcae .XObject =_fee .MakeDict ();};_gabc :=_fee .TraceToDirectObject (_gcae .XObject );_gdbgd ,_gggdc :=_gabc .(*_fee .PdfObjectDictionary );if !_gggdc {_adc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_gcae .XObject ,_gabc );return _beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdbgd .Set (keyName ,stream );return nil ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bcgfc pdfFontSimple )GetRuneMetrics (r rune )(_cg .CharMetrics ,bool ){if _bcgfc ._dgfgf !=nil {_gdgg ,_gdgd :=_bcgfc ._dgfgf [r ];if _gdgd {return _gdgg ,true ;};};_fffeg :=_bcgfc .Encoder ();if _fffeg ==nil {_adc .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bcgfc );return _cg .CharMetrics {},false ;};_ceagf ,_ddee :=_fffeg .RuneToCharcode (r );if !_ddee {if r !=' '{_adc .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bcgfc );};return _cg .CharMetrics {},false ;};_dacge ,_fege :=_bcgfc .GetCharMetrics (_ceagf );return _dacge ,_fege ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bebg :=NewPdfAnnotation ();_daa :=&PdfAnnotationRichMedia {};_daa .PdfAnnotation =_bebg ;_bebg .SetContext (_daa );return _daa ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _fee .PdfObject ;B _fee .PdfObject ;};func _efbdfa (_bdee _fee .PdfObject )(*fontFile ,error ){_adc .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bdee );_fface :=&fontFile {};_bdee =_fee .TraceToDirectObject (_bdee );_acdae ,_bbbc :=_bdee .(*_fee .PdfObjectStream );if !_bbbc {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bdee );return nil ,_fee .ErrTypeError ;};_dgbcf :=_acdae .PdfObjectDictionary ;_ccad ,_begbd :=_fee .DecodeStream (_acdae );if _begbd !=nil {return nil ,_begbd ;};_baac ,_bbbc :=_fee .GetNameVal (_dgbcf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bbbc {_fface ._gdff =_baac ;if _baac =="\u0054\u0079\u0070\u0065\u0031\u0043"{_adc .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_dgaab ,_ :=_fee .GetIntVal (_dgbcf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_fgfa ,_ :=_fee .GetIntVal (_dgbcf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _dgaab > len (_ccad ){_dgaab =len (_ccad );};if _dgaab +_fgfa > len (_ccad ){_fgfa =len (_ccad )-_dgaab ;};_ccce :=_ccad [:_dgaab ];var _cgcg []byte ;if _fgfa > 0{_cgcg =_ccad [_dgaab :_dgaab +_fgfa ];};if _dgaab > 0&&_fgfa > 0{_ffbaba :=_fface .loadFromSegments (_ccce ,_cgcg );if _ffbaba !=nil {return nil ,_ffbaba ;};};return _fface ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_fcaf *PdfPageResources )GetXObjectFormByName (keyName _fee .PdfObjectName )(*XObjectForm ,error ){_febfg ,_cfbcg :=_fcaf .GetXObjectByName (keyName );if _febfg ==nil {return nil ,nil ;};if _cfbcg !=XObjectTypeForm {return nil ,_beg .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_cbaba ,_baeda :=NewXObjectFormFromStream (_febfg );if _baeda !=nil {return nil ,_baeda ;};return _cbaba ,nil ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_baec *Image )SetSamples (samples []uint32 ){if _baec .BitsPerComponent < 8{samples =_baec .samplesAddPadding (samples );};_afeg :=_ef .ResampleUint32 (samples ,int (_baec .BitsPerComponent ),8);_cbed :=make ([]byte ,len (_afeg ));for _ebfeb ,_dbbd :=range _afeg {_cbed [_ebfeb ]=byte (_dbbd );};_baec .Data =_cbed ;};func (_ffaf *PdfReader )newPdfAnnotationInkFromDict (_eedd *_fee .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_cdad :=PdfAnnotationInk {};_bgce ,_bcba :=_ffaf .newPdfAnnotationMarkupFromDict (_eedd );if _bcba !=nil {return nil ,_bcba ;};_cdad .PdfAnnotationMarkup =_bgce ;_cdad .InkList =_eedd .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_cdad .BS =_eedd .Get ("\u0042\u0053");return &_cdad ,nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_bbagc _be .ReadSeeker ;_efeb *_fee .PdfParser ;_agaa *PdfReader ;Reader *PdfReader ;_facda []*PdfPage ;_cbcd *PdfAcroForm ;_eaed *DSS ;_bfee _fee .XrefTable ;_fagcd int64 ;_gdd int ;_fbbfd []_fee .PdfObject ;_aeeb map[_fee .PdfObject ]struct{};_adagd map[_fee .PdfObject ]int64 ;_edbc map[_fee .PdfObject ]struct{};_eccc map[_fee .PdfObject ]struct{};_gfda int64 ;_eeb bool ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_cgddg *PdfPageResources )GetXObjectByName (keyName _fee .PdfObjectName )(*_fee .PdfObjectStream ,XObjectType ){if _cgddg .XObject ==nil {return nil ,XObjectTypeUndefined ;};_dcacd ,_ffedg :=_fee .TraceToDirectObject (_cgddg .XObject ).(*_fee .PdfObjectDictionary );if !_ffedg {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fee .TraceToDirectObject (_cgddg .XObject ));return nil ,XObjectTypeUndefined ;};if _fagfaf :=_dcacd .Get (keyName );_fagfaf !=nil {_bbdgg ,_eecfb :=_fee .GetStream (_fagfaf );if !_eecfb {_adc .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_fagfaf );return nil ,XObjectTypeUndefined ;};_fggbbf :=_bbdgg .PdfObjectDictionary ;_fadef ,_eecfb :=_fee .TraceToDirectObject (_fggbbf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_fee .PdfObjectName );if !_eecfb {_adc .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_fggbbf .String ());return nil ,XObjectTypeUndefined ;};if *_fadef =="\u0049\u006d\u0061g\u0065"{return _bbdgg ,XObjectTypeImage ;}else if *_fadef =="\u0046\u006f\u0072\u006d"{return _bbdgg ,XObjectTypeForm ;}else if *_fadef =="\u0050\u0053"{return _bbdgg ,XObjectTypePS ;}else {_adc .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_fadef );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// ToPdfObject implements interface PdfModel.
func (_dced *PdfAnnotationLine )ToPdfObject ()_fee .PdfObject {_dced .PdfAnnotation .ToPdfObject ();_bgg :=_dced ._gdc ;_dgee :=_bgg .PdfObject .(*_fee .PdfObjectDictionary );_dced .PdfAnnotationMarkup .appendToPdfDictionary (_dgee );_dgee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u004c\u0069\u006e\u0065"));_dgee .SetIfNotNil ("\u004c",_dced .L );_dgee .SetIfNotNil ("\u0042\u0053",_dced .BS );_dgee .SetIfNotNil ("\u004c\u0045",_dced .LE );_dgee .SetIfNotNil ("\u0049\u0043",_dced .IC );_dgee .SetIfNotNil ("\u004c\u004c",_dced .LL );_dgee .SetIfNotNil ("\u004c\u004c\u0045",_dced .LLE );_dgee .SetIfNotNil ("\u0043\u0061\u0070",_dced .Cap );_dgee .SetIfNotNil ("\u0049\u0054",_dced .IT );_dgee .SetIfNotNil ("\u004c\u004c\u004f",_dced .LLO );_dgee .SetIfNotNil ("\u0043\u0050",_dced .CP );_dgee .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dced .Measure );_dgee .SetIfNotNil ("\u0043\u004f",_dced .CO );return _bgg ;};

// Encoder returns the font's text encoder.
func (_ceegg *PdfFont )Encoder ()_de .TextEncoder {_edgb :=_ceegg .actualFont ();if _edgb ==nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ceegg ._ddaad );return nil ;};return _edgb .Encoder ();};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_febgf *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_affd :=0.3*_febgf .R ()+0.59*_febgf .G ()+0.11*_febgf .B ();_affd =_eba .Min (_eba .Max (_affd ,0.0),1.0);return NewPdfColorDeviceGray (_affd );};func (_efd *PdfReader )newPdfActionGotoEFromDict (_abf *_fee .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dgaa ,_eggd :=_dcg (_abf .Get ("\u0046"));if _eggd !=nil {return nil ,_eggd ;};return &PdfActionGoToE {D :_abf .Get ("\u0044"),NewWindow :_abf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_abf .Get ("\u0054"),F :_dgaa },nil ;};

// ToPdfObject implements interface PdfModel.
func (_gccgb *PdfAnnotationFreeText )ToPdfObject ()_fee .PdfObject {_gccgb .PdfAnnotation .ToPdfObject ();_eegc :=_gccgb ._gdc ;_gege :=_eegc .PdfObject .(*_fee .PdfObjectDictionary );_gccgb .PdfAnnotationMarkup .appendToPdfDictionary (_gege );_gege .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_gege .SetIfNotNil ("\u0044\u0041",_gccgb .DA );_gege .SetIfNotNil ("\u0051",_gccgb .Q );_gege .SetIfNotNil ("\u0052\u0043",_gccgb .RC );_gege .SetIfNotNil ("\u0044\u0053",_gccgb .DS );_gege .SetIfNotNil ("\u0043\u004c",_gccgb .CL );_gege .SetIfNotNil ("\u0049\u0054",_gccgb .IT );_gege .SetIfNotNil ("\u0042\u0045",_gccgb .BE );_gege .SetIfNotNil ("\u0052\u0044",_gccgb .RD );_gege .SetIfNotNil ("\u0042\u0053",_gccgb .BS );_gege .SetIfNotNil ("\u004c\u0045",_gccgb .LE );return _eegc ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func _dadf (_cgfgc _fee .PdfObject )(*PdfBorderStyle ,error ){_cbcb :=&PdfBorderStyle {};_cbcb ._agdb =_cgfgc ;var _ccaf *_fee .PdfObjectDictionary ;_cgfgc =_fee .TraceToDirectObject (_cgfgc );_ccaf ,_efbd :=_cgfgc .(*_fee .PdfObjectDictionary );if !_efbd {return nil ,_beg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _eabf :=_ccaf .Get ("\u0054\u0079\u0070\u0065");_eabf !=nil {_gfc ,_gdcc :=_eabf .(*_fee .PdfObjectName );if !_gdcc {_adc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_eabf );}else {if *_gfc !="\u0042\u006f\u0072\u0064\u0065\u0072"{_adc .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_gfc );};};};if _aceg :=_ccaf .Get ("\u0057");_aceg !=nil {_adae ,_ccde :=_fee .GetNumberAsFloat (_aceg );if _ccde !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_ccde );return nil ,_ccde ;};_cbcb .W =&_adae ;};if _bacg :=_ccaf .Get ("\u0053");_bacg !=nil {_gcbe ,_fbbf :=_bacg .(*_fee .PdfObjectName );if !_fbbf {return nil ,_beg .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _ceb BorderStyle ;switch *_gcbe {case "\u0053":_ceb =BorderStyleSolid ;case "\u0044":_ceb =BorderStyleDashed ;case "\u0042":_ceb =BorderStyleBeveled ;case "\u0049":_ceb =BorderStyleInset ;case "\u0055":_ceb =BorderStyleUnderline ;default:_adc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gcbe );return nil ,_beg .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cbcb .S =&_ceb ;};if _bfeaa :=_ccaf .Get ("\u0044");_bfeaa !=nil {_dbc ,_gafg :=_bfeaa .(*_fee .PdfObjectArray );if !_gafg {_adc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_bfeaa );return nil ,_beg .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_dbf ,_acgfc :=_dbc .ToIntegerArray ();if _acgfc !=nil {_adc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_acgfc );return nil ,_acgfc ;};_cbcb .D =&_dbf ;};return _cbcb ,nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_fabff *XObjectForm )GetContentStream ()([]byte ,error ){_ebccc ,_efcb :=_fee .DecodeStream (_fabff ._cdbge );if _efcb !=nil {return nil ,_efcb ;};return _ebccc ,nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_agdb _fee .PdfObject ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func _ebbcd (_fgcad _fee .PdfObject ){_adc .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_fgcad ,_fgcad .String ());if _efgbc ,_gacdd :=_fgcad .(*_fee .PdfObjectStream );_gacdd {_eebgg ,_abcdc :=_fee .DecodeStream (_efgbc );if _abcdc !=nil {_adc .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_abcdc );return ;};_adc .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_eebgg );}else if _gegda ,_cdcbe :=_fgcad .(*_fee .PdfIndirectObject );_cdcbe {_adc .Log .Debug ("\u0025\u0054\u0020%\u0076",_gegda .PdfObject ,_gegda .PdfObject );_adc .Log .Debug ("\u0025\u0073",_gegda .PdfObject .String ());};};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_eebfc *PdfReader )GetPageLabels ()(_fee .PdfObject ,error ){_gddc :=_fee .ResolveReference (_eebfc ._egdgd .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _gddc ==nil {return nil ,nil ;};if !_eebfc ._cgff {_cadfd :=_eebfc .traverseObjectData (_gddc );if _cadfd !=nil {return nil ,_cadfd ;};};return _gddc ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_egcef *PdfPageResources )GetPatternByName (keyName _fee .PdfObjectName )(*PdfPattern ,bool ){if _egcef .Pattern ==nil {return nil ,false ;};_dfdg ,_bcdf :=_fee .TraceToDirectObject (_egcef .Pattern ).(*_fee .PdfObjectDictionary );if !_bcdf {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egcef .Pattern );return nil ,false ;};if _egcde :=_dfdg .Get (keyName );_egcde !=nil {_acebf ,_bagbb :=_gcde (_egcde );if _bagbb !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_bagbb );return nil ,false ;};return _acebf ,true ;};return nil ,false ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fbaeb *PdfPageResources )SetXObjectImageByName (keyName _fee .PdfObjectName ,ximg *XObjectImage )error {_bdfdg :=ximg .ToPdfObject ().(*_fee .PdfObjectStream );_bbbfd :=_fbaeb .SetXObjectByName (keyName ,_bdfdg );return _bbbfd ;};

// ToPdfObject implements interface PdfModel.
func (_ddcfb *PdfAnnotationHighlight )ToPdfObject ()_fee .PdfObject {_ddcfb .PdfAnnotation .ToPdfObject ();_feee :=_ddcfb ._gdc ;_bfcaa :=_feee .PdfObject .(*_fee .PdfObjectDictionary );_ddcfb .PdfAnnotationMarkup .appendToPdfDictionary (_bfcaa );_bfcaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_bfcaa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ddcfb .QuadPoints );return _feee ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gfgfg :=NewPdfOutline ();_gfgfg ._dbcdc =&_gfgfg ;return _gfgfg ;};type pdfFontType0 struct{fontCommon ;_fceff *_fee .PdfIndirectObject ;_daad _de .TextEncoder ;Encoding _fee .PdfObject ;DescendantFont *PdfFont ;_ddddf *_afb .CMap ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_dbcdc interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_bdd *PdfAnnotationPopup )ToPdfObject ()_fee .PdfObject {_bdd .PdfAnnotation .ToPdfObject ();_afd :=_bdd ._gdc ;_caad :=_afd .PdfObject .(*_fee .PdfObjectDictionary );_caad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0050\u006f\u0070u\u0070"));_caad .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bdd .Parent );_caad .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bdd .Open );return _afd ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _fee .PdfObject ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _fee .PdfObject ;};func _adda (_egabb *PdfField ,_edba _fee .PdfObject )error {switch _egabb .GetContext ().(type ){case *PdfFieldText :switch _dgdgb :=_edba .(type ){case *_fee .PdfObjectName :_cbffa :=_dgdgb ;_adc .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_cbffa .String ());_egabb .V =_fee .MakeEncodedString (_dgdgb .String (),true );case *_fee .PdfObjectString :_egabb .V =_fee .MakeEncodedString (_dgdgb .String (),true );default:_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_dgdgb ,_dgdgb );};case *PdfFieldButton :switch _edba .(type ){case *_fee .PdfObjectName :if len (_edba .String ())> 0{_egabb .V =_edba ;_bdba (_egabb ,_edba );};case *_fee .PdfObjectString :if len (_edba .String ())> 0{_egabb .V =_fee .MakeName (_edba .String ());_bdba (_egabb ,_egabb .V );};default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_egabb .PartialName (),_edba );_egabb .V =_edba ;};case *PdfFieldChoice :switch _edba .(type ){case *_fee .PdfObjectName :if len (_edba .String ())> 0{_egabb .V =_fee .MakeString (_edba .String ());_bdba (_egabb ,_edba );};case *_fee .PdfObjectString :if len (_edba .String ())> 0{_egabb .V =_edba ;_bdba (_egabb ,_fee .MakeName (_edba .String ()));};default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_egabb .PartialName (),_edba );_egabb .V =_edba ;};case *PdfFieldSignature :_adc .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_egabb .PartialName (),_edba );};return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ccccf *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// ToPdfObject returns a PDF object representation of the outline item.
func (_abbe *OutlineItem )ToPdfObject ()_fee .PdfObject {_acdg ,_ :=_abbe .ToPdfOutlineItem ();return _acdg .ToPdfObject ();};func (_ddefc *Image )samplesTrimPadding (_begdd []uint32 )[]uint32 {_gdag :=_ddefc .ColorComponents *int (_ddefc .Width )*int (_ddefc .Height );if len (_begdd )==_gdag {return _begdd ;};_efcef :=make ([]uint32 ,_gdag );_cgcbf :=int (_ddefc .Width )*_ddefc .ColorComponents ;var _gffaa ,_dbfae ,_ecbg ,_feda int ;_ceeef :=_ffg .BytesPerLine (int (_ddefc .Width ),int (_ddefc .BitsPerComponent ),_ddefc .ColorComponents );for _gffaa =0;_gffaa < int (_ddefc .Height );_gffaa ++{_dbfae =_gffaa *int (_ddefc .Width );_ecbg =_gffaa *_ceeef ;for _feda =0;_feda < _cgcbf ;_feda ++{_efcef [_dbfae +_feda ]=_begdd [_ecbg +_feda ];};};return _efcef ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_cg .CharMetrics ;

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_daffg *_fee .PdfIndirectObject ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_bg :=NewPdfAction ();_bdf :=&PdfActionURI {};_bdf .PdfAction =_bg ;_bg .SetContext (_bdf );return _bdf ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_gebg *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cbfbca :=NewPdfOutlineItem ();_cbfbca .Title =_fee .MakeEncodedString (_gebg .Title ,true );_cbfbca .Dest =_gebg .Dest .ToPdfObject ();var _daeeg []*PdfOutlineItem ;var _ggad int64 ;var _bgga *PdfOutlineItem ;for _ ,_efee :=range _gebg .Entries {_efab ,_adfdd :=_efee .ToPdfOutlineItem ();_efab .Parent =&_cbfbca .PdfOutlineTreeNode ;if _bgga !=nil {_bgga .Next =&_efab .PdfOutlineTreeNode ;_efab .Prev =&_bgga .PdfOutlineTreeNode ;};_daeeg =append (_daeeg ,_efab );_ggad +=_adfdd ;_bgga =_efab ;};_cgda :=len (_daeeg );_ggad +=int64 (_cgda );if _cgda > 0{_cbfbca .First =&_daeeg [0].PdfOutlineTreeNode ;_cbfbca .Last =&_daeeg [_cgda -1].PdfOutlineTreeNode ;_cbfbca .Count =&_ggad ;};return _cbfbca ,_ggad ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_gabad *_fee .PdfIndirectObject ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_beb :=NewPdfAnnotation ();_ecac :=&PdfAnnotationUnderline {};_ecac .PdfAnnotation =_beb ;_ecac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_beb .SetContext (_ecac );return _ecac ;};func _fbcd (_cfgdd _cg .StdFont )pdfFontSimple {_acggb :=_cfgdd .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_agbcd :"\u0054\u0079\u0070e\u0031",_fagfdc :_cfgdd .Name ()},_dgfgf :_cfgdd .GetMetricsTable (),_gefd :&PdfFontDescriptor {FontName :_fee .MakeName (string (_acggb .Name )),FontFamily :_fee .MakeName (_acggb .Family ),FontWeight :_fee .MakeFloat (float64 (_acggb .Weight )),Flags :_fee .MakeInteger (int64 (_acggb .Flags )),FontBBox :_fee .MakeArrayFromFloats (_acggb .BBox [:]),ItalicAngle :_fee .MakeFloat (_acggb .ItalicAngle ),Ascent :_fee .MakeFloat (_acggb .Ascent ),Descent :_fee .MakeFloat (_acggb .Descent ),CapHeight :_fee .MakeFloat (_acggb .CapHeight ),XHeight :_fee .MakeFloat (_acggb .XHeight ),StemV :_fee .MakeFloat (_acggb .StemV ),StemH :_fee .MakeFloat (_acggb .StemH )},_bbged :_cfgdd .Encoder ()};};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _fee .PdfObjectArray )(*PdfRectangle ,error ){_gage :=PdfRectangle {};if arr .Len ()!=4{return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _dbdba error ;_gage .Llx ,_dbdba =_fee .GetNumberAsFloat (arr .Get (0));if _dbdba !=nil {return nil ,_dbdba ;};_gage .Lly ,_dbdba =_fee .GetNumberAsFloat (arr .Get (1));if _dbdba !=nil {return nil ,_dbdba ;};_gage .Urx ,_dbdba =_fee .GetNumberAsFloat (arr .Get (2));if _dbdba !=nil {return nil ,_dbdba ;};_gage .Ury ,_dbdba =_fee .GetNumberAsFloat (arr .Get (3));if _dbdba !=nil {return nil ,_dbdba ;};return &_gage ,nil ;};func _ffae (_abbad ,_dcac string )string {if _ebc .Contains (_abbad ,"\u002b"){_eaaf :=_ebc .Split (_abbad ,"\u002b");if len (_eaaf )==2{_abbad =_eaaf [1];};};return _dcac +"\u002b"+_abbad ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _fee .PdfObject ;Open _fee .PdfObject ;};func (_dfae *PdfReader )newPdfAnnotationStampFromDict (_debd *_fee .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_dgfd :=PdfAnnotationStamp {};_dccg ,_efdg :=_dfae .newPdfAnnotationMarkupFromDict (_debd );if _efdg !=nil {return nil ,_efdg ;};_dgfd .PdfAnnotationMarkup =_dccg ;_dgfd .Name =_debd .Get ("\u004e\u0061\u006d\u0065");return &_dgfd ,nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_dcea *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func _cfbac (_gccdf *_fee .PdfObjectDictionary )(*PdfShadingType2 ,error ){_eegg :=PdfShadingType2 {};_dbabc :=_gccdf .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _dbabc ==nil {_adc .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_aeba ,_dcfaga :=_dbabc .(*_fee .PdfObjectArray );if !_dcfaga {_adc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbabc );return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _aeba .Len ()!=4{_adc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aeba .Len ());return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_eegg .Coords =_aeba ;if _gfdbb :=_gccdf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gfdbb !=nil {_gfdbb =_fee .TraceToDirectObject (_gfdbb );_acacb ,_aabbc :=_gfdbb .(*_fee .PdfObjectArray );if !_aabbc {_adc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfdbb );return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eegg .Domain =_acacb ;};_dbabc =_gccdf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dbabc ==nil {_adc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_eegg .Function =[]PdfFunction {};if _gffdb ,_aggb :=_dbabc .(*_fee .PdfObjectArray );_aggb {for _ ,_efef :=range _gffdb .Elements (){_afede ,_beaff :=_ddgcb (_efef );if _beaff !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beaff );return nil ,_beaff ;};_eegg .Function =append (_eegg .Function ,_afede );};}else {_gbdca ,_dbfde :=_ddgcb (_dbabc );if _dbfde !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbfde );return nil ,_dbfde ;};_eegg .Function =append (_eegg .Function ,_gbdca );};if _fgde :=_gccdf .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fgde !=nil {_fgde =_fee .TraceToDirectObject (_fgde );_bfcdc ,_baea :=_fgde .(*_fee .PdfObjectArray );if !_baea {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgde );return nil ,_fee .ErrTypeError ;};if _bfcdc .Len ()!=2{_adc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bfcdc .Len ());return nil ,ErrInvalidAttribute ;};_eegg .Extend =_bfcdc ;};return &_eegg ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_cfgdc *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _cfgdc .flattenFieldsWithOpts (allannots ,appgen ,nil );};func (_ccdg *PdfAppender )mergeResources (_gdgb ,_gbcca _fee .PdfObject ,_gdb map[_fee .PdfObjectName ]_fee .PdfObjectName )_fee .PdfObject {if _gbcca ==nil &&_gdgb ==nil {return nil ;};if _gbcca ==nil {return _gdgb ;};_bdab ,_cgfgcc :=_fee .GetDict (_gbcca );if !_cgfgcc {return _gdgb ;};if _gdgb ==nil {_dbcd :=_fee .MakeDict ();_dbcd .Merge (_bdab );return _gbcca ;};_daaa ,_cgfgcc :=_fee .GetDict (_gdgb );if !_cgfgcc {_adc .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_daaa =_fee .MakeDict ();};for _ ,_aeef :=range _bdab .Keys (){if _bddd ,_gbca :=_gdb [_aeef ];_gbca {_daaa .Set (_bddd ,_bdab .Get (_aeef ));}else {_daaa .Set (_aeef ,_bdab .Get (_aeef ));};};return _daaa ;};func (_eca *PdfReader )newPdfActionHideFromDict (_ced *_fee .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_ced .Get ("\u0054"),H :_ced .Get ("\u0048")},nil ;};var _cecec =_ad .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");func (_febcf *LTV )generateVRIKey (_fedcbd *PdfSignature )(string ,error ){_bafb ,_ccfff :=_gfeg (_fedcbd .Contents .Bytes ());if _ccfff !=nil {return "",_ccfff ;};return _ebc .ToUpper (_g .EncodeToString (_bafb )),nil ;};var _ebabd _e .Time ;

// Encoder returns the font's text encoder.
func (_gcbfc pdfCIDFontType2 )Encoder ()_de .TextEncoder {return _gcbfc ._adcb };

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_fee .PdfObjectString ;Q *_fee .PdfObjectInteger ;DS *_fee .PdfObjectString ;RV _fee .PdfObject ;MaxLen *_fee .PdfObjectInteger ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fee .PdfObject ;IC _fee .PdfObject ;BE _fee .PdfObject ;RD _fee .PdfObject ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_bebdd :=&PdfColorspaceLab {};_bebdd .BlackPoint =[]float64 {0.0,0.0,0.0};_bebdd .Range =[]float64 {-100,100,-100,100};return _bebdd ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_gbaaab *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_fagcg :=_gbaaab .GetContentStreamObjs ();wrapContents =wrapContents &&len (_fagcg )> 0;_edbgea :=_fee .NewFlateEncoder ();_efcag :=_fee .MakeArray ();if wrapContents {_dabgbe ,_ffgedg :=_fee .MakeStream ([]byte ("\u0071\u000a"),_edbgea );if _ffgedg !=nil {return _ffgedg ;};_efcag .Append (_dabgbe );};_efcag .Append (_fagcg ...);if wrapContents {_cdee ,_defga :=_fee .MakeStream ([]byte ("\u000a\u0051\u000a"),_edbgea );if _defga !=nil {return _defga ;};_efcag .Append (_cdee );};_defcc ,_acffc :=_fee .MakeStream (cs ,_edbgea );if _acffc !=nil {return _acffc ;};_efcag .Append (_defcc );_gbaaab .Contents =_efcag ;return nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dgdag *PdfColorspaceLab )ToPdfObject ()_fee .PdfObject {_dedg :=_fee .MakeArray ();_dedg .Append (_fee .MakeName ("\u004c\u0061\u0062"));_afgeb :=_fee .MakeDict ();if _dgdag .WhitePoint !=nil {_fcae :=_fee .MakeArray (_fee .MakeFloat (_dgdag .WhitePoint [0]),_fee .MakeFloat (_dgdag .WhitePoint [1]),_fee .MakeFloat (_dgdag .WhitePoint [2]));_afgeb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fcae );}else {_adc .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _dgdag .BlackPoint !=nil {_ggded :=_fee .MakeArray (_fee .MakeFloat (_dgdag .BlackPoint [0]),_fee .MakeFloat (_dgdag .BlackPoint [1]),_fee .MakeFloat (_dgdag .BlackPoint [2]));_afgeb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ggded );};if _dgdag .Range !=nil {_fcab :=_fee .MakeArray (_fee .MakeFloat (_dgdag .Range [0]),_fee .MakeFloat (_dgdag .Range [1]),_fee .MakeFloat (_dgdag .Range [2]),_fee .MakeFloat (_dgdag .Range [3]));_afgeb .Set ("\u0052\u0061\u006eg\u0065",_fcab );};_dedg .Append (_afgeb );if _dgdag ._gabad !=nil {_dgdag ._gabad .PdfObject =_dedg ;return _dgdag ._gabad ;};return _dedg ;};func (_ddada *PdfPattern )getDict ()*_fee .PdfObjectDictionary {if _bfdd ,_ccfd :=_ddada ._aege .(*_fee .PdfIndirectObject );_ccfd {_ddcbg ,_fdcbb :=_bfdd .PdfObject .(*_fee .PdfObjectDictionary );if !_fdcbb {return nil ;};return _ddcbg ;}else if _gcbda ,_agbec :=_ddada ._aege .(*_fee .PdfObjectStream );_agbec {return _gcbda .PdfObjectDictionary ;}else {_adc .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_ddada ._aege );return nil ;};};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_febeb *PdfPageResources )GetContainingPdfObject ()_fee .PdfObject {return _febeb ._edaeea };

// GetOptimizer returns current PDF optimizer.
func (_gacea *PdfWriter )GetOptimizer ()Optimizer {return _gacea ._adgb };func _gbgag (_gbdc _fee .PdfObject ,_cbbef *PdfReader )(*OutlineDest ,error ){_aggde ,_ccfeg :=_fee .GetArray (_gbdc );if !_ccfeg {return nil ,_beg .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_fdged :=_aggde .Len ();if _fdged < 2{return nil ,_ba .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_fdged );};_afbca :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_bdcbc :=_aggde .Get (0);if _ffdee ,_cabga :=_fee .GetIndirect (_bdcbc );_cabga {if _ ,_fbfc ,_ggea :=_cbbef .PageFromIndirectObject (_ffdee );_ggea ==nil {_afbca .Page =int64 (_fbfc -1);}else {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ffdee );};_afbca .PageObj =_ffdee ;}else if _cgace ,_caagd :=_fee .GetIntVal (_bdcbc );_caagd {if _cgace >=0&&_cgace < len (_cbbef .PageList ){_afbca .PageObj =_cbbef .PageList [_cgace ].GetPageAsIndirectObject ();}else {_adc .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_cgace );};_afbca .Page =int64 (_cgace );}else {return nil ,_ba .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_bdcbc );};_dgcba ,_ccfeg :=_fee .GetNameVal (_aggde .Get (1));if !_ccfeg {_adc .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_aggde .Get (1));return _afbca ,nil ;};switch _dgcba {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _fdged > 2{_afbca .Y ,_ =_fee .GetNumberAsFloat (_fee .TraceToDirectObject (_aggde .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _fdged > 2{_afbca .X ,_ =_fee .GetNumberAsFloat (_fee .TraceToDirectObject (_aggde .Get (2)));};case "\u0058\u0059\u005a":if _fdged > 4{_afbca .X ,_ =_fee .GetNumberAsFloat (_fee .TraceToDirectObject (_aggde .Get (2)));_afbca .Y ,_ =_fee .GetNumberAsFloat (_fee .TraceToDirectObject (_aggde .Get (3)));_afbca .Zoom ,_ =_fee .GetNumberAsFloat (_fee .TraceToDirectObject (_aggde .Get (4)));};default:_dgcba ="\u0046\u0069\u0074";};_afbca .Mode =_dgcba ;return _afbca ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_edda :_fee .MakeIndirectObject (_fee .MakeDict ())};};func _bfddc (_fdbg *_fee .PdfObjectDictionary )(*PdfShadingType6 ,error ){_bdgcb :=PdfShadingType6 {};_gffge :=_fdbg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gffge ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_ffcc ,_dgbcfa :=_gffge .(*_fee .PdfObjectInteger );if !_dgbcfa {_adc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gffge );return nil ,_fee .ErrTypeError ;};_bdgcb .BitsPerCoordinate =_ffcc ;_gffge =_fdbg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gffge ==nil {_adc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_ffcc ,_dgbcfa =_gffge .(*_fee .PdfObjectInteger );if !_dgbcfa {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gffge );return nil ,_fee .ErrTypeError ;};_bdgcb .BitsPerComponent =_ffcc ;_gffge =_fdbg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gffge ==nil {_adc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_ffcc ,_dgbcfa =_gffge .(*_fee .PdfObjectInteger );if !_dgbcfa {_adc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gffge );return nil ,_fee .ErrTypeError ;};_bdgcb .BitsPerComponent =_ffcc ;_gffge =_fdbg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gffge ==nil {_adc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_fddf ,_dgbcfa :=_gffge .(*_fee .PdfObjectArray );if !_dgbcfa {_adc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gffge );return nil ,_fee .ErrTypeError ;};_bdgcb .Decode =_fddf ;if _dfed :=_fdbg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dfed !=nil {_bdgcb .Function =[]PdfFunction {};if _deabc ,_ccbga :=_dfed .(*_fee .PdfObjectArray );_ccbga {for _ ,_ecec :=range _deabc .Elements (){_cgagdf ,_edgec :=_ddgcb (_ecec );if _edgec !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edgec );return nil ,_edgec ;};_bdgcb .Function =append (_bdgcb .Function ,_cgagdf );};}else {_cbbf ,_gddce :=_ddgcb (_dfed );if _gddce !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gddce );return nil ,_gddce ;};_bdgcb .Function =append (_bdgcb .Function ,_cbbf );};};return &_bdgcb ,nil ;};func (_gcdcg *pdfFontType0 )bytesToCharcodes (_bbea []byte )([]_de .CharCode ,bool ){if _gcdcg ._ddddf ==nil {return nil ,false ;};_cefc ,_eeda :=_gcdcg ._ddddf .BytesToCharcodes (_bbea );if !_eeda {return nil ,false ;};_fcadb :=make ([]_de .CharCode ,len (_cefc ));for _ffded ,_eefc :=range _cefc {_fcadb [_ffded ]=_de .CharCode (_eefc );};return _fcadb ,true ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_aaaa *Image )GetSamples ()[]uint32 {_fcbba :=_ef .ResampleBytes (_aaaa .Data ,int (_aaaa .BitsPerComponent ));if _aaaa .BitsPerComponent < 8{_fcbba =_aaaa .samplesTrimPadding (_fcbba );};_bbeb :=int (_aaaa .Width )*int (_aaaa .Height )*_aaaa .ColorComponents ;if len (_fcbba )< _bbeb {_adc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_fcbba ),_bbeb );return _fcbba ;}else if len (_fcbba )> _bbeb {_adc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_fcbba ),_bbeb );_fcbba =_fcbba [:_bbeb ];};return _fcbba ;};

// Write writes out the PDF.
func (_fdbea *PdfWriter )Write (writer _be .Writer )error {_adc .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ccba :=_fb .GetLicenseKey ();if (_ccba ==nil ||!_ccba .IsLicensed ())&&!_gecba {_ba .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_ba .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _beg .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _fdbea ._cdffb !=nil {_adc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_fdbea ._cdffb );_dgbce :=_fdbea ._cdffb .ToPdfObject ();_adc .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_dgbce ,_dgbce ,_dgbce );_fdbea ._cbcgfc .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_dgbce );_aage :=_fdbea .addObjects (_dgbce );if _aage !=nil {return _aage ;};};if _fdbea ._feeaa !=nil {_adc .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_cddgd :=_fdbea ._feeaa .ToPdfObject ();_adc .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cddgd );_fdbea ._cbcgfc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cddgd );_bfacc :=_fdbea .addObjects (_cddgd );if _bfacc !=nil {return _bfacc ;};};for _ddcgc ,_egbfe :=range _fdbea ._fgcec {if !_fdbea .hasObject (_ddcgc ){_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_ddcgc ,_ddcgc ,_ddcgc );for _ ,_eeceg :=range _egbfe {for _ ,_cefcb :=range _eeceg .Keys (){_eggbe :=_eeceg .Get (_cefcb );if _eggbe ==_ddcgc {_adc .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_eeceg .Set (_cefcb ,_fee .MakeNull ());break ;};};};};};_fdbea ._cbcgfc .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_fee .MakeName (_ba .Sprintf ("\u0025\u0064\u002e%\u0064",_fdbea ._dfedf ,_fdbea ._gfbgc )));_fdbea .copyObjects ();if _fdbea ._adgb !=nil {var _bbccg error ;_fdbea ._fagbg ,_bbccg =_fdbea ._adgb .Optimize (_fdbea ._fagbg );if _bbccg !=nil {return _bbccg ;};_abebaa :=make (map[_fee .PdfObject ]struct{},len (_fdbea ._fagbg ));for _ ,_cabe :=range _fdbea ._fagbg {_abebaa [_cabe ]=struct{}{};};_fdbea ._faegg =_abebaa ;};_fdbea ._egdbg =_fdbea ._dbece ;_fdbea ._gcace =_f .NewWriter (writer );_dgdga :=_fdbea ._dfedf > 1||(_fdbea ._dfedf ==1&&_fdbea ._gfbgc > 4);if _fdbea ._dggdf !=nil {_dgdga =*_fdbea ._dggdf ;};_afdcf :=make (map[_fee .PdfObject ]bool );for _ ,_ggcgf :=range _fdbea ._fagbg {if _gefgg ,_bfafd :=_ggcgf .(*_fee .PdfObjectStreams );_bfafd {_dgdga =true ;for _ ,_fbfec :=range _gefgg .Elements (){_afdcf [_fbfec ]=true ;if _dgeaeg ,_ggcbd :=_fbfec .(*_fee .PdfIndirectObject );_ggcbd {_afdcf [_dgeaeg .PdfObject ]=true ;};};};};if _dgdga &&_fdbea ._dfedf ==1&&_fdbea ._gfbgc < 5{_fdbea ._gfbgc =5;};if _fdbea ._ccadg {_fdbea .writeString ("\u000a");}else {_fdbea .writeString (_ba .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_fdbea ._dfedf ,_fdbea ._gfbgc ));_fdbea .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_fdbea .updateObjectNumbers ();_adc .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_fdbea ._fagbg ));_fdbea ._cdeec =make (map[int ]crossReference );_fdbea ._cdeec [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _fdbea ._dggdfb .ObjectMap !=nil {for _gedbg ,_dcfbb :=range _fdbea ._dggdfb .ObjectMap {if _gedbg ==0{continue ;};if _dcfbb .XType ==_fee .XrefTypeObjectStream {_dfcfa :=crossReference {Type :2,ObjectNumber :_dcfbb .OsObjNumber ,Index :_dcfbb .OsObjIndex };_fdbea ._cdeec [_gedbg ]=_dfcfa ;};if _dcfbb .XType ==_fee .XrefTypeTableEntry {_adfa :=crossReference {Type :1,ObjectNumber :_dcfbb .ObjectNumber ,Offset :_dcfbb .Offset };_fdbea ._cdeec [_gedbg ]=_adfa ;};};};for _ ,_abfaed :=range _fdbea ._fagbg {if _ccaae :=_afdcf [_abfaed ];_ccaae {continue ;};_egcgb :=int64 (0);switch _bbab :=_abfaed .(type ){case *_fee .PdfIndirectObject :_egcgb =_bbab .ObjectNumber ;case *_fee .PdfObjectStream :_egcgb =_bbab .ObjectNumber ;case *_fee .PdfObjectStreams :_egcgb =_bbab .ObjectNumber ;default:_adc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_abfaed );return ErrTypeCheck ;};if _fdbea ._dgfbg !=nil &&_abfaed !=_fdbea ._ffcce {_cgbbc :=_fdbea ._dgfbg .Encrypt (_abfaed ,int64 (_egcgb ),0);if _cgbbc !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_cgbbc );return _cgbbc ;};};_fdbea .writeObject (int (_egcgb ),_abfaed );};_ebdf :=_fdbea ._egdbg ;var _ebgfd int ;for _baggae :=range _fdbea ._cdeec {if _baggae > _ebgfd {_ebgfd =_baggae ;};};if _dgdga {_faffd :=_ebgfd +1;_fdbea ._cdeec [_faffd ]=crossReference {Type :1,ObjectNumber :_faffd ,Offset :_ebdf };_begcg :=_ed .NewBuffer (nil );_fegeb :=_fee .MakeArray ();for _cdagg :=0;_cdagg <=_ebgfd ;{for ;_cdagg <=_ebgfd ;_cdagg ++{_ebfcf ,_dggfc :=_fdbea ._cdeec [_cdagg ];if _dggfc &&(!_fdbea ._ccadg ||_fdbea ._ccadg &&(_ebfcf .Type ==1&&_ebfcf .Offset >=_fdbea ._ebdcb ||_ebfcf .Type ==0)){break ;};};var _bggbbe int ;for _bggbbe =_cdagg +1;_bggbbe <=_ebgfd ;_bggbbe ++{_deead ,_fafbb :=_fdbea ._cdeec [_bggbbe ];if _fafbb &&(!_fdbea ._ccadg ||_fdbea ._ccadg &&(_deead .Type ==1&&_deead .Offset > _fdbea ._ebdcb )){continue ;};break ;};_fegeb .Append (_fee .MakeInteger (int64 (_cdagg )),_fee .MakeInteger (int64 (_bggbbe -_cdagg )));for _dffcg :=_cdagg ;_dffcg < _bggbbe ;_dffcg ++{_ddbda :=_fdbea ._cdeec [_dffcg ];switch _ddbda .Type {case 0:_eb .Write (_begcg ,_eb .BigEndian ,byte (0));_eb .Write (_begcg ,_eb .BigEndian ,uint32 (0));_eb .Write (_begcg ,_eb .BigEndian ,uint16 (0xFFFF));case 1:_eb .Write (_begcg ,_eb .BigEndian ,byte (1));_eb .Write (_begcg ,_eb .BigEndian ,uint32 (_ddbda .Offset ));_eb .Write (_begcg ,_eb .BigEndian ,uint16 (_ddbda .Generation ));case 2:_eb .Write (_begcg ,_eb .BigEndian ,byte (2));_eb .Write (_begcg ,_eb .BigEndian ,uint32 (_ddbda .ObjectNumber ));_eb .Write (_begcg ,_eb .BigEndian ,uint16 (_ddbda .Index ));};};_cdagg =_bggbbe +1;};_bbfc ,_dgdde :=_fee .MakeStream (_begcg .Bytes (),_fee .NewFlateEncoder ());if _dgdde !=nil {return _dgdde ;};_bbfc .ObjectNumber =int64 (_faffd );_bbfc .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0058\u0052\u0065\u0066"));_bbfc .PdfObjectDictionary .Set ("\u0057",_fee .MakeArray (_fee .MakeInteger (1),_fee .MakeInteger (4),_fee .MakeInteger (2)));_bbfc .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_fegeb );_bbfc .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_fee .MakeInteger (int64 (_faffd +1)));_bbfc .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_fdbea ._agfae );_bbfc .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_fdbea ._bcbd );if _fdbea ._ccadg &&_fdbea ._acgc > 0{_bbfc .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_fee .MakeInteger (_fdbea ._acgc ));};if _fdbea ._dgfbg !=nil {_bbfc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_fdbea ._ffcce );_bbfc .Set ("\u0049\u0044",_fdbea ._gdgcb );_adc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_fdbea ._gdgcb );};_fdbea .writeObject (int (_bbfc .ObjectNumber ),_bbfc );}else {_fdbea .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _eeaee :=0;_eeaee <=_ebgfd ;{for ;_eeaee <=_ebgfd ;_eeaee ++{_defa ,_gbae :=_fdbea ._cdeec [_eeaee ];if _gbae &&(!_fdbea ._ccadg ||_fdbea ._ccadg &&(_defa .Type ==1&&_defa .Offset >=_fdbea ._ebdcb ||_defa .Type ==0)){break ;};};var _eefge int ;for _eefge =_eeaee +1;_eefge <=_ebgfd ;_eefge ++{_gcaddf ,_eebfbf :=_fdbea ._cdeec [_eefge ];if _eebfbf &&(!_fdbea ._ccadg ||_fdbea ._ccadg &&(_gcaddf .Type ==1&&_gcaddf .Offset > _fdbea ._ebdcb )){continue ;};break ;};_caegg :=_ba .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_eeaee ,_eefge -_eeaee );_fdbea .writeString (_caegg );for _gegba :=_eeaee ;_gegba < _eefge ;_gegba ++{_bfbda :=_fdbea ._cdeec [_gegba ];switch _bfbda .Type {case 0:_caegg =_ba .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_fdbea .writeString (_caegg );case 1:_caegg =_ba .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bfbda .Offset ,0);_fdbea .writeString (_caegg );};};_eeaee =_eefge +1;};_babfcd :=_fee .MakeDict ();_babfcd .Set ("\u0049\u006e\u0066\u006f",_fdbea ._agfae );_babfcd .Set ("\u0052\u006f\u006f\u0074",_fdbea ._bcbd );_babfcd .Set ("\u0053\u0069\u007a\u0065",_fee .MakeInteger (int64 (_ebgfd +1)));if _fdbea ._ccadg &&_fdbea ._acgc > 0{_babfcd .Set ("\u0050\u0072\u0065\u0076",_fee .MakeInteger (_fdbea ._acgc ));};if _fdbea ._dgfbg !=nil {_babfcd .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_fdbea ._ffcce );_babfcd .Set ("\u0049\u0044",_fdbea ._gdgcb );_adc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_fdbea ._gdgcb );};_fdbea .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_fdbea .writeString (_babfcd .WriteString ());_fdbea .writeString ("\u000a");};_fadcd :=_ba .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ebdf );_fdbea .writeString (_fadcd );_fdbea .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _fdbea ._gecff ==nil {_fdbea ._gecff =_fdbea ._gcace .Flush ();};return _fdbea ._gecff ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_ceafd *Outline )ToPdfObject ()_fee .PdfObject {return _ceafd .ToPdfOutline ().ToPdfObject ()};

// ToPdfObject implements interface PdfModel.
func (_gcca *PdfAnnotationStamp )ToPdfObject ()_fee .PdfObject {_gcca .PdfAnnotation .ToPdfObject ();_dcb :=_gcca ._gdc ;_baf :=_dcb .PdfObject .(*_fee .PdfObjectDictionary );_gcca .PdfAnnotationMarkup .appendToPdfDictionary (_baf );_baf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0053\u0074\u0061m\u0070"));_baf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gcca .Name );return _dcb ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetDescent returns the Descent of the font `descriptor`.
func (_ddcee *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _fee .GetNumberAsFloat (_ddcee .Descent );};

// ToPdfObject returns a stream object.
func (_gacbg *XObjectImage )ToPdfObject ()_fee .PdfObject {_agfadg :=_gacbg ._bcaff ;_fffcd :=_agfadg .PdfObjectDictionary ;if _gacbg .Filter !=nil {_fffcd =_gacbg .Filter .MakeStreamDict ();_agfadg .PdfObjectDictionary =_fffcd ;};_fffcd .Set ("\u0054\u0079\u0070\u0065",_fee .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_fffcd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0049\u006d\u0061g\u0065"));_fffcd .Set ("\u0057\u0069\u0064t\u0068",_fee .MakeInteger (*(_gacbg .Width )));_fffcd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fee .MakeInteger (*(_gacbg .Height )));if _gacbg .BitsPerComponent !=nil {_fffcd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fee .MakeInteger (*(_gacbg .BitsPerComponent )));};if _gacbg .ColorSpace !=nil {_fffcd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gacbg .ColorSpace .ToPdfObject ());};_fffcd .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_gacbg .Intent );_fffcd .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_gacbg .ImageMask );_fffcd .SetIfNotNil ("\u004d\u0061\u0073\u006b",_gacbg .Mask );_fffcd .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_gacbg .Decode );_fffcd .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_gacbg .Interpolate );_fffcd .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_gacbg .Alternatives );_fffcd .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_gacbg .SMask );_fffcd .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_gacbg .SMaskInData );_fffcd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gacbg .Matte );_fffcd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gacbg .Name );_fffcd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gacbg .StructParent );_fffcd .SetIfNotNil ("\u0049\u0044",_gacbg .ID );_fffcd .SetIfNotNil ("\u004f\u0050\u0049",_gacbg .OPI );_fffcd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gacbg .Metadata );_fffcd .SetIfNotNil ("\u004f\u0043",_gacbg .OC );_fffcd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fee .MakeInteger (int64 (len (_gacbg .Stream ))));_agfadg .Stream =_gacbg .Stream ;return _agfadg ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_deae *PdfPageResources )GetColorspaceByName (keyName _fee .PdfObjectName )(PdfColorspace ,bool ){_fabeg ,_fdfbg :=_deae .GetColorspaces ();if _fdfbg !=nil {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fdfbg );return nil ,false ;};if _fabeg ==nil {return nil ,false ;};_abag ,_bddad :=_fabeg .Colorspaces [string (keyName )];if !_bddad {return nil ,false ;};return _abag ,true ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_abab *_fee .PdfIndirectObject ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dedc :=&PdfAppender {_bbagc :reader ._acgec ,Reader :reader ,_efeb :reader ._daae ,_eccc :reader ._ebag };_cebc ,_ecf :=_dedc ._bbagc .Seek (0,_be .SeekEnd );if _ecf !=nil {return nil ,_ecf ;};_dedc ._gfda =_cebc ;if _ ,_ecf =_dedc ._bbagc .Seek (0,_be .SeekStart );_ecf !=nil {return nil ,_ecf ;};_dedc ._agaa ,_ecf =NewPdfReader (_dedc ._bbagc );if _ecf !=nil {return nil ,_ecf ;};for _ ,_dfaf :=range _dedc .Reader .GetObjectNums (){if _dedc ._gdd < _dfaf {_dedc ._gdd =_dfaf ;};};_dedc ._bfee =_dedc ._efeb .GetXrefTable ();_dedc ._fagcd =_dedc ._efeb .GetXrefOffset ();_dedc ._aeeb =make (map[_fee .PdfObject ]struct{});for _ ,_fcfa :=range _dedc ._agaa .PageList {_dedc ._facda =append (_dedc ._facda ,_fcfa );};_dedc ._adagd =make (map[_fee .PdfObject ]int64 );_dedc ._edbc =make (map[_fee .PdfObject ]struct{});_dedc ._cbcd =_dedc ._agaa .AcroForm ;_dedc ._eaed =_dedc ._agaa .DSS ;return _dedc ,nil ;};func _eggge ()string {return _adc .Version };

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bagec *PdfWriter )SetPageLabels (pageLabels _fee .PdfObject )error {if pageLabels ==nil {return nil ;};_adc .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_bagec ._cbcgfc .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bagec .addObjects (pageLabels );};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func _afba (_bdfcg *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_bdfcg }};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_gdbcc *PdfAcroForm )GetContainingPdfObject ()_fee .PdfObject {return _gdbcc ._edda };

// L returns the value of the L component of the color.
func (_edbf *PdfColorLab )L ()float64 {return float64 (_edbf [0])};

// AddImageResource adds an image to the XObject resources.
func (_cfgfe *PdfPage )AddImageResource (name _fee .PdfObjectName ,ximg *XObjectImage )error {var _gbgea *_fee .PdfObjectDictionary ;if _cfgfe .Resources .XObject ==nil {_gbgea =_fee .MakeDict ();_cfgfe .Resources .XObject =_gbgea ;}else {var _bfgd bool ;_gbgea ,_bfgd =(_cfgfe .Resources .XObject ).(*_fee .PdfObjectDictionary );if !_bfgd {return _beg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_gbgea .Set (name ,ximg .ToPdfObject ());return nil ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_fee .PdfObjectStream )(*XObjectForm ,error ){_agcdf :=&XObjectForm {};_agcdf ._cdbge =stream ;_dfagg :=*(stream .PdfObjectDictionary );_febdc ,_ceagc :=_fee .NewEncoderFromStream (stream );if _ceagc !=nil {return nil ,_ceagc ;};_agcdf .Filter =_febdc ;if _gaaga :=_dfagg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gaaga !=nil {_aefgd ,_dgcae :=_gaaga .(*_fee .PdfObjectName );if !_dgcae {return nil ,_beg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_aefgd !="\u0046\u006f\u0072\u006d"{_adc .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_beg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _ddfbg :=_dfagg .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_ddfbg !=nil {_agcdf .FormType =_ddfbg ;};if _fbdgd :=_dfagg .Get ("\u0042\u0042\u006f\u0078");_fbdgd !=nil {_agcdf .BBox =_fbdgd ;};if _beac :=_dfagg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_beac !=nil {_agcdf .Matrix =_beac ;};if _edffa :=_dfagg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_edffa !=nil {_edffa =_fee .TraceToDirectObject (_edffa );_abbda ,_gebbc :=_edffa .(*_fee .PdfObjectDictionary );if !_gebbc {_adc .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_fee .ErrTypeError ;};_bbdf ,_feeg :=NewPdfPageResourcesFromDict (_abbda );if _feeg !=nil {_adc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_feeg ;};_agcdf .Resources =_bbdf ;_adc .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_agcdf .Resources );};_agcdf .Group =_dfagg .Get ("\u0047\u0072\u006fu\u0070");_agcdf .Ref =_dfagg .Get ("\u0052\u0065\u0066");_agcdf .MetaData =_dfagg .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_agcdf .PieceInfo =_dfagg .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_agcdf .LastModified =_dfagg .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_agcdf .StructParent =_dfagg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_agcdf .StructParents =_dfagg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_agcdf .OPI =_dfagg .Get ("\u004f\u0050\u0049");_agcdf .OC =_dfagg .Get ("\u004f\u0043");_agcdf .Name =_dfagg .Get ("\u004e\u0061\u006d\u0065");_agcdf .Stream =stream .Stream ;return _agcdf ,nil ;};func (_dgbf *PdfAppender )addNewObject (_dgge _fee .PdfObject ){if _ ,_dacb :=_dgbf ._aeeb [_dgge ];!_dacb {_dgbf ._fbbfd =append (_dgbf ._fbbfd ,_dgge );_dgbf ._aeeb [_dgge ]=struct{}{};};};func (_cecb *PdfReader )newPdfAnnotationStrikeOut (_dgce *_fee .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_bfba :=PdfAnnotationStrikeOut {};_afbc ,_bcda :=_cecb .newPdfAnnotationMarkupFromDict (_dgce );if _bcda !=nil {return nil ,_bcda ;};_bfba .PdfAnnotationMarkup =_afbc ;_bfba .QuadPoints =_dgce .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bfba ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_efgec =title };func _eefe (_dgbe _fee .PdfObject )(*PdfColorspaceICCBased ,error ){_bcdaf :=&PdfColorspaceICCBased {};if _ddeg ,_ffc :=_dgbe .(*_fee .PdfIndirectObject );_ffc {_bcdaf ._cade =_ddeg ;};_dgbe =_fee .TraceToDirectObject (_dgbe );_bafaf ,_cdcc :=_dgbe .(*_fee .PdfObjectArray );if !_cdcc {return nil ,_ba .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bafaf .Len ()!=2{return nil ,_ba .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_dgbe =_fee .TraceToDirectObject (_bafaf .Get (0));_febe ,_cdcc :=_dgbe .(*_fee .PdfObjectName );if !_cdcc {return nil ,_ba .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_febe !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_ba .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_dgbe =_bafaf .Get (1);_bfbde ,_cdcc :=_fee .GetStream (_dgbe );if !_cdcc {_adc .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_dgbe );return nil ,_ba .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_faba :=_bfbde .PdfObjectDictionary ;_geae ,_cdcc :=_faba .Get ("\u004e").(*_fee .PdfObjectInteger );if !_cdcc {return nil ,_ba .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_geae !=1&&*_geae !=3&&*_geae !=4{return nil ,_ba .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_bcdaf .N =int (*_geae );if _dadae :=_faba .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dadae !=nil {_febga ,_eeeca :=NewPdfColorspaceFromPdfObject (_dadae );if _eeeca !=nil {return nil ,_eeeca ;};_bcdaf .Alternate =_febga ;};if _bdcb :=_faba .Get ("\u0052\u0061\u006eg\u0065");_bdcb !=nil {_bdcb =_fee .TraceToDirectObject (_bdcb );_gacf ,_ebef :=_bdcb .(*_fee .PdfObjectArray );if !_ebef {return nil ,_ba .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _gacf .Len ()!=2*_bcdaf .N {return nil ,_ba .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_dccb ,_ecgc :=_gacf .GetAsFloat64Slice ();if _ecgc !=nil {return nil ,_ecgc ;};_bcdaf .Range =_dccb ;}else {_bcdaf .Range =make ([]float64 ,2*_bcdaf .N );for _fbda :=0;_fbda < _bcdaf .N ;_fbda ++{_bcdaf .Range [2*_fbda ]=0.0;_bcdaf .Range [2*_fbda +1]=1.0;};};if _abeb :=_faba .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_abeb !=nil {_ecff ,_ceeb :=_abeb .(*_fee .PdfObjectStream );if !_ceeb {return nil ,_ba .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_bcdaf .Metadata =_ecff ;};_afcbf ,_gdfd :=_fee .DecodeStream (_bfbde );if _gdfd !=nil {return nil ,_gdfd ;};_bcdaf .Data =_afcbf ;_bcdaf ._aega =_bfbde ;return _bcdaf ,nil ;};var _gagde ="";func _acacbc ()string {_bffdc :=_fb .GetLicenseKey ();if len (_fbaf )> 0&&(_bffdc .IsLicensed ()||_gecba ){return _fbaf ;};return _ba .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_eggge (),_bffdc .TypeToString ());};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_bcbagc :=&PdfOutlineItem {_cgdg :_fee .MakeIndirectObject (_fee .MakeDict ())};_bcbagc ._dbcdc =_bcbagc ;return _bcbagc ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attemps to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_bcceca *LTV )EnableAll (extraCerts []*_d .Certificate )error {_cgcgf :=_bcceca ._eded ._agaa .AcroForm ;for _ ,_aebba :=range _cgcgf .AllFields (){_dbccg ,_ :=_aebba .GetContext ().(*PdfFieldSignature );if _dbccg ==nil {continue ;};_gfdd :=_dbccg .V ;if _cfed :=_bcceca .validateSig (_gfdd );_cfed !=nil {_adc .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cfed );};if _gedgb :=_bcceca .Enable (_gfdd ,extraCerts );_gedgb !=nil {return _gedgb ;};};return nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_aecb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_aecb .Base .GetNumComponents ();if N < 1{return Image {},_ba .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_gfad :=_ffg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._babdc ,img ._gbaa );_ccca :=_ef .NewReader (img .getBase ());_gdfdf :=_ef .NewWriter (_gfad );var (_ffbab uint32 ;_bcfdg int ;_cdca error ;);for {_ffbab ,_cdca =_ccca .ReadSample ();if _cdca ==_be .EOF {break ;}else if _cdca !=nil {return img ,_cdca ;};_bcfdg =int (_ffbab );_adc .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_bcfdg ,N ,len (_aecb ._cddad ));if (_bcfdg +1)*N > len (_aecb ._cddad ){_bcfdg =len (_aecb ._cddad )/N -1;_adc .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_bcfdg );if _bcfdg < 0{_adc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _cdgee :=_bcfdg *N ;_cdgee < (_bcfdg +1)*N ;_cdgee ++{if _cdca =_gdfdf .WriteSample (uint32 (_aecb ._cddad [_cdgee ]));_cdca !=nil {return img ,_cdca ;};};};return _aecb .Base .ImageToRGB (_edabc (&_gfad ));};func (_ddba *pdfCIDFontType0 )baseFields ()*fontCommon {return &_ddba .fontCommon };func (_edca *PdfReader )newPdfActionURIFromDict (_fcb *_fee .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fcb .Get ("\u0055\u0052\u0049"),IsMap :_fcb .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _e .Time ;};func (_aea *PdfReader )newPdfActionNamedFromDict (_gegc *_fee .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gegc .Get ("\u004e")},nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_egef PdfModel ;_aege _fee .PdfObject ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_bfggg *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_egdff :=RC4_128bit ;if options !=nil {_egdff =options .Algorithm ;};_gfecd :=_bfc .PermOwner ;if options !=nil {_gfecd =options .Permissions ;};var _fafaab _dg .Filter ;switch _egdff {case RC4_128bit :_fafaab =_dg .NewFilterV2 (16);case AES_128bit :_fafaab =_dg .NewFilterAESV2 ();case AES_256bit :_fafaab =_dg .NewFilterAESV3 ();default:return _ba .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_dfdda ,_daaeb ,_bgbd :=_fee .PdfCryptNewEncrypt (_fafaab ,userPass ,ownerPass ,_gfecd );if _bgbd !=nil {return _bgbd ;};_bfggg ._dgfbg =_dfdda ;if _daaeb .Major !=0{_bfggg .SetVersion (_daaeb .Major ,_daaeb .Minor );};_bfggg ._faegdb =_daaeb .Encrypt ;_bfggg ._gdgcb =_fee .MakeArray (_fee .MakeHexString (_daaeb .ID0 ),_fee .MakeHexString (_daaeb .ID1 ));_ggabf :=_fee .MakeIndirectObject (_daaeb .Encrypt );_bfggg ._ffcce =_ggabf ;_bfggg .addObject (_ggabf );return nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_eagd *PdfPattern )GetContext ()PdfModel {return _eagd ._egef };

// ToPdfObject implements interface PdfModel.
func (_fcf *PdfAnnotationWatermark )ToPdfObject ()_fee .PdfObject {_fcf .PdfAnnotation .ToPdfObject ();_ece :=_fcf ._gdc ;_ddbb :=_ece .PdfObject .(*_fee .PdfObjectDictionary );_ddbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_ddbb .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fcf .FixedPrint );return _ece ;};func (_efbf *PdfReader )newPdfAnnotationPopupFromDict (_afce *_fee .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_aafa :=PdfAnnotationPopup {};_aafa .Parent =_afce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_aafa .Open =_afce .Get ("\u004f\u0070\u0065\u006e");return &_aafa ,nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_adffad *PdfFont )BytesToCharcodes (data []byte )[]_de .CharCode {_adc .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _cddbe ,_gfggce :=_adffad ._ddaad .(*pdfFontType0 );_gfggce &&_cddbe ._ddddf !=nil {if _cgbgc ,_gbcf :=_cddbe .bytesToCharcodes (data );_gbcf {return _cgbgc ;};};_gfggced :=make ([]_de .CharCode ,0,len (data )+len (data )%2);if _adffad .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _dfaae :=0;_dfaae < len (data );_dfaae +=2{_bddcb :=uint16 (data [_dfaae ])<<8|uint16 (data [_dfaae +1]);_gfggced =append (_gfggced ,_de .CharCode (_bddcb ));};}else {for _ ,_eadcc :=range data {_gfggced =append (_gfggced ,_de .CharCode (_eadcc ));};};return _gfggced ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ddd :=NewPdfAction ();_bed :=&PdfActionTrans {};_bed .PdfAction =_ddd ;_ddd .SetContext (_bed );return _bed ;};func (_cdeg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_cfeg *DSS )generateHashMaps ()error {_bade ,_edad :=_cfeg .generateHashMap (_cfeg .Certs );if _edad !=nil {return _edad ;};_aacf ,_edad :=_cfeg .generateHashMap (_cfeg .OCSPs );if _edad !=nil {return _edad ;};_aebe ,_edad :=_cfeg .generateHashMap (_cfeg .CRLs );if _edad !=nil {return _edad ;};_cfeg ._fbcf =_bade ;_cfeg ._ggdg =_aacf ;_cfeg ._bfagf =_aebe ;return nil ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_adg *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_agec :=&PdfFilespec {};_agec ._acfd =_fee .MakeIndirectObject (_fee .MakeDict ());return _agec ;};func (_geabc *LTV )enable (_bcggd ,_cabc []*_d .Certificate ,_ggaa string )error {_cfgfd ,_feddc ,_ccdeg :=_geabc .buildCertChain (_bcggd ,_cabc );if _ccdeg !=nil {return _ccdeg ;};_afedf ,_ccdeg :=_geabc .getCerts (_cfgfd );if _ccdeg !=nil {return _ccdeg ;};_aeec ,_ccdeg :=_geabc .getOCSPs (_cfgfd ,_feddc );if _ccdeg !=nil {return _ccdeg ;};_dgddb ,_ccdeg :=_geabc .getCRLs (_cfgfd );if _ccdeg !=nil {return _ccdeg ;};_adccf :=_geabc ._becc ;_badea ,_ccdeg :=_adccf .addCerts (_afedf );if _ccdeg !=nil {return _ccdeg ;};_efggf ,_ccdeg :=_adccf .addOCSPs (_aeec );if _ccdeg !=nil {return _ccdeg ;};_bgea ,_ccdeg :=_adccf .addCRLs (_dgddb );if _ccdeg !=nil {return _ccdeg ;};if _ggaa !=""{_adccf .VRI [_ggaa ]=&VRI {Cert :_badea ,OCSP :_efggf ,CRL :_bgea };};_geabc ._eded .SetDSS (_adccf );return nil ;};func (_bfbdede *PdfWriter )writeString (_cebgc string ){if _bfbdede ._gecff !=nil {return ;};_deabcc ,_bffee :=_bfbdede ._gcace .WriteString (_cebgc );_bfbdede ._egdbg +=int64 (_deabcc );_bfbdede ._gecff =_bffee ;};func _fgab (_gcaeag _fee .PdfObject )[]*_fee .PdfObjectStream {if _gcaeag ==nil {return nil ;};_ddgfg ,_affbb :=_fee .GetArray (_gcaeag );if !_affbb ||_ddgfg .Len ()==0{return nil ;};_dfefb :=make ([]*_fee .PdfObjectStream ,0,_ddgfg .Len ());for _ ,_cgfe :=range _ddgfg .Elements (){if _gcbb ,_eebegb :=_fee .GetStream (_cgfe );_eebegb {_dfefb =append (_dfefb ,_gcbb );};};return _dfefb ;};

// GetSubFilter returns SubFilter value or empty string.
func (_bgffb *pdfSignDictionary )GetSubFilter ()string {_gefcb :=_bgffb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _gefcb ==nil {return "";};if _bdaf ,_ebffa :=_fee .GetNameVal (_gefcb );_ebffa {return _bdaf ;};return "";};var ImageHandling ImageHandler =DefaultImageHandler {};

// ToPdfObject implements interface PdfModel.
func (_dbdc *PdfAnnotationMovie )ToPdfObject ()_fee .PdfObject {_dbdc .PdfAnnotation .ToPdfObject ();_gfd :=_dbdc ._gdc ;_adag :=_gfd .PdfObject .(*_fee .PdfObjectDictionary );_adag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u004d\u006f\u0076i\u0065"));_adag .SetIfNotNil ("\u0054",_dbdc .T );_adag .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_dbdc .Movie );_adag .SetIfNotNil ("\u0041",_dbdc .A );return _gfd ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_fgc :=NewPdfAnnotation ();_ega :=&PdfAnnotationPolygon {};_ega .PdfAnnotation =_fgc ;_ega .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgc .SetContext (_ega );return _ega ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _fee .PdfObject ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gbbf *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gbbf .Alternate ==nil {_adc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _gbbf .N ==1{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_dggde :=NewPdfColorspaceDeviceGray ();return _dggde .ColorToRGB (color );}else if _gbbf .N ==3{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _gbbf .N ==4{_adc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_adad :=NewPdfColorspaceDeviceCMYK ();return _adad .ColorToRGB (color );}else {return nil ,_beg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_adc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gbbf );return _gbbf .Alternate .ColorToRGB (color );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_degfe *PdfColorspaceLab )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fab ,_eccfa :=_fee .GetNumbersAsFloat (objects );if _eccfa !=nil {return nil ,_eccfa ;};return _degfe .ColorFromFloats (_fab );};func (_gfbe *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _gfbe ._daae .GetCrypter ()!=nil &&!_gfbe ._daae .IsAuthenticated (){return nil ,_ba .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_gbbae :=_gfbe ._egdgd ;_faace :=_gbbae .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _faace ==nil {return nil ,nil ;};_adc .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_cdeff :=_fee .ResolveReference (_faace );_adc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_cdeff );if _bdgcf :=_fee .IsNullObject (_cdeff );_bdgcf {_adc .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_fabf ,_gdbb :=_cdeff .(*_fee .PdfIndirectObject );if !_gdbb {if _ ,_ddbgb :=_fee .GetDict (_cdeff );!_ddbgb {_adc .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_adc .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_fabf =_fee .MakeIndirectObject (_cdeff );};_bcefe ,_gdbb :=_fabf .PdfObject .(*_fee .PdfObjectDictionary );if !_gdbb {return nil ,_beg .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_adc .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_bcefe );_dcgde ,_ ,_bagga :=_gfbe .buildOutlineTree (_fabf ,nil ,nil ,nil );if _bagga !=nil {return nil ,_bagga ;};_adc .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_dcgde );return _dcgde ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_gfdgf *Image )ToGoImage ()(_cd .Image ,error ){_adc .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_ebbbd ,_cggeg :=_ffg .NewImage (int (_gfdgf .Width ),int (_gfdgf .Height ),int (_gfdgf .BitsPerComponent ),_gfdgf .ColorComponents ,_gfdgf .Data ,_gfdgf ._babdc ,_gfdgf ._gbaa );if _cggeg !=nil {return nil ,_cggeg ;};return _ebbbd ,nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_cdfc *PdfColorspaceLab )DecodeArray ()[]float64 {_cdfd :=[]float64 {0,100};if _cdfc .Range !=nil &&len (_cdfc .Range )==4{_cdfd =append (_cdfd ,_cdfc .Range ...);}else {_cdfd =append (_cdfd ,-100,100,-100,100);};return _cdfd ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_affdd *modelManager )GetPrimitiveFromModel (model PdfModel )_fee .PdfObject {_gdce ,_fegaf :=_affdd ._gcfg [model ];if !_fegaf {return nil ;};return _gdce ;};func _bcdade (_cfbc *_fee .PdfObjectDictionary ,_cbfg *fontCommon ,_bbf _de .TextEncoder )(*pdfFontSimple ,error ){_edadf :=_afba (_cbfg );_edadf ._bbged =_bbf ;if _bbf ==nil {_aebee :=_cfbc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aebee ==nil {_aebee =_fee .MakeInteger (0);};_edadf .FirstChar =_aebee ;_cgada ,_aafb :=_fee .GetIntVal (_aebee );if !_aafb {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aebee );return nil ,_fee .ErrTypeError ;};_ggdgd :=_de .CharCode (_cgada );_aebee =_cfbc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aebee ==nil {_aebee =_fee .MakeInteger (255);};_edadf .LastChar =_aebee ;_cgada ,_aafb =_fee .GetIntVal (_aebee );if !_aafb {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aebee );return nil ,_fee .ErrTypeError ;};_bafda :=_de .CharCode (_cgada );_edadf ._bdff =make (map[_de .CharCode ]float64 );_aebee =_cfbc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aebee !=nil {_edadf .Widths =_aebee ;_eafe ,_ecced :=_fee .GetArray (_aebee );if !_ecced {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aebee );return nil ,_fee .ErrTypeError ;};_ceba ,_ffed :=_eafe .ToFloat64Array ();if _ffed !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_ffed ;};if len (_ceba )!=int (_bafda -_ggdgd +1){_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bafda -_ggdgd +1,len (_ceba ));return nil ,_fee .ErrRangeError ;};for _ceeab ,_gddd :=range _ceba {_edadf ._bdff [_ggdgd +_de .CharCode (_ceeab )]=_gddd ;};};};_edadf .Encoding =_fee .TraceToDirectObject (_cfbc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _edadf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eaag *PdfActionResetForm )ToPdfObject ()_fee .PdfObject {_eaag .PdfAction .ToPdfObject ();_cgd :=_eaag ._fg ;_edf :=_cgd .PdfObject .(*_fee .PdfObjectDictionary );_edf .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeResetForm )));_edf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_eaag .Fields );_edf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_eaag .Flags );return _cgd ;};func (_efedd *PdfReader )newPdfFieldFromIndirectObject (_caga *_fee .PdfIndirectObject ,_egbg *PdfField )(*PdfField ,error ){if _bcbf ,_cegfc :=_efedd ._abgg .GetModelFromPrimitive (_caga ).(*PdfField );_cegfc {return _bcbf ,nil ;};_aacfc ,_faag :=_fee .GetDict (_caga );if !_faag {return nil ,_ba .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gfggc :=NewPdfField ();_gfggc ._bdcdc =_caga ;_gfggc ._bdcdc .PdfObject =_aacfc ;if _ccdfb ,_gbdadd :=_fee .GetName (_aacfc .Get ("\u0046\u0054"));_gbdadd {_gfggc .FT =_ccdfb ;};if _egbg !=nil {_gfggc .Parent =_egbg ;};_gfggc .T ,_ =_aacfc .Get ("\u0054").(*_fee .PdfObjectString );_gfggc .TU ,_ =_aacfc .Get ("\u0054\u0055").(*_fee .PdfObjectString );_gfggc .TM ,_ =_aacfc .Get ("\u0054\u004d").(*_fee .PdfObjectString );_gfggc .Ff ,_ =_aacfc .Get ("\u0046\u0066").(*_fee .PdfObjectInteger );_gfggc .V =_aacfc .Get ("\u0056");_gfggc .DV =_aacfc .Get ("\u0044\u0056");_gfggc .AA =_aacfc .Get ("\u0041\u0041");_fdcg :=_gfggc .FT ;if _fdcg ==nil &&_egbg !=nil {_fdcg =_egbg .FT ;};if _fdcg !=nil {switch *_fdcg {case "\u0054\u0078":_abbae ,_gegaf :=_bcec (_aacfc );if _gegaf !=nil {return nil ,_gegaf ;};_abbae .PdfField =_gfggc ;_gfggc ._defg =_abbae ;case "\u0043\u0068":_cecbf ,_afaee :=_adbc (_aacfc );if _afaee !=nil {return nil ,_afaee ;};_cecbf .PdfField =_gfggc ;_gfggc ._defg =_cecbf ;case "\u0042\u0074\u006e":_fddaf ,_ggdec :=_eadb (_aacfc );if _ggdec !=nil {return nil ,_ggdec ;};_fddaf .PdfField =_gfggc ;_gfggc ._defg =_fddaf ;case "\u0053\u0069\u0067":_cebcac ,_ecea :=_efedd .newPdfFieldSignatureFromDict (_aacfc );if _ecea !=nil {return nil ,_ecea ;};_cebcac .PdfField =_gfggc ;_gfggc ._defg =_cebcac ;default:_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gfggc .FT );return nil ,_beg .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _dabgb ,_fgbc :=_fee .GetName (_aacfc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_fgbc {if *_dabgb =="\u0057\u0069\u0064\u0067\u0065\u0074"{_ggff ,_gfgd :=_efedd .newPdfAnnotationFromIndirectObject (_caga );if _gfgd !=nil {return nil ,_gfgd ;};_afea ,_ccfc :=_ggff .GetContext ().(*PdfAnnotationWidget );if !_ccfc {return nil ,_beg .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_afea ._agg =_gfggc ;_afea .Parent =_gfggc ._bdcdc ;_gfggc .Annotations =append (_gfggc .Annotations ,_afea );return _gfggc ,nil ;};};_ddca :=true ;if _caaa ,_dgaea :=_fee .GetArray (_aacfc .Get ("\u004b\u0069\u0064\u0073"));_dgaea {_gffg :=make ([]*_fee .PdfIndirectObject ,0,_caaa .Len ());for _ ,_dcdd :=range _caaa .Elements (){_bgcbdf ,_aeebc :=_fee .GetIndirect (_dcdd );if !_aeebc {_abafb ,_bdabg :=_fee .GetStream (_dcdd );if _bdabg &&_abafb .PdfObjectDictionary !=nil {_eabfc ,_afaga :=_fee .GetNameVal (_abafb .Get ("\u0054\u0079\u0070\u0065"));if _afaga &&_eabfc =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_adc .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_beg .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_ceeg ,_cbeb :=_fee .GetDict (_bgcbdf );if !_cbeb {return nil ,ErrTypeCheck ;};if _ddca {_ddca =!_gebfc (_ceeg );};_gffg =append (_gffg ,_bgcbdf );};for _ ,_bcega :=range _gffg {if _ddca {_cbcg ,_bfef :=_efedd .newPdfAnnotationFromIndirectObject (_bcega );if _bfef !=nil {_adc .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bfef );return nil ,_bfef ;};_dfef ,_gfccd :=_cbcg ._gbfd .(*PdfAnnotationWidget );if !_gfccd {return nil ,ErrTypeCheck ;};_dfef ._agg =_gfggc ;_gfggc .Annotations =append (_gfggc .Annotations ,_dfef );}else {_ddcd ,_fade :=_efedd .newPdfFieldFromIndirectObject (_bcega ,_gfggc );if _fade !=nil {_adc .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_fade );return nil ,_fade ;};_gfggc .Kids =append (_gfggc .Kids ,_ddcd );};};};return _gfggc ,nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_cdgeeef :=&PdfSignature {Type :_fee .MakeName ("\u0053\u0069\u0067"),Handler :handler };_efgcc :=&pdfSignDictionary {PdfObjectDictionary :_fee .MakeDict (),_fcbf :&handler ,_ecceb :_cdgeeef };_cdgeeef ._fcfage =_fee .MakeIndirectObject (_efgcc );return _cdgeeef ;};

// GetBorderWidth returns the border style's width.
func (_febd *PdfBorderStyle )GetBorderWidth ()float64 {if _febd .W ==nil {return 1;};return *_febd .W ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ceac *PdfAnnotation )GetContainingPdfObject ()_fee .PdfObject {return _ceac ._gdc };func (_bfed *PdfReader )newPdfAnnotationProjectionFromDict (_bcddc *_fee .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_fagg :=&PdfAnnotationProjection {};_fgga ,_debf :=_bfed .newPdfAnnotationMarkupFromDict (_bcddc );if _debf !=nil {return nil ,_debf ;};_fagg .PdfAnnotationMarkup =_fgga ;return _fagg ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ggbcc *PdfPageResourcesColorspaces )ToPdfObject ()_fee .PdfObject {_babfc :=_fee .MakeDict ();for _ ,_eefd :=range _ggbcc .Names {_babfc .Set (_fee .PdfObjectName (_eefd ),_ggbcc .Colorspaces [_eefd ].ToPdfObject ());};if _ggbcc ._gaegd !=nil {_ggbcc ._gaegd .PdfObject =_babfc ;return _ggbcc ._gaegd ;};return _babfc ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_gbabc =subject };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_fbfbb *XObjectImage )ToImage ()(*Image ,error ){_abffe :=&Image {};if _fbfbb .Height ==nil {return nil ,_beg .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_abffe .Height =*_fbfbb .Height ;if _fbfbb .Width ==nil {return nil ,_beg .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_abffe .Width =*_fbfbb .Width ;if _fbfbb .BitsPerComponent ==nil {return nil ,_beg .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_abffe .BitsPerComponent =*_fbfbb .BitsPerComponent ;_abffe .ColorComponents =_fbfbb .ColorSpace .GetNumComponents ();_fbfbb ._bcaff .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fee .MakeInteger (int64 (_abffe .ColorComponents )));_ceefd ,_bfaed :=_fee .DecodeStream (_fbfbb ._bcaff );if _bfaed !=nil {return nil ,_bfaed ;};_abffe .Data =_ceefd ;if _fbfbb .Decode !=nil {_dddag ,_bfcdf :=_fbfbb .Decode .(*_fee .PdfObjectArray );if !_bfcdf {_adc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_beg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bedbf ,_fegee :=_dddag .ToFloat64Array ();if _fegee !=nil {return nil ,_fegee ;};_abffe ._gbaa =_bedbf ;};return _abffe ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_eedb *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acgg :=vals [0];if _acgg < 0.0||_acgg > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddgg :=vals [1];if _ddgg < 0.0||_ddgg > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bggc :=vals [2];if _bggc < 0.0||_bggc > 1.0{return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbe :=NewPdfColorCalRGB (_acgg ,_ddgg ,_bggc );return _dbe ,nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_fecd *PdfAppender )UpdateObject (obj _fee .PdfObject ){_fecd .replaceObject (obj ,obj );if _ ,_eebc :=_fecd ._aeeb [obj ];!_eebc {_fecd ._fbbfd =append (_fecd ._fbbfd ,obj );_fecd ._aeeb [obj ]=struct{}{};};};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_ccefc *PdfPage )error ;};func _eacdc (_eegba *PdfPage ){_aabf :=_fb .GetLicenseKey ();if _aabf !=nil &&_aabf .IsLicensed (){return ;};_dgabd :=_fee .PdfObjectName ("\u0055\u0046\u0031");if !_eegba .Resources .HasFontByName (_dgabd ){_eegba .Resources .SetFontByName (_dgabd ,DefaultFont ().ToPdfObject ());};var _bfbded []string ;_bfbded =append (_bfbded ,"\u0071");_bfbded =append (_bfbded ,"\u0042\u0054");_bfbded =append (_bfbded ,_ba .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_dgabd .String ()));_bfbded =append (_bfbded ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_bfbded =append (_bfbded ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_aaadc :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_bfbded =append (_bfbded ,_ba .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_aaadc ));_bfbded =append (_bfbded ,"\u0045\u0054");_bfbded =append (_bfbded ,"\u0051");_bgbba :=_ebc .Join (_bfbded ,"\u000a");_eegba .AddContentStreamByString (_bgbba );_eegba .ToPdfObject ();};func _bccga (_bedfb _fee .PdfObject ,_gedcb bool )(*PdfFont ,error ){_dgcc ,_cbddd ,_afggb :=_aecd (_bedfb );if _afggb !=nil {if _afggb ==ErrType3FontNotSupported ||_afggb ==ErrType1CFontNotSupported {_cabd ,_aedcc :=_bcdade (_dgcc ,_cbddd ,nil );if _aedcc !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cbddd ,_aedcc );return nil ,_afggb ;};return &PdfFont {_ddaad :_cabd },_afggb ;};return nil ,_afggb ;};_geadb :=&PdfFont {};switch _cbddd ._agbcd {case "\u0054\u0079\u0070e\u0030":if !_gedcb {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cbddd );return nil ,_beg .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_bcdde ,_gaeg :=_gbbe (_dgcc ,_cbddd );if _gaeg !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbddd ,_gaeg );return nil ,_gaeg ;};_geadb ._ddaad =_bcdde ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _dbab *pdfFontSimple ;_eagc ,_fcfca :=_cg .NewStdFontByName (_cg .StdFontName (_cbddd ._fagfdc ));if _fcfca {_bdgf :=_fbcd (_eagc );_geadb ._ddaad =&_bdgf ;_fbebd :=_fee .TraceToDirectObject (_bdgf .ToPdfObject ());_acggf ,_dbga ,_eeed :=_aecd (_fbebd );if _eeed !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cbddd ,_bdgf );return nil ,_eeed ;};for _ ,_ffeba :=range _dgcc .Keys (){_acggf .Set (_ffeba ,_dgcc .Get (_ffeba ));};_dbab ,_eeed =_bcdade (_acggf ,_dbga ,_bdgf ._bbged );if _eeed !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_cbddd ,_bdgf );return nil ,_eeed ;};_dbab ._bdff =_bdgf ._bdff ;_dbab ._dgfgf =_bdgf ._dgfgf ;}else {_dbab ,_afggb =_bcdade (_dgcc ,_cbddd ,nil );if _afggb !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_cbddd ,_afggb );return nil ,_afggb ;};};_afggb =_dbab .addEncoding ();if _afggb !=nil {return nil ,_afggb ;};if _fcfca {_dbab .updateStandard14Font ();};if _fcfca &&_dbab ._agcc ==nil &&_dbab ._bbged ==nil {_adc .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dbab );_adc .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_eagc );};if len (_dbab ._bdff )==0{_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_dbab );};_geadb ._ddaad =_dbab ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ecag ,_cacg :=_ggeeac (_dgcc ,_cbddd );if _cacg !=nil {_adc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_cacg );return nil ,_cacg ;};_geadb ._ddaad =_ecag ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dbbe ,_bage :=_ceeba (_dgcc ,_cbddd );if _bage !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbddd ,_bage );return nil ,_bage ;};_geadb ._ddaad =_dbbe ;default:_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_cbddd );return nil ,_ba .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cbddd );};return _geadb ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );func (_eecc *pdfFontSimple )baseFields ()*fontCommon {return &_eecc .fontCommon };var _ pdfFont =(*pdfCIDFontType2 )(nil );

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _be .ReadSeeker )(*PdfFont ,error ){const _cfdfa =_de .CharCode (32);const _fbfa =_de .CharCode (255);_gfgaa ,_fbeba :=_bd .ReadAll (r );if _fbeba !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fbeba );return nil ,_fbeba ;};_cfab ,_fbeba :=_cg .TtfParse (_ed .NewReader (_gfgaa ));if _fbeba !=nil {_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_fbeba );return nil ,_fbeba ;};_bece :=&pdfFontSimple {_bdff :make (map[_de .CharCode ]float64 ),fontCommon :fontCommon {_agbcd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bece ._agcc =_de .NewWinAnsiEncoder ();_bece ._fagfdc =_cfab .PostScriptName ;_bece .FirstChar =_fee .MakeInteger (int64 (_cfdfa ));_bece .LastChar =_fee .MakeInteger (int64 (_fbfa ));_decb :=1000.0/float64 (_cfab .UnitsPerEm );if len (_cfab .Widths )<=0{return nil ,_beg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_dbdcg :=_decb *float64 (_cfab .Widths [0]);_bfeeg :=make ([]float64 ,0,_fbfa -_cfdfa +1);for _fgdgb :=_cfdfa ;_fgdgb <=_fbfa ;_fgdgb ++{_bfge ,_dace :=_bece .Encoder ().CharcodeToRune (_fgdgb );if !_dace {_adc .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_fgdgb );_bfeeg =append (_bfeeg ,_dbdcg );continue ;};_gddb ,_dfbd :=_cfab .Chars [_bfge ];if !_dfbd {_adc .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_bfeeg =append (_bfeeg ,_dbdcg );continue ;};_efedf :=_decb *float64 (_cfab .Widths [_gddb ]);_bfeeg =append (_bfeeg ,_efedf );};_bece .Widths =_fee .MakeIndirectObject (_fee .MakeArrayFromFloats (_bfeeg ));if len (_bfeeg )< int (_fbfa -_cfdfa +1){_adc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_bfeeg ),255-32+1);return nil ,_fee .ErrRangeError ;};for _ddbf :=_de .CharCode (_cfdfa );_ddbf <=_fbfa ;_ddbf ++{_bece ._bdff [_ddbf ]=_bfeeg [_ddbf -_cfdfa ];};_bece .Encoding =_fee .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_ddgc :=&PdfFontDescriptor {};_ddgc .FontName =_fee .MakeName (_cfab .PostScriptName );_ddgc .Ascent =_fee .MakeFloat (_decb *float64 (_cfab .TypoAscender ));_ddgc .Descent =_fee .MakeFloat (_decb *float64 (_cfab .TypoDescender ));_ddgc .CapHeight =_fee .MakeFloat (_decb *float64 (_cfab .CapHeight ));_ddgc .FontBBox =_fee .MakeArrayFromFloats ([]float64 {_decb *float64 (_cfab .Xmin ),_decb *float64 (_cfab .Ymin ),_decb *float64 (_cfab .Xmax ),_decb *float64 (_cfab .Ymax )});_ddgc .ItalicAngle =_fee .MakeFloat (float64 (_cfab .ItalicAngle ));_ddgc .MissingWidth =_fee .MakeFloat (_decb *float64 (_cfab .Widths [0]));_debdg ,_fbeba :=_fee .MakeStream (_gfgaa ,_fee .NewFlateEncoder ());if _fbeba !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fbeba );return nil ,_fbeba ;};_debdg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fee .MakeInteger (int64 (len (_gfgaa ))));_ddgc .FontFile2 =_debdg ;if _cfab .Bold {_ddgc .StemV =_fee .MakeInteger (120);}else {_ddgc .StemV =_fee .MakeInteger (70);};_dffe :=_fdegg ;if _cfab .IsFixedPitch {_dffe |=_gffe ;};if _cfab .ItalicAngle !=0{_dffe |=_cggf ;};_ddgc .Flags =_fee .MakeInteger (int64 (_dffe ));_bece ._dedcg =_ddgc ;_cbcc :=&PdfFont {_ddaad :_bece };return _cbcc ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_eee PdfModel ;Type _fee .PdfObject ;S _fee .PdfObject ;Next _fee .PdfObject ;_fg *_fee .PdfIndirectObject ;};type modelManager struct{_gcfg map[PdfModel ]_fee .PdfObject ;_dgfdf map[_fee .PdfObject ]PdfModel ;};func (_bfcg *PdfReader )newPdfAnnotationSoundFromDict (_ceg *_fee .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_befa :=PdfAnnotationSound {};_dcdf ,_defc :=_bfcg .newPdfAnnotationMarkupFromDict (_ceg );if _defc !=nil {return nil ,_defc ;};_befa .PdfAnnotationMarkup =_dcdf ;_befa .Name =_ceg .Get ("\u004e\u0061\u006d\u0065");_befa .Sound =_ceg .Get ("\u0053\u006f\u0075n\u0064");return &_befa ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_deec *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_ddef *PdfReader )newPdfActionSoundFromDict (_gfe *_fee .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_gfe .Get ("\u0053\u006f\u0075n\u0064"),Volume :_gfe .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_gfe .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_gfe .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_gfe .Get ("\u004d\u0069\u0078")},nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eaada *PdfShadingType4 )ToPdfObject ()_fee .PdfObject {_eaada .PdfShading .ToPdfObject ();_dcbc ,_adccc :=_eaada .getShadingDict ();if _adccc !=nil {_adc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _eaada .BitsPerCoordinate !=nil {_dcbc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_eaada .BitsPerCoordinate );};if _eaada .BitsPerComponent !=nil {_dcbc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eaada .BitsPerComponent );};if _eaada .BitsPerFlag !=nil {_dcbc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_eaada .BitsPerFlag );};if _eaada .Decode !=nil {_dcbc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eaada .Decode );};if _eaada .Function !=nil {if len (_eaada .Function )==1{_dcbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eaada .Function [0].ToPdfObject ());}else {_gffea :=_fee .MakeArray ();for _ ,_afggbb :=range _eaada .Function {_gffea .Append (_afggbb .ToPdfObject ());};_dcbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gffea );};};return _eaada ._gbadg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gbeb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_fee .PdfObject )(PdfColor ,error ){if _gbeb .Alternate ==nil {if _gbeb .N ==1{_geaff :=NewPdfColorspaceDeviceGray ();return _geaff .ColorFromPdfObjects (objects );}else if _gbeb .N ==3{_fgcc :=NewPdfColorspaceDeviceRGB ();return _fgcc .ColorFromPdfObjects (objects );}else if _gbeb .N ==4{_aaedg :=NewPdfColorspaceDeviceCMYK ();return _aaedg .ColorFromPdfObjects (objects );}else {return nil ,_beg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _gbeb .Alternate .ColorFromPdfObjects (objects );};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_cfag *PdfFieldButton )SetType (btype ButtonType ){_gecfa :=uint32 (0);if _cfag .Ff !=nil {_gecfa =uint32 (*_cfag .Ff );};switch btype {case ButtonTypePush :_gecfa |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_gecfa |=FieldFlagRadio .Mask ();};_cfag .Ff =_fee .MakeInteger (int64 (_gecfa ));};func _dbac (_afffg _fee .PdfObject )(*PdfPageResourcesColorspaces ,error ){_abfae :=&PdfPageResourcesColorspaces {};if _bfeeb ,_cbgdf :=_afffg .(*_fee .PdfIndirectObject );_cbgdf {_abfae ._gaegd =_bfeeb ;_afffg =_bfeeb .PdfObject ;};_cecbgb ,_gcdbd :=_fee .GetDict (_afffg );if !_gcdbd {return nil ,_beg .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_abfae .Names =[]string {};_abfae .Colorspaces =map[string ]PdfColorspace {};for _ ,_dbeb :=range _cecbgb .Keys (){_cfeca :=_cecbgb .Get (_dbeb );_abfae .Names =append (_abfae .Names ,string (_dbeb ));_abedd ,_adage :=NewPdfColorspaceFromPdfObject (_cfeca );if _adage !=nil {return nil ,_adage ;};_abfae .Colorspaces [string (_dbeb )]=_abedd ;};return _abfae ,nil ;};

// M returns the value of the magenta component of the color.
func (_egad *PdfColorDeviceCMYK )M ()float64 {return float64 (_egad [1])};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_debg :=NewPdfAnnotation ();_bfbb :=&PdfAnnotationInk {};_bfbb .PdfAnnotation =_debg ;_bfbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_debg .SetContext (_bfbb );return _bfbb ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_deaa *PdfFont )SubsetRegistered ()error {switch _cfge :=_deaa ._ddaad .(type ){case *pdfFontType0 :_daac :=_cfge .subsetRegistered ();if _daac !=nil {_adc .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_daac );return _daac ;};if _cfge ._fceff !=nil {if _cfge ._daad !=nil {_cfge ._daad .ToPdfObject ();};_cfge .ToPdfObject ();};default:_adc .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_cfge );};return nil ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// ToPdfObject implements interface PdfModel.
func (_cedd *PdfAnnotationPolygon )ToPdfObject ()_fee .PdfObject {_cedd .PdfAnnotation .ToPdfObject ();_bfd :=_cedd ._gdc ;_ada :=_bfd .PdfObject .(*_fee .PdfObjectDictionary );_cedd .PdfAnnotationMarkup .appendToPdfDictionary (_ada );_ada .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_ada .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cedd .Vertices );_ada .SetIfNotNil ("\u004c\u0045",_cedd .LE );_ada .SetIfNotNil ("\u0042\u0053",_cedd .BS );_ada .SetIfNotNil ("\u0049\u0043",_cedd .IC );_ada .SetIfNotNil ("\u0042\u0045",_cedd .BE );_ada .SetIfNotNil ("\u0049\u0054",_cedd .IT );_ada .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cedd .Measure );return _bfd ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_gbga *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// GetNumComponents returns the number of color components.
func (_bdedc *PdfColorspaceICCBased )GetNumComponents ()int {return _bdedc .N };

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_cgae PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_fee .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_caae []_fee .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_gagd []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_fee .PdfObjectStream ;Data []byte ;_cade *_fee .PdfIndirectObject ;_aega *_fee .PdfObjectStream ;};

// AddFont adds a font dictionary to the Font resources.
func (_ddfa *PdfPage )AddFont (name _fee .PdfObjectName ,font _fee .PdfObject )error {if _ddfa .Resources ==nil {_ddfa .Resources =NewPdfPageResources ();};if _ddfa .Resources .Font ==nil {_ddfa .Resources .Font =_fee .MakeDict ();};_daega ,_abdee :=_fee .TraceToDirectObject (_ddfa .Resources .Font ).(*_fee .PdfObjectDictionary );if !_abdee {_adc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_fee .TraceToDirectObject (_ddfa .Resources .Font ));return _beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_daega .Set (name ,font );return nil ;};func (_gffaad *LTV )buildCertChain (_cccfc ,_bgee []*_d .Certificate )([]*_d .Certificate ,map[string ]*_d .Certificate ,error ){_bffd :=map[string ]*_d .Certificate {};for _ ,_addf :=range _cccfc {_bffd [_addf .Subject .CommonName ]=_addf ;};_fgdge :=_cccfc ;for _ ,_bbfb :=range _bgee {_ggdd :=_bbfb .Subject .CommonName ;if _ ,_bbgb :=_bffd [_ggdd ];_bbgb {continue ;};_bffd [_ggdd ]=_bbfb ;_fgdge =append (_fgdge ,_bbfb );};if len (_fgdge )==0{return nil ,nil ,ErrSignNoCertificates ;};var _becd error ;for _adfde :=_fgdge [0];_adfde !=nil &&!_gffaad ._fgegg .IsCA (_adfde );{_dedd ,_dcaa :=_bffd [_adfde .Issuer .CommonName ];if !_dcaa {if _dedd ,_becd =_gffaad ._fgegg .GetIssuer (_adfde );_becd !=nil {_adc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_becd );break ;};_bffd [_adfde .Issuer .CommonName ]=_dedd ;_fgdge =append (_fgdge ,_dedd );};_adfde =_dedd ;};return _fgdge ,_bffd ,nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_dfbg *PdfPage )GetContentStreamObjs ()[]_fee .PdfObject {if _dfbg .Contents ==nil {return nil ;};_edbb :=_fee .TraceToDirectObject (_dfbg .Contents );if _bggec ,_ccdegg :=_edbb .(*_fee .PdfObjectArray );_ccdegg {return _bggec .Elements ();};return []_fee .PdfObject {_edbb };};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_gfcc FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_gfcc .Mask ()|fl .Mask ())};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_eeefe *PdfPage )AddContentStreamByString (contentStr string )error {_fdbef ,_ecfce :=_fee .MakeStream ([]byte (contentStr ),_fee .NewFlateEncoder ());if _ecfce !=nil {return _ecfce ;};if _eeefe .Contents ==nil {_eeefe .Contents =_fdbef ;}else {_acfb :=_fee .TraceToDirectObject (_eeefe .Contents );_afdd ,_gddeg :=_acfb .(*_fee .PdfObjectArray );if !_gddeg {_afdd =_fee .MakeArray (_acfb );};_afdd .Append (_fdbef );_eeefe .Contents =_afdd ;};return nil ;};func _bcec (_eabb *_fee .PdfObjectDictionary )(*PdfFieldText ,error ){_afeaa :=&PdfFieldText {};_afeaa .DA ,_ =_fee .GetString (_eabb .Get ("\u0044\u0041"));_afeaa .Q ,_ =_fee .GetInt (_eabb .Get ("\u0051"));_afeaa .DS ,_ =_fee .GetString (_eabb .Get ("\u0044\u0053"));_afeaa .RV =_eabb .Get ("\u0052\u0056");_afeaa .MaxLen ,_ =_fee .GetInt (_eabb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _afeaa ,nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _e .Time ){_ebabd =creationDate };

// GetAscent returns the Ascent of the font `descriptor`.
func (_ggab *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _fee .GetNumberAsFloat (_ggab .Ascent );};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_ccdc :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_ba .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_ccdc .N =N ;return _ccdc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcac *PdfAnnotationScreen )ToPdfObject ()_fee .PdfObject {_bcac .PdfAnnotation .ToPdfObject ();_fbdd :=_bcac ._gdc ;_edfb :=_fbdd .PdfObject .(*_fee .PdfObjectDictionary );_edfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_edfb .SetIfNotNil ("\u0054",_bcac .T );_edfb .SetIfNotNil ("\u004d\u004b",_bcac .MK );_edfb .SetIfNotNil ("\u0041",_bcac .A );_edfb .SetIfNotNil ("\u0041\u0041",_bcac .AA );return _fbdd ;};

// GetXObjectByName gets XObject by name.
func (_efebc *PdfPage )GetXObjectByName (name _fee .PdfObjectName )(_fee .PdfObject ,bool ){_ecafa ,_beddd :=_efebc .Resources .XObject .(*_fee .PdfObjectDictionary );if !_beddd {return nil ,false ;};if _edbaa :=_ecafa .Get (name );_edbaa !=nil {return _edbaa ,true ;};return nil ,false ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_cfbd *PdfFieldButton )IsCheckbox ()bool {return _cfbd .GetType ()==ButtonTypeCheckbox };

// ToPdfObject implements interface PdfModel.
func (_gea *PdfActionRendition )ToPdfObject ()_fee .PdfObject {_gea .PdfAction .ToPdfObject ();_df :=_gea ._fg ;_acb :=_df .PdfObject .(*_fee .PdfObjectDictionary );_acb .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeRendition )));_acb .SetIfNotNil ("\u0052",_gea .R );_acb .SetIfNotNil ("\u0041\u004e",_gea .AN );_acb .SetIfNotNil ("\u004f\u0050",_gea .OP );_acb .SetIfNotNil ("\u004a\u0053",_gea .JS );return _df ;};

// ToInteger convert to an integer format.
func (_afda *PdfColorDeviceGray )ToInteger (bits int )uint32 {_eaad :=_eba .Pow (2,float64 (bits ))-1;return uint32 (_eaad *_afda .Val ());};

// ToPdfObject implements interface PdfModel.
func (_fa *PdfActionSound )ToPdfObject ()_fee .PdfObject {_fa .PdfAction .ToPdfObject ();_dce :=_fa ._fg ;_eef :=_dce .PdfObject .(*_fee .PdfObjectDictionary );_eef .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeSound )));_eef .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fa .Sound );_eef .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fa .Volume );_eef .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fa .Synchronous );_eef .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fa .Repeat );_eef .SetIfNotNil ("\u004d\u0069\u0078",_fa .Mix );return _dce ;};func (_gec *PdfReader )newPdfAnnotationPrinterMarkFromDict (_abff *_fee .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_agbc :=PdfAnnotationPrinterMark {};_agbc .MN =_abff .Get ("\u004d\u004e");return &_agbc ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_ddbg *_fee .PdfObjectDictionary ;_dabb *_fee .PdfIndirectObject ;};func _edefc (_eedge _fee .PdfObject )(*PdfColorspaceCalRGB ,error ){_fadfa :=NewPdfColorspaceCalRGB ();if _dddf ,_fadfb :=_eedge .(*_fee .PdfIndirectObject );_fadfb {_fadfa ._dabb =_dddf ;};_eedge =_fee .TraceToDirectObject (_eedge );_fbeb ,_fede :=_eedge .(*_fee .PdfObjectArray );if !_fede {return nil ,_ba .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fbeb .Len ()!=2{return nil ,_ba .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_eedge =_fee .TraceToDirectObject (_fbeb .Get (0));_gdad ,_fede :=_eedge .(*_fee .PdfObjectName );if !_fede {return nil ,_ba .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_gdad !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_ba .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_eedge =_fee .TraceToDirectObject (_fbeb .Get (1));_dfca ,_fede :=_eedge .(*_fee .PdfObjectDictionary );if !_fede {return nil ,_ba .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_eedge =_dfca .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_eedge =_fee .TraceToDirectObject (_eedge );_ebee ,_fede :=_eedge .(*_fee .PdfObjectArray );if !_fede {return nil ,_ba .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _ebee .Len ()!=3{return nil ,_ba .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_fcef ,_cgdc :=_ebee .GetAsFloat64Slice ();if _cgdc !=nil {return nil ,_cgdc ;};_fadfa .WhitePoint =_fcef ;_eedge =_dfca .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _eedge !=nil {_eedge =_fee .TraceToDirectObject (_eedge );_bccea ,_gbdfe :=_eedge .(*_fee .PdfObjectArray );if !_gbdfe {return nil ,_ba .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _bccea .Len ()!=3{return nil ,_ba .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_fgbaa ,_ffef :=_bccea .GetAsFloat64Slice ();if _ffef !=nil {return nil ,_ffef ;};_fadfa .BlackPoint =_fgbaa ;};_eedge =_dfca .Get ("\u0047\u0061\u006dm\u0061");if _eedge !=nil {_eedge =_fee .TraceToDirectObject (_eedge );_add ,_gdcf :=_eedge .(*_fee .PdfObjectArray );if !_gdcf {return nil ,_ba .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _add .Len ()!=3{return nil ,_ba .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_bfcce ,_geec :=_add .GetAsFloat64Slice ();if _geec !=nil {return nil ,_geec ;};_fadfa .Gamma =_bfcce ;};_eedge =_dfca .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _eedge !=nil {_eedge =_fee .TraceToDirectObject (_eedge );_fffe ,_efbe :=_eedge .(*_fee .PdfObjectArray );if !_efbe {return nil ,_ba .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _fffe .Len ()!=9{_adc .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_fffe .String ());return nil ,_ba .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_becbba ,_cecg :=_fffe .GetAsFloat64Slice ();if _cecg !=nil {return nil ,_cecg ;};_fadfa .Matrix =_becbba ;};return _fadfa ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_gbfd PdfModel ;Rect _fee .PdfObject ;Contents _fee .PdfObject ;P _fee .PdfObject ;NM _fee .PdfObject ;M _fee .PdfObject ;F _fee .PdfObject ;AP _fee .PdfObject ;AS _fee .PdfObject ;Border _fee .PdfObject ;C _fee .PdfObject ;StructParent _fee .PdfObject ;OC _fee .PdfObject ;_gdc *_fee .PdfIndirectObject ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fee .PdfObject ;LE _fee .PdfObject ;BS _fee .PdfObject ;IC _fee .PdfObject ;BE _fee .PdfObject ;IT _fee .PdfObject ;Measure _fee .PdfObject ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _be .ReadSeeker )(*PdfFont ,error ){_afcgg ,_bbbbe :=_bd .ReadAll (r );if _bbbbe !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bbbbe );return nil ,_bbbbe ;};_acfdf ,_bbbbe :=_cg .TtfParse (_ed .NewReader (_afcgg ));if _bbbbe !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bbbbe );return nil ,_bbbbe ;};_ecda :=&pdfCIDFontType2 {fontCommon :fontCommon {_agbcd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_fee .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_dbgac :=make ([]rune ,0,len (_acfdf .Chars ));for _fgce :=range _acfdf .Chars {_dbgac =append (_dbgac ,rune (_fgce ));};_dd .Slice (_dbgac ,func (_dbbee ,_gfee int )bool {return _dbgac [_dbbee ]< _dbgac [_gfee ]});_aeab :=1000.0/float64 (_acfdf .UnitsPerEm );if len (_acfdf .Widths )<=0{return nil ,_beg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_fddg :=_aeab *float64 (_acfdf .Widths [0]);_gegd :=make (map[rune ]int );for _ ,_bcbc :=range _dbgac {_afdge :=_acfdf .Chars [_bcbc ];_fbedd :=_aeab *float64 (_acfdf .Widths [_afdge ]);_gegd [_bcbc ]=int (_fbedd );};_ecda ._eefa =_gegd ;_ecda .DW =_fee .MakeInteger (int64 (_fddg ));_dadca :=_feaa (_dbgac ,_gegd ,_acfdf .Chars );_ecda .W =_fee .MakeIndirectObject (_dadca );_gdgc :=_fee .MakeDict ();_gdgc .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_fee .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gdgc .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_fee .MakeString ("\u0041\u0064\u006fb\u0065"));_gdgc .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_fee .MakeInteger (0));_ecda .CIDSystemInfo =_gdgc ;_edgbc :=&PdfFontDescriptor {FontName :_fee .MakeName (_acfdf .PostScriptName ),Ascent :_fee .MakeFloat (_aeab *float64 (_acfdf .TypoAscender )),Descent :_fee .MakeFloat (_aeab *float64 (_acfdf .TypoDescender )),CapHeight :_fee .MakeFloat (_aeab *float64 (_acfdf .CapHeight )),FontBBox :_fee .MakeArrayFromFloats ([]float64 {_aeab *float64 (_acfdf .Xmin ),_aeab *float64 (_acfdf .Ymin ),_aeab *float64 (_acfdf .Xmax ),_aeab *float64 (_acfdf .Ymax )}),ItalicAngle :_fee .MakeFloat (float64 (_acfdf .ItalicAngle )),MissingWidth :_fee .MakeFloat (_aeab *float64 (_acfdf .Widths [0]))};_cgbf ,_bbbbe :=_fee .MakeStream (_afcgg ,_fee .NewFlateEncoder ());if _bbbbe !=nil {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bbbbe );return nil ,_bbbbe ;};_cgbf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fee .MakeInteger (int64 (len (_afcgg ))));_edgbc .FontFile2 =_cgbf ;if _acfdf .Bold {_edgbc .StemV =_fee .MakeInteger (120);}else {_edgbc .StemV =_fee .MakeInteger (70);};_ecfgc :=_efdga ;if _acfdf .IsFixedPitch {_ecfgc |=_gffe ;};if _acfdf .ItalicAngle !=0{_ecfgc |=_cggf ;};_edgbc .Flags =_fee .MakeInteger (int64 (_ecfgc ));_ecda ._fagfdc =_acfdf .PostScriptName ;_ecda ._dedcg =_edgbc ;_edaf :=pdfFontType0 {fontCommon :fontCommon {_agbcd :"\u0054\u0079\u0070e\u0030",_fagfdc :_acfdf .PostScriptName },DescendantFont :&PdfFont {_ddaad :_ecda },Encoding :_fee .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_daad :_acfdf .NewEncoder ()};if len (_acfdf .Chars )> 0{_dcada :=make (map[_afb .CharCode ]rune ,len (_acfdf .Chars ));for _aecgd ,_cecf :=range _acfdf .Chars {_dcffa :=_afb .CharCode (_cecf );if _adfeb ,_cbdad :=_dcada [_dcffa ];!_cbdad ||(_cbdad &&_adfeb > _aecgd ){_dcada [_dcffa ]=_aecgd ;};};_edaf ._edeab =_afb .NewToUnicodeCMap (_dcada );};_abac :=PdfFont {_ddaad :&_edaf };return &_abac ,nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_cagf :=&PdfAnnotation {};_cagf ._gdc =_fee .MakeIndirectObject (_fee .MakeDict ());return _cagf ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_fee .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_faee *_fee .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_dee *PdfActionJavaScript )ToPdfObject ()_fee .PdfObject {_dee .PdfAction .ToPdfObject ();_aef :=_dee ._fg ;_dcce :=_aef .PdfObject .(*_fee .PdfObjectDictionary );_dcce .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeJavaScript )));_dcce .SetIfNotNil ("\u004a\u0053",_dee .JS );return _aef ;};func _gccgf (_dfdcc *_fee .PdfObjectDictionary )(*PdfShadingPattern ,error ){_cdgeee :=&PdfShadingPattern {};_ecbbe :=_dfdcc .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _ecbbe ==nil {_adc .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bbcce ,_faabb :=_bbefd (_ecbbe );if _faabb !=nil {_adc .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_faabb );return nil ,_faabb ;};_cdgeee .Shading =_bbcce ;if _eafa :=_dfdcc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eafa !=nil {_bbcg ,_fcgfe :=_eafa .(*_fee .PdfObjectArray );if !_fcgfe {_adc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eafa );return nil ,_fee .ErrTypeError ;};_cdgeee .Matrix =_bbcg ;};if _cceccc :=_dfdcc .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cceccc !=nil {_cdgeee .ExtGState =_cceccc ;};return _cdgeee ,nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attemps
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_bbaeb *LTV )EnableByName (name string ,extraCerts []*_d .Certificate )error {_bfad :=_bbaeb ._eded ._agaa .AcroForm ;for _ ,_fdgdf :=range _bfad .AllFields (){_bdcc ,_ :=_fdgdf .GetContext ().(*PdfFieldSignature );if _bdcc ==nil {continue ;};if _dafc :=_bdcc .PartialName ();_dafc !=name {continue ;};return _bbaeb .Enable (_bdcc .V ,extraCerts );};return nil ;};func _cedba (_dbcbd *PdfField )[]*PdfField {_begde :=[]*PdfField {_dbcbd };for _ ,_aaeb :=range _dbcbd .Kids {_begde =append (_begde ,_cedba (_aaeb )...);};return _begde ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_fee .PdfObject ;GetContainingPdfObject ()_fee .PdfObject ;};func (_aeea *PdfReader )newPdfFieldSignatureFromDict (_cfdc *_fee .PdfObjectDictionary )(*PdfFieldSignature ,error ){_adbg :=&PdfFieldSignature {};_gggeg ,_babb :=_fee .GetIndirect (_cfdc .Get ("\u0056"));if _babb {var _gbbb error ;_adbg .V ,_gbbb =_aeea .newPdfSignatureFromIndirect (_gggeg );if _gbbb !=nil {return nil ,_gbbb ;};};_adbg .Lock ,_ =_fee .GetIndirect (_cfdc .Get ("\u004c\u006f\u0063\u006b"));_adbg .SV ,_ =_fee .GetIndirect (_cfdc .Get ("\u0053\u0056"));return _adbg ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_cffb *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cffb .Base ==nil {return nil ,_beg .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _cffb .Base .ColorToRGB (color );};func _ggacg (_gcafb _fee .PdfObject )(*PdfFunctionType3 ,error ){_gdfg :=&PdfFunctionType3 {};var _egbb *_fee .PdfObjectDictionary ;if _ceabd ,_gbcdce :=_gcafb .(*_fee .PdfIndirectObject );_gbcdce {_afedc ,_defe :=_ceabd .PdfObject .(*_fee .PdfObjectDictionary );if !_defe {return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdfg ._daffg =_ceabd ;_egbb =_afedc ;}else if _dcgfg ,_aeeeb :=_gcafb .(*_fee .PdfObjectDictionary );_aeeeb {_egbb =_dcgfg ;}else {return nil ,_beg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gfge ,_cbeba :=_fee .TraceToDirectObject (_egbb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fee .PdfObjectArray );if !_cbeba {_adc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gfge .Len ()!=2{_adc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_beg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bedd ,_egdb :=_gfge .ToFloat64Array ();if _egdb !=nil {return nil ,_egdb ;};_gdfg .Domain =_bedd ;_gfge ,_cbeba =_fee .TraceToDirectObject (_egbb .Get ("\u0052\u0061\u006eg\u0065")).(*_fee .PdfObjectArray );if _cbeba {if _gfge .Len ()< 0||_gfge .Len ()%2!=0{return nil ,_beg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ccbfa ,_cbbeb :=_gfge .ToFloat64Array ();if _cbbeb !=nil {return nil ,_cbbeb ;};_gdfg .Range =_ccbfa ;};_gfge ,_cbeba =_fee .TraceToDirectObject (_egbb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_fee .PdfObjectArray );if !_cbeba {_adc .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gdfg .Functions =[]PdfFunction {};for _ ,_gbcfd :=range _gfge .Elements (){_addb ,_dbege :=_ddgcb (_gbcfd );if _dbege !=nil {return nil ,_dbege ;};_gdfg .Functions =append (_gdfg .Functions ,_addb );};_gfge ,_cbeba =_fee .TraceToDirectObject (_egbb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_fee .PdfObjectArray );if !_cbeba {_adc .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bcfa ,_egdb :=_gfge .ToFloat64Array ();if _egdb !=nil {return nil ,_egdb ;};_gdfg .Bounds =_bcfa ;if len (_gdfg .Bounds )!=len (_gdfg .Functions )-1{_adc .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_gdfg .Bounds ),len (_gdfg .Functions ));return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfge ,_cbeba =_fee .TraceToDirectObject (_egbb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fee .PdfObjectArray );if !_cbeba {_adc .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_beg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cdgfa ,_egdb :=_gfge .ToFloat64Array ();if _egdb !=nil {return nil ,_egdb ;};_gdfg .Encode =_cdgfa ;if len (_gdfg .Encode )!=2*len (_gdfg .Functions ){_adc .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_gdfg .Encode ),len (_gdfg .Functions ));return nil ,_beg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _gdfg ,nil ;};func _feaa (_edacc []rune ,_dbdb map[rune ]int ,_eeea map[rune ]_cg .GID )*_fee .PdfObjectArray {_cbgd :=&_fee .PdfObjectArray {};for _gdabc :=0;_gdabc < len (_edacc );{_abfb :=_dbdb [_edacc [_gdabc ]];_ffbc :=_gdabc ;for _ggegd :=_gdabc +1;_ggegd < len (_edacc );_ggegd ++{_aefb :=_dbdb [_edacc [_ggegd ]];if _abfb ==_aefb {_ffbc =_ggegd ;}else {break ;};};_bdbe :=_eeea [_edacc [_gdabc ]];_abbg :=_eeea [_edacc [_ffbc ]];_cbgd .Append (_fee .MakeInteger (int64 (_bdbe )));_cbgd .Append (_fee .MakeInteger (int64 (_abbg )));_cbgd .Append (_fee .MakeInteger (int64 (_abfb )));_gdabc =_ffbc +1;};return _cbgd ;};

// Y returns the value of the yellow component of the color.
func (_baae *PdfColorDeviceCMYK )Y ()float64 {return float64 (_baae [2])};

// SetContentStream sets the pattern cell's content stream.
func (_afaa *PdfTilingPattern )SetContentStream (content []byte ,encoder _fee .StreamEncoder )error {_faadf ,_ffda :=_afaa ._aege .(*_fee .PdfObjectStream );if !_ffda {_adc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afaa ._aege );return _fee .ErrTypeError ;};if encoder ==nil {encoder =_fee .NewRawEncoder ();};_agbga :=_faadf .PdfObjectDictionary ;_gggge :=encoder .MakeStreamDict ();_agbga .Merge (_gggge );_dadacc ,_edcad :=encoder .EncodeBytes (content );if _edcad !=nil {return _edcad ;};_agbga .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fee .MakeInteger (int64 (len (_dadacc ))));_faadf .Stream =[]byte (_dadacc );return nil ;};

// Width returns the width of `rect`.
func (_eaaff *PdfRectangle )Width ()float64 {return _eba .Abs (_eaaff .Urx -_eaaff .Llx )};func _aecd (_dcad _fee .PdfObject )(*_fee .PdfObjectDictionary ,*fontCommon ,error ){_aeagf :=&fontCommon {};if _cbbcc ,_febcd :=_dcad .(*_fee .PdfIndirectObject );_febcd {_aeagf ._fcgf =_cbbcc .ObjectNumber ;};_dbdce ,_dgeg :=_fee .GetDict (_dcad );if !_dgeg {_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dcad );return nil ,nil ,ErrFontNotSupported ;};_acfedc ,_dgeg :=_fee .GetNameVal (_dbdce .Get ("\u0054\u0079\u0070\u0065"));if !_dgeg {_adc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _acfedc !="\u0046\u006f\u006e\u0074"{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_acfedc ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_fee .ErrTypeError ;};_gcgbf ,_dgeg :=_fee .GetNameVal (_dbdce .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dgeg {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_aeagf ._agbcd =_gcgbf ;_gbad ,_dgeg :=_fee .GetNameVal (_dbdce .Get ("\u004e\u0061\u006d\u0065"));if _dgeg {_aeagf ._fged =_gbad ;};if _gcgbf =="\u0054\u0079\u0070e\u0033"{_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_dbdce );return _dbdce ,_aeagf ,ErrType3FontNotSupported ;};_dbcba ,_dgeg :=_fee .GetNameVal (_dbdce .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dgeg {_adc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _dbdce ,_aeagf ,ErrRequiredAttributeMissing ;};_aeagf ._fagfdc =_dbcba ;_cabg :=_dbdce .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _cabg !=nil {_ffbeg ,_adfd :=_cacc (_cabg );if _adfd !=nil {_adc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_adfd );return _dbdce ,_aeagf ,_adfd ;};_aeagf ._dedcg =_ffbeg ;};_bgbc :=_dbdce .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _bgbc !=nil {_aeagf ._gcfe =_fee .TraceToDirectObject (_bgbc );_gabd ,_fgeg :=_dede (_aeagf ._gcfe ,_aeagf );if _fgeg !=nil {return _dbdce ,_aeagf ,_fgeg ;};_aeagf ._edeab =_gabd ;}else if _gcgbf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gcgbf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bbae ,_edde :=_afb .NewCIDSystemInfo (_dbdce .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _edde !=nil {return _dbdce ,_aeagf ,_edde ;};_fbfea :=_ba .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_bbae .Registry ,_bbae .Ordering );if _afb .IsPredefinedCMap (_fbfea ){_aeagf ._edeab ,_edde =_afb .LoadPredefinedCMap (_fbfea );if _edde !=nil {_adc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fbfea ,_edde );};};};return _dbdce ,_aeagf ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_aacgg *PdfReader )GetIndirectObjectByNumber (number int )(_fee .PdfObject ,error ){_ceda ,_bbeac :=_aacgg ._daae .LookupByNumber (number );return _ceda ,_bbeac ;};

// ToPdfObject implements interface PdfModel.
func (_gbf *PdfActionThread )ToPdfObject ()_fee .PdfObject {_gbf .PdfAction .ToPdfObject ();_cdd :=_gbf ._fg ;_bb :=_cdd .PdfObject .(*_fee .PdfObjectDictionary );_bb .SetIfNotNil ("\u0053",_fee .MakeName (string (ActionTypeThread )));if _gbf .F !=nil {_bb .Set ("\u0046",_gbf .F .ToPdfObject ());};_bb .SetIfNotNil ("\u0044",_gbf .D );_bb .SetIfNotNil ("\u0042",_gbf .B );return _cdd ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_ddegc *PdfFieldButton )ToPdfObject ()_fee .PdfObject {_ddegc .PdfField .ToPdfObject ();_cfgg :=_ddegc ._bdcdc ;_fage :=_cfgg .PdfObject .(*_fee .PdfObjectDictionary );_fage .Set ("\u0046\u0054",_fee .MakeName ("\u0042\u0074\u006e"));if _ddegc .Opt !=nil {_fage .Set ("\u004f\u0070\u0074",_ddegc .Opt );};return _cfgg ;};func (_egdcb *PdfShading )getShadingDict ()(*_fee .PdfObjectDictionary ,error ){_efeg :=_egdcb ._gbadg ;if _abfc ,_aegae :=_efeg .(*_fee .PdfIndirectObject );_aegae {_gffb ,_eaddd :=_abfc .PdfObject .(*_fee .PdfObjectDictionary );if !_eaddd {return nil ,_fee .ErrTypeError ;};return _gffb ,nil ;}else if _cgeaf ,_ggefc :=_efeg .(*_fee .PdfObjectStream );_ggefc {return _cgeaf .PdfObjectDictionary ,nil ;}else if _fdeba ,_ebcdc :=_efeg .(*_fee .PdfObjectDictionary );_ebcdc {return _fdeba ,nil ;}else {_adc .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_fee .ErrTypeError ;};};func (_cbdbf *pdfFontType0 )subsetRegistered ()error {_eafga ,_gdgef :=_cbdbf .DescendantFont ._ddaad .(*pdfCIDFontType2 );if !_gdgef {_adc .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_cbdbf .DescendantFont );return nil ;};if _eafga ==nil {return nil ;};if _eafga ._dedcg ==nil {_adc .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _cbdbf ._daad ==nil {_adc .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_dbfb ,_gdgef :=_fee .GetStream (_eafga ._dedcg .FontFile2 );if !_gdgef {_adc .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _beg .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_gbcgc ,_cbca :=_fee .DecodeStream (_dbfb );if _cbca !=nil {_adc .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cbca );return _cbca ;};_egca ,_cbca :=_fbc .Parse (_ed .NewReader (_gbcgc ));if _cbca !=nil {_adc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_dbfb .Stream ));return _cbca ;};var _afbcb []rune ;var _cdgc *_fbc .Font ;switch _bebf :=_cbdbf ._daad .(type ){case *_de .TrueTypeFontEncoder :_afbcb =_bebf .RegisteredRunes ();_cdgc ,_cbca =_egca .SubsetKeepRunes (_afbcb );if _cbca !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbca );return _cbca ;};_bebf .SubsetRegistered ();case *_de .IdentityEncoder :_afbcb =_bebf .RegisteredRunes ();_bafd :=make ([]_fbc .GlyphIndex ,len (_afbcb ));for _edee ,_abcfb :=range _afbcb {_bafd [_edee ]=_fbc .GlyphIndex (_abcfb );};_cdgc ,_cbca =_egca .SubsetKeepIndices (_bafd );if _cbca !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbca );return _cbca ;};case _de .SimpleEncoder :_cbgf :=_bebf .Charcodes ();for _ ,_aaffg :=range _cbgf {_cbdg ,_fggd :=_bebf .CharcodeToRune (_aaffg );if !_fggd {_adc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_aaffg );continue ;};_afbcb =append (_afbcb ,_cbdg );};default:return _ba .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_cbdbf ._daad );};var _acab _ed .Buffer ;_cbca =_cdgc .Write (&_acab );if _cbca !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbca );return _cbca ;};if _cbdbf ._edeab !=nil {_abgc :=make (map[_afb .CharCode ]rune ,len (_afbcb ));for _ ,_faab :=range _afbcb {_cbfeb ,_eecg :=_cbdbf ._daad .RuneToCharcode (_faab );if !_eecg {continue ;};_abgc [_afb .CharCode (_cbfeb )]=_faab ;};_cbdbf ._edeab =_afb .NewToUnicodeCMap (_abgc );};_dbfb ,_cbca =_fee .MakeStream (_acab .Bytes (),_fee .NewFlateEncoder ());if _cbca !=nil {_adc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbca );return _cbca ;};_dbfb .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fee .MakeInteger (int64 (_acab .Len ())));if _cdgce ,_cdbg :=_fee .GetStream (_eafga ._dedcg .FontFile2 );_cdbg {*_cdgce =*_dbfb ;}else {_eafga ._dedcg .FontFile2 =_dbfb ;};_eebdc :=_cagbgf ();if len (_cbdbf ._fagfdc )> 0{_cbdbf ._fagfdc =_ffae (_cbdbf ._fagfdc ,_eebdc );};if len (_eafga ._fagfdc )> 0{_eafga ._fagfdc =_ffae (_eafga ._fagfdc ,_eebdc );};if len (_cbdbf ._fged )> 0{_cbdbf ._fged =_ffae (_cbdbf ._fged ,_eebdc );};if _eafga ._dedcg !=nil {_dbeg ,_cccgd :=_fee .GetName (_eafga ._dedcg .FontName );if _cccgd &&len (_dbeg .String ())> 0{_afec :=_ffae (_dbeg .String (),_eebdc );_eafga ._dedcg .FontName =_fee .MakeName (_afec );};};return nil ;};

// GetCerts returns the signature certificate chain.
func (_dggf *PdfSignature )GetCerts ()([]*_d .Certificate ,error ){var _affda []func ()([]*_d .Certificate ,error );switch _gbdd ,_ :=_fee .GetNameVal (_dggf .SubFilter );_gbdd {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_affda =append (_affda ,_dggf .extractChainFromPKCS7 ,_dggf .extractChainFromCert );case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_affda =append (_affda ,_dggf .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_affda =append (_affda ,_dggf .extractChainFromPKCS7 );default:return nil ,_ba .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_gbdd );};for _ ,_bdgb :=range _affda {_bgcc ,_cabfb :=_bdgb ();if _cabfb !=nil {return nil ,_cabfb ;};if len (_bgcc )> 0{return _bgcc ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject implements interface PdfModel.
func (_ffb *PdfAnnotationSound )ToPdfObject ()_fee .PdfObject {_ffb .PdfAnnotation .ToPdfObject ();_dfd :=_ffb ._gdc ;_cfbe :=_dfd .PdfObject .(*_fee .PdfObjectDictionary );_ffb .PdfAnnotationMarkup .appendToPdfDictionary (_cfbe );_cfbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fee .MakeName ("\u0053\u006f\u0075n\u0064"));_cfbe .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ffb .Sound );_cfbe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ffb .Name );return _dfd ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_dgdf pdfFontSimple )GetCharMetrics (code _de .CharCode )(_cg .CharMetrics ,bool ){if _efgc ,_dagg :=_dgdf ._bdff [code ];_dagg {return _cg .CharMetrics {Wx :_efgc },true ;};if _cg .IsStdFont (_cg .StdFontName (_dgdf ._fagfdc )){return _cg .CharMetrics {Wx :250},true ;};return _cg .CharMetrics {},false ;};func (_fggdd SignatureValidationResult )String ()string {var _bgffa _ed .Buffer ;_bgffa .WriteString (_ba .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_fggdd .Name ));if _fggdd .Date ._agfda > 0{_bgffa .WriteString (_ba .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_fggdd .Date .ToGoTime ().String ()));}else {_bgffa .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_fggdd .Reason )> 0{_bgffa .WriteString (_ba .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fggdd .Reason ));}else {_bgffa .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_fggdd .Location )> 0{_bgffa .WriteString (_ba .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fggdd .Location ));}else {_bgffa .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_fggdd .ContactInfo )> 0{_bgffa .WriteString (_ba .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_fggdd .ContactInfo ));}else {_bgffa .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_bgffa .WriteString (_ba .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_fggdd .Fields )));if _fggdd .IsSigned {_bgffa .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_bgffa .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _fggdd .IsVerified {_bgffa .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_bgffa .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _fggdd .IsTrusted {_bgffa .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_bgffa .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_fggdd .GeneralizedTime .IsZero (){_bgffa .WriteString (_ba .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_fggdd .GeneralizedTime .String ()));};return _bgffa .String ();};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bgcgf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bgcgf ._dacea !=nil {return _bgcgf ._dacea ,nil ;};if _bgcgf .Annots ==nil {_bgcgf ._dacea =[]*PdfAnnotation {};return nil ,nil ;};if _bgcgf ._ddcca ==nil {_bgcgf ._dacea =[]*PdfAnnotation {};return nil ,nil ;};_fffgg ,_fbca :=_bgcgf ._ddcca .loadAnnotations (_bgcgf .Annots );if _fbca !=nil {return nil ,_fbca ;};if _fffgg ==nil {_bgcgf ._dacea =[]*PdfAnnotation {};};_bgcgf ._dacea =_fffgg ;return _bgcgf ._dacea ,nil ;};