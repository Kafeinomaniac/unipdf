//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_bg "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_c "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_be "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_d "image";_b "math";);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_f .IntSlice ;TemplateAreas *_f .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_c .BitmapsArray ;UndilatedTemplates *_c .Bitmaps ;DilatedTemplates *_c .Bitmaps ;TemplatesSize _f .IntsMap ;FgTemplates *_f .NumSlice ;CentroidPoints *_c .Points ;CentroidPointsTemplates *_c .Points ;ClassIDs *_f .IntSlice ;ComponentPageNumbers *_f .IntSlice ;PtaUL *_c .Points ;PtaLL *_c .Points ;};func (_de *Classer )ComputeLLCorners ()(_bc error ){const _eb ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _de .PtaUL ==nil {return _be .Error (_eb ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ga :=len (*_de .PtaUL );_de .PtaLL =&_c .Points {};var (_ace ,_df float32 ;_ag ,_dg int ;_bcf *_c .Bitmap ;);for _bf :=0;_bf < _ga ;_bf ++{_ace ,_df ,_bc =_de .PtaUL .GetGeometry (_bf );if _bc !=nil {_bg .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bc );return _be .Wrap (_bc ,_eb ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ag ,_bc =_de .ClassIDs .Get (_bf );if _bc !=nil {_bg .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_bc );return _be .Wrap (_bc ,_eb ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_bcf ,_bc =_de .UndilatedTemplates .GetBitmap (_ag );if _bc !=nil {_bg .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bc );return _be .Wrap (_bc ,_eb ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_dg =_bcf .Height ;_de .PtaLL .AddPoint (_ace ,_df +float32 (_dg ));};return nil ;};func (_ggcd *similarTemplatesFinder )Next ()int {var (_eef ,_bga ,_fceb ,_bdb int ;_bdde bool ;_fgec *_c .Bitmap ;_ccg error ;);for {if _ggcd .Index >=25{return -1;};_bga =_ggcd .Width +TwoByTwoWalk [2*_ggcd .Index ];_eef =_ggcd .Height +TwoByTwoWalk [2*_ggcd .Index +1];if _eef < 1||_bga < 1{_ggcd .Index ++;continue ;};if len (_ggcd .CurrentNumbers )==0{_ggcd .CurrentNumbers ,_bdde =_ggcd .Classer .TemplatesSize .GetSlice (uint64 (_bga )*uint64 (_eef ));if !_bdde {_ggcd .Index ++;continue ;};_ggcd .N =0;};_fceb =len (_ggcd .CurrentNumbers );for ;_ggcd .N < _fceb ;_ggcd .N ++{_bdb =_ggcd .CurrentNumbers [_ggcd .N ];_fgec ,_ccg =_ggcd .Classer .DilatedTemplates .GetBitmap (_bdb );if _ccg !=nil {_bg .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _fgec .Width -2*JbAddedPixels ==_bga &&_fgec .Height -2*JbAddedPixels ==_eef {return _bdb ;};};_ggcd .Index ++;_ggcd .CurrentNumbers =nil ;};};const JbAddedPixels =6;const (RankHaus Method =iota ;Correlation ;);func (_ega *Settings )SetDefault (){if _ega .MaxCompWidth ==0{switch _ega .Components {case _c .ComponentConn :_ega .MaxCompWidth =MaxConnCompWidth ;case _c .ComponentCharacters :_ega .MaxCompWidth =MaxCharCompWidth ;case _c .ComponentWords :_ega .MaxCompWidth =MaxWordCompWidth ;};};if _ega .MaxCompHeight ==0{_ega .MaxCompHeight =MaxCompHeight ;};if _ega .Thresh ==0.0{_ega .Thresh =0.9;};if _ega .WeightFactor ==0.0{_ega .WeightFactor =0.75;};if _ega .RankHaus ==0.0{_ega .RankHaus =0.97;};if _ega .SizeHaus ==0{_ega .SizeHaus =2;};};const (MaxDiffWidth =2;MaxDiffHeight =2;);type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _c .Component ;Method Method ;};func (_aff *Classer )classifyCorrelation (_cga *_c .Boxes ,_fge *_c .Bitmaps ,_gdd int )error {const _eac ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _cga ==nil {return _be .Error (_eac ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _fge ==nil {return _be .Error (_eac ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_dac :=len (_fge .Values );if _dac ==0{_bg .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_bcb ,_cce *_c .Bitmap ;_ffd error ;);_cgb :=&_c .Bitmaps {Values :make ([]*_c .Bitmap ,_dac )};for _ccd ,_ccf :=range _fge .Values {_cce ,_ffd =_ccf .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _ffd !=nil {return _be .Wrap (_ffd ,_eac ,"");};_cgb .Values [_ccd ]=_cce ;};_gad :=_aff .FgTemplates ;_fdg :=_c .MakePixelSumTab8 ();_cef :=_c .MakePixelCentroidTab8 ();_gaf :=make ([]int ,_dac );_beb :=make ([][]int ,_dac );_bca :=_c .Points (make ([]_c .Point ,_dac ));_caf :=&_bca ;var (_dag ,_fbc int ;_bea ,_acd ,_fceag int ;_agf ,_db int ;_eff byte ;);for _ebb ,_fdgc :=range _cgb .Values {_beb [_ebb ]=make ([]int ,_fdgc .Height );_dag =0;_fbc =0;_acd =(_fdgc .Height -1)*_fdgc .RowStride ;_bea =0;for _db =_fdgc .Height -1;_db >=0;_db ,_acd =_db -1,_acd -_fdgc .RowStride {_beb [_ebb ][_db ]=_bea ;_fceag =0;for _agf =0;_agf < _fdgc .RowStride ;_agf ++{_eff =_fdgc .Data [_acd +_agf ];_fceag +=_fdg [_eff ];_dag +=_cef [_eff ]+_agf *8*_fdg [_eff ];};_bea +=_fceag ;_fbc +=_fceag *_db ;};_gaf [_ebb ]=_bea ;if _bea > 0{(*_caf )[_ebb ]=_c .Point {X :float32 (_dag )/float32 (_bea ),Y :float32 (_fbc )/float32 (_bea )};}else {(*_caf )[_ebb ]=_c .Point {X :float32 (_fdgc .Width )/float32 (2),Y :float32 (_fdgc .Height )/float32 (2)};};};if _ffd =_aff .CentroidPoints .Add (_caf );_ffd !=nil {return _be .Wrap (_ffd ,_eac ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_gafe ,_ae ,_ffg int ;_dda float64 ;_egb ,_agd ,_feag ,_bac float32 ;_eeb ,_cdc _c .Point ;_edc bool ;_dgea *similarTemplatesFinder ;_def int ;_fca *_c .Bitmap ;_bba *_d .Rectangle ;_gfg *_c .Bitmaps ;);for _def ,_cce =range _cgb .Values {_ae =_gaf [_def ];if _egb ,_agd ,_ffd =_caf .GetGeometry (_def );_ffd !=nil {return _be .Wrap (_ffd ,_eac ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_edc =false ;_deb :=len (_aff .UndilatedTemplates .Values );_dgea =_ebg (_aff ,_cce );for _ffa :=_dgea .Next ();_ffa > -1;{if _fca ,_ffd =_aff .UndilatedTemplates .GetBitmap (_ffa );_ffd !=nil {return _be .Wrap (_ffd ,_eac ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _ffg ,_ffd =_gad .GetInt (_ffa );_ffd !=nil {_bg .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ffd );};if _feag ,_bac ,_ffd =_aff .CentroidPointsTemplates .GetGeometry (_ffa );_ffd !=nil {return _be .Wrap (_ffd ,_eac ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _aff .Settings .WeightFactor > 0.0{if _gafe ,_ffd =_aff .TemplateAreas .Get (_ffa );_ffd !=nil {_bg .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_ffd );};_dda =_aff .Settings .Thresh +(1.0-_aff .Settings .Thresh )*_aff .Settings .WeightFactor *float64 (_ffg )/float64 (_gafe );}else {_dda =_aff .Settings .Thresh ;};_gge ,_cgg :=_c .CorrelationScoreThresholded (_cce ,_fca ,_ae ,_ffg ,_eeb .X -_cdc .X ,_eeb .Y -_cdc .Y ,MaxDiffWidth ,MaxDiffHeight ,_fdg ,_beb [_def ],float32 (_dda ));if _cgg !=nil {return _be .Wrap (_cgg ,_eac ,"");};if _dge {var (_cgc ,_fcad float64 ;_afe ,_dea int ;);_cgc ,_cgg =_c .CorrelationScore (_cce ,_fca ,_ae ,_ffg ,_egb -_feag ,_agd -_bac ,MaxDiffWidth ,MaxDiffHeight ,_fdg );if _cgg !=nil {return _be .Wrap (_cgg ,_eac ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_fcad ,_cgg =_c .CorrelationScoreSimple (_cce ,_fca ,_ae ,_ffg ,_egb -_feag ,_agd -_bac ,MaxDiffWidth ,MaxDiffHeight ,_fdg );if _cgg !=nil {return _be .Wrap (_cgg ,_eac ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_afe =int (_b .Sqrt (_cgc *float64 (_ae )*float64 (_ffg )));_dea =int (_b .Sqrt (_fcad *float64 (_ae )*float64 (_ffg )));if (_cgc >=_dda )!=(_fcad >=_dda ){return _be .Errorf (_eac ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_afe ,_cgc ,_cgc >=float64 (_dda ),_dea ,_fcad ,_fcad >=float64 (_dda ),_cgc -_fcad );};if _cgc >=_dda !=_gge {return _be .Errorf (_eac ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_cgc ,_cgc *float64 (_ae )*float64 (_ffg ),_afe ,_dda ,float32 (_dda )*float32 (_ae )*float32 (_ffg ),_gge );};};if _gge {_edc =true ;if _cgg =_aff .ClassIDs .Add (_ffa );_cgg !=nil {return _be .Wrap (_cgg ,_eac ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cgg =_aff .ComponentPageNumbers .Add (_gdd );_cgg !=nil {return _be .Wrap (_cgg ,_eac ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _aff .Settings .KeepClassInstances {if _bcb ,_cgg =_fge .GetBitmap (_def );_cgg !=nil {return _be .Wrap (_cgg ,_eac ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _gfg ,_cgg =_aff .ClassInstances .GetBitmaps (_ffa );_cgg !=nil {return _be .Wrap (_cgg ,_eac ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_gfg .AddBitmap (_bcb );if _bba ,_cgg =_cga .Get (_def );_cgg !=nil {return _be .Wrap (_cgg ,_eac ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_gfg .AddBox (_bba );};break ;};};if !_edc {if _ffd =_aff .ClassIDs .Add (_deb );_ffd !=nil {return _be .Wrap (_ffd ,_eac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ffd =_aff .ComponentPageNumbers .Add (_gdd );_ffd !=nil {return _be .Wrap (_ffd ,_eac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gfg =&_c .Bitmaps {};if _bcb ,_ffd =_fge .GetBitmap (_def );_ffd !=nil {return _be .Wrap (_ffd ,_eac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gfg .AddBitmap (_bcb );_ddd ,_gfd :=_bcb .Width ,_bcb .Height ;_acba :=uint64 (_gfd )*uint64 (_ddd );_aff .TemplatesSize .Add (_acba ,_deb );if _bba ,_ffd =_cga .Get (_def );_ffd !=nil {return _be .Wrap (_ffd ,_eac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gfg .AddBox (_bba );_aff .ClassInstances .AddBitmaps (_gfg );_aff .CentroidPointsTemplates .AddPoint (_egb ,_agd );_aff .FgTemplates .AddInt (_ae );_aff .UndilatedTemplates .AddBitmap (_bcb );_gafe =(_cce .Width -2*JbAddedPixels )*(_cce .Height -2*JbAddedPixels );if _ffd =_aff .TemplateAreas .Add (_gafe );_ffd !=nil {return _be .Wrap (_ffd ,_eac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_aff .NumberOfClasses =len (_aff .UndilatedTemplates .Values );return nil ;};func (_dc *Classer )addPageComponents (_dd *_c .Bitmap ,_dgc *_c .Boxes ,_cg *_c .Bitmaps ,_ea int ,_cff Method )error {const _fc ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _dd ==nil {return _be .Error (_fc ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _dgc ==nil ||_cg ==nil ||len (*_dgc )==0{_bg .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_dd );return nil ;};var _ba error ;switch _cff {case RankHaus :_ba =_dc .classifyRankHaus (_dgc ,_cg ,_ea );case Correlation :_ba =_dc .classifyCorrelation (_dgc ,_cg ,_ea );default:_bg .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_cff );return _be .Error (_fc ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ba !=nil {return _be .Wrap (_ba ,_fc ,"");};if _ba =_dc .getULCorners (_dd ,_dgc );_ba !=nil {return _be .Wrap (_ba ,_fc ,"");};_ad :=len (*_dgc );_dc .BaseIndex +=_ad ;if _ba =_dc .ComponentsNumber .Add (_ad );_ba !=nil {return _be .Wrap (_ba ,_fc ,"");};return nil ;};func (_cc *Classer )getULCorners (_fd *_c .Bitmap ,_ge *_c .Boxes )error {const _fce ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _fd ==nil {return _be .Error (_fce ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _ge ==nil {return _be .Error (_fce ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _cc .PtaUL ==nil {_cc .PtaUL =&_c .Points {};};_af :=len (*_ge );var (_ff ,_cd ,_baf ,_bcc int ;_bee ,_ggd ,_dde ,_gb float32 ;_ca error ;_acb *_d .Rectangle ;_ec *_c .Bitmap ;_ee _d .Point ;);for _cfg :=0;_cfg < _af ;_cfg ++{_ff =_cc .BaseIndex +_cfg ;if _bee ,_ggd ,_ca =_cc .CentroidPoints .GetGeometry (_ff );_ca !=nil {return _be .Wrap (_ca ,_fce ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _cd ,_ca =_cc .ClassIDs .Get (_ff );_ca !=nil {return _be .Wrap (_ca ,_fce ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _dde ,_gb ,_ca =_cc .CentroidPointsTemplates .GetGeometry (_cd );_ca !=nil {return _be .Wrap (_ca ,_fce ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_aca :=_dde -_bee ;_gc :=_gb -_ggd ;if _aca >=0{_baf =int (_aca +0.5);}else {_baf =int (_aca -0.5);};if _gc >=0{_bcc =int (_gc +0.5);}else {_bcc =int (_gc -0.5);};if _acb ,_ca =_ge .Get (_cfg );_ca !=nil {return _be .Wrap (_ca ,_fce ,"");};_eg ,_eeg :=_acb .Min .X ,_acb .Min .Y ;_ec ,_ca =_cc .UndilatedTemplates .GetBitmap (_cd );if _ca !=nil {return _be .Wrap (_ca ,_fce ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_ee ,_ca =_ead (_fd ,_eg ,_eeg ,_baf ,_bcc ,_ec );if _ca !=nil {return _be .Wrap (_ca ,_fce ,"");};_cc .PtaUL .AddPoint (float32 (_eg -_baf +_ee .X ),float32 (_eeg -_bcc +_ee .Y ));};return nil ;};func (_bbe *Classer )classifyRankHouseOne (_efa *_c .Boxes ,_cefd ,_gaff ,_gafb *_c .Bitmaps ,_fga *_c .Points ,_gec int )(_fdf error ){const _bbgf ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_ggcf ,_dcb ,_geb ,_gcg float32 ;_fa int ;_cge ,_beag ,_ggb ,_ecd ,_eead *_c .Bitmap ;_acbf ,_defd bool ;);for _defdb :=0;_defdb < len (_cefd .Values );_defdb ++{_beag =_gaff .Values [_defdb ];_ggb =_gafb .Values [_defdb ];_ggcf ,_dcb ,_fdf =_fga .GetGeometry (_defdb );if _fdf !=nil {return _be .Wrapf (_fdf ,_bbgf ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_dbb :=len (_bbe .UndilatedTemplates .Values );_acbf =false ;_agdc :=_ebg (_bbe ,_beag );for _fa =_agdc .Next ();_fa > -1;{_ecd ,_fdf =_bbe .UndilatedTemplates .GetBitmap (_fa );if _fdf !=nil {return _be .Wrap (_fdf ,_bbgf ,"\u0062\u006d\u0033");};_eead ,_fdf =_bbe .DilatedTemplates .GetBitmap (_fa );if _fdf !=nil {return _be .Wrap (_fdf ,_bbgf ,"\u0062\u006d\u0034");};_geb ,_gcg ,_fdf =_bbe .CentroidPointsTemplates .GetGeometry (_fa );if _fdf !=nil {return _be .Wrap (_fdf ,_bbgf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_defd ,_fdf =_c .HausTest (_beag ,_ggb ,_ecd ,_eead ,_ggcf -_geb ,_dcb -_gcg ,MaxDiffWidth ,MaxDiffHeight );if _fdf !=nil {return _be .Wrap (_fdf ,_bbgf ,"");};if _defd {_acbf =true ;if _fdf =_bbe .ClassIDs .Add (_fa );_fdf !=nil {return _be .Wrap (_fdf ,_bbgf ,"");};if _fdf =_bbe .ComponentPageNumbers .Add (_gec );_fdf !=nil {return _be .Wrap (_fdf ,_bbgf ,"");};if _bbe .Settings .KeepClassInstances {_adg ,_ddg :=_bbe .ClassInstances .GetBitmaps (_fa );if _ddg !=nil {return _be .Wrap (_ddg ,_bbgf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cge ,_ddg =_cefd .GetBitmap (_defdb );if _ddg !=nil {return _be .Wrap (_ddg ,_bbgf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_adg .AddBitmap (_cge );_cfa ,_ddg :=_efa .Get (_defdb );if _ddg !=nil {return _be .Wrap (_ddg ,_bbgf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_adg .AddBox (_cfa );};break ;};};if !_acbf {if _fdf =_bbe .ClassIDs .Add (_dbb );_fdf !=nil {return _be .Wrap (_fdf ,_bbgf ,"");};if _fdf =_bbe .ComponentPageNumbers .Add (_gec );_fdf !=nil {return _be .Wrap (_fdf ,_bbgf ,"");};_ddga :=&_c .Bitmaps {};_cge ,_fdf =_cefd .GetBitmap (_defdb );if _fdf !=nil {return _be .Wrap (_fdf ,_bbgf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ddga .Values =append (_ddga .Values ,_cge );_gag ,_bfce :=_cge .Width ,_cge .Height ;_bbe .TemplatesSize .Add (uint64 (_bfce )*uint64 (_gag ),_dbb );_efe ,_ced :=_efa .Get (_defdb );if _ced !=nil {return _be .Wrap (_ced ,_bbgf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ddga .AddBox (_efe );_bbe .ClassInstances .AddBitmaps (_ddga );_bbe .CentroidPointsTemplates .AddPoint (_ggcf ,_dcb );_bbe .UndilatedTemplates .AddBitmap (_beag );_bbe .DilatedTemplates .AddBitmap (_ggb );};};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_aa *Classer )AddPage (inputPage *_c .Bitmap ,pageNumber int ,method Method )(_fb error ){const _gg ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_aa .Widths [pageNumber ]=inputPage .Width ;_aa .Heights [pageNumber ]=inputPage .Height ;if _fb =_aa .verifyMethod (method );_fb !=nil {return _be .Wrap (_fb ,_gg ,"");};_cf ,_ac ,_fb :=inputPage .GetComponents (_aa .Settings .Components ,_aa .Settings .MaxCompWidth ,_aa .Settings .MaxCompHeight );if _fb !=nil {return _be .Wrap (_fb ,_gg ,"");};_bg .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cf );if _fb =_aa .addPageComponents (inputPage ,_ac ,_cf ,pageNumber ,method );_fb !=nil {return _be .Wrap (_fb ,_gg ,"");};return nil ;};func _ebg (_eba *Classer ,_dca *_c .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_dca .Width ,Height :_dca .Height ,Classer :_eba };};func (_ggdc Settings )Validate ()error {const _efd ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _ggdc .Thresh < 0.4||_ggdc .Thresh > 0.98{return _be .Error (_efd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _ggdc .WeightFactor < 0.0||_ggdc .WeightFactor > 1.0{return _be .Error (_efd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _ggdc .RankHaus < 0.5||_ggdc .RankHaus > 1.0{return _be .Error (_efd ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _ggdc .SizeHaus < 1||_ggdc .SizeHaus > 10{return _be .Error (_efd ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _ggdc .Components {case _c .ComponentConn ,_c .ComponentCharacters ,_c .ComponentWords :default:return _be .Error (_efd ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};type Method int ;func Init (settings Settings )(*Classer ,error ){const _g ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_ef :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_f .IntsMap {},TemplateAreas :&_f .IntSlice {},ComponentPageNumbers :&_f .IntSlice {},ClassIDs :&_f .IntSlice {},ComponentsNumber :&_f .IntSlice {},CentroidPoints :&_c .Points {},CentroidPointsTemplates :&_c .Points {},UndilatedTemplates :&_c .Bitmaps {},DilatedTemplates :&_c .Bitmaps {},ClassInstances :&_c .BitmapsArray {},FgTemplates :&_f .NumSlice {}};if _a :=_ef .Settings .Validate ();_a !=nil {return nil ,_be .Wrap (_a ,_g ,"");};return _ef ,nil ;};func (_cafe *Classer )classifyRankHouseNonOne (_acbc *_c .Boxes ,_gbf ,_cgbe ,_beab *_c .Bitmaps ,_cced *_c .Points ,_bdd *_f .NumSlice ,_gda int )(_dcfb error ){const _agc ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_gdbg ,_edb ,_cbf ,_dgd float32 ;_gef ,_cbc ,_fbf int ;_ecf ,_abf ,_faa ,_dae ,_adgg *_c .Bitmap ;_agg ,_gcge bool ;);_eebg :=_c .MakePixelSumTab8 ();for _ffc :=0;_ffc < len (_gbf .Values );_ffc ++{if _abf ,_dcfb =_cgbe .GetBitmap (_ffc );_dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _gef ,_dcfb =_bdd .GetInt (_ffc );_dcfb !=nil {_bg .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ffc ,_dcfb );};if _faa ,_dcfb =_beab .GetBitmap (_ffc );_dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _gdbg ,_edb ,_dcfb =_cced .GetGeometry (_ffc );_dcfb !=nil {return _be .Wrapf (_dcfb ,_agc ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_agb :=len (_cafe .UndilatedTemplates .Values );_agg =false ;_gfc :=_ebg (_cafe ,_abf );for _fbf =_gfc .Next ();_fbf > -1;{if _dae ,_dcfb =_cafe .UndilatedTemplates .GetBitmap (_fbf );_dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _cbc ,_dcfb =_cafe .FgTemplates .GetInt (_fbf );_dcfb !=nil {_bg .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fbf ,_dcfb );};if _adgg ,_dcfb =_cafe .DilatedTemplates .GetBitmap (_fbf );_dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _cbf ,_dgd ,_dcfb =_cafe .CentroidPointsTemplates .GetGeometry (_fbf );_dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_gcge ,_dcfb =_c .RankHausTest (_abf ,_faa ,_dae ,_adgg ,_gdbg -_cbf ,_edb -_dgd ,MaxDiffWidth ,MaxDiffHeight ,_gef ,_cbc ,float32 (_cafe .Settings .RankHaus ),_eebg );if _dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"");};if _gcge {_agg =true ;if _dcfb =_cafe .ClassIDs .Add (_fbf );_dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"");};if _dcfb =_cafe .ComponentPageNumbers .Add (_gda );_dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"");};if _cafe .Settings .KeepClassInstances {_ceg ,_bce :=_cafe .ClassInstances .GetBitmaps (_fbf );if _bce !=nil {return _be .Wrap (_bce ,_agc ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _ecf ,_bce =_gbf .GetBitmap (_ffc );_bce !=nil {return _be .Wrap (_bce ,_agc ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ceg .Values =append (_ceg .Values ,_ecf );_bfdf ,_bce :=_acbc .Get (_ffc );if _bce !=nil {return _be .Wrap (_bce ,_agc ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_ceg .Boxes =append (_ceg .Boxes ,_bfdf );};break ;};};if !_agg {if _dcfb =_cafe .ClassIDs .Add (_agb );_dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _dcfb =_cafe .ComponentPageNumbers .Add (_gda );_dcfb !=nil {return _be .Wrap (_dcfb ,_agc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_efc :=&_c .Bitmaps {};_ecf =_gbf .Values [_ffc ];_efc .AddBitmap (_ecf );_fcc ,_fcdd :=_ecf .Width ,_ecf .Height ;_cafe .TemplatesSize .Add (uint64 (_fcc )*uint64 (_fcdd ),_agb );_aef ,_dbc :=_acbc .Get (_ffc );if _dbc !=nil {return _be .Wrap (_dbc ,_agc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_efc .AddBox (_aef );_cafe .ClassInstances .AddBitmaps (_efc );_cafe .CentroidPointsTemplates .AddPoint (_gdbg ,_edb );_cafe .UndilatedTemplates .AddBitmap (_abf );_cafe .DilatedTemplates .AddBitmap (_faa );_cafe .FgTemplates .AddInt (_gef );};};_cafe .NumberOfClasses =len (_cafe .UndilatedTemplates .Values );return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_fgf *Classer )classifyRankHaus (_acg *_c .Boxes ,_bbg *_c .Bitmaps ,_bag int )error {const _gcf ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _acg ==nil {return _be .Error (_gcf ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _bbg ==nil {return _be .Error (_gcf ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_dcf :=len (_bbg .Values );if _dcf ==0{return _be .Error (_gcf ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_cca :=_bbg .CountPixels ();_gdb :=_fgf .Settings .SizeHaus ;_fcd :=_c .SelCreateBrick (_gdb ,_gdb ,_gdb /2,_gdb /2,_c .SelHit );_ggc :=&_c .Bitmaps {Values :make ([]*_c .Bitmap ,_dcf )};_bfd :=&_c .Bitmaps {Values :make ([]*_c .Bitmap ,_dcf )};var (_age ,_bbc ,_dfc *_c .Bitmap ;_bebe error ;);for _cee :=0;_cee < _dcf ;_cee ++{_age ,_bebe =_bbg .GetBitmap (_cee );if _bebe !=nil {return _be .Wrap (_bebe ,_gcf ,"");};_bbc ,_bebe =_age .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bebe !=nil {return _be .Wrap (_bebe ,_gcf ,"");};_dfc ,_bebe =_c .Dilate (nil ,_bbc ,_fcd );if _bebe !=nil {return _be .Wrap (_bebe ,_gcf ,"");};_ggc .Values [_dcf ]=_bbc ;_bfd .Values [_dcf ]=_dfc ;};_ccdd ,_bebe :=_c .Centroids (_ggc .Values );if _bebe !=nil {return _be .Wrap (_bebe ,_gcf ,"");};if _bebe =_ccdd .Add (_fgf .CentroidPoints );_bebe !=nil {_bg .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _fgf .Settings .RankHaus ==1.0{_bebe =_fgf .classifyRankHouseOne (_acg ,_bbg ,_ggc ,_bfd ,_ccdd ,_bag );}else {_bebe =_fgf .classifyRankHouseNonOne (_acg ,_bbg ,_ggc ,_bfd ,_ccdd ,_cca ,_bag );};if _bebe !=nil {return _be .Wrap (_bebe ,_gcf ,"");};return nil ;};func (_ab *Classer )verifyMethod (_da Method )error {if _da !=RankHaus &&_da !=Correlation {return _be .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};func _ead (_fcea *_c .Bitmap ,_ed ,_fg ,_bfa ,_aab int ,_eea *_c .Bitmap )(_baa _d .Point ,_dfb error ){const _gbb ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _fcea ==nil {return _baa ,_be .Error (_gbb ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _eea ==nil {return _baa ,_be .Error (_gbb ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_eege ,_bb :=_eea .Width ,_eea .Height ;_eaf ,_fe :=_ed -_bfa -JbAddedPixels ,_fg -_aab -JbAddedPixels ;_bg .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_ed ,_fg ,_eege ,_bb ,_eaf ,_fe );_aac ,_dfb :=_c .Rect (_eaf ,_fe ,_eege ,_bb );if _dfb !=nil {return _baa ,_be .Wrap (_dfb ,_gbb ,"");};_fea ,_ ,_dfb :=_fcea .ClipRectangle (_aac );if _dfb !=nil {_bg .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_aac );return _baa ,_be .Wrap (_dfb ,_gbb ,"");};_cad :=_c .New (_fea .Width ,_fea .Height );_efg :=_b .MaxInt32 ;var _cb ,_bd ,_gf ,_gd ,_bfc int ;for _cb =-1;_cb <=1;_cb ++{for _bd =-1;_bd <=1;_bd ++{if _ ,_dfb =_c .Copy (_cad ,_fea );_dfb !=nil {return _baa ,_be .Wrap (_dfb ,_gbb ,"");};if _dfb =_cad .RasterOperation (_bd ,_cb ,_eege ,_bb ,_c .PixSrcXorDst ,_eea ,0,0);_dfb !=nil {return _baa ,_be .Wrap (_dfb ,_gbb ,"");};_gf =_cad .CountPixels ();if _gf < _efg {_gd =_bd ;_bfc =_cb ;_efg =_gf ;};};};_baa .X =_gd ;_baa .Y =_bfc ;return _baa ,nil ;};var _dge bool ;func DefaultSettings ()Settings {_bdda :=&Settings {};_bdda .SetDefault ();return *_bdda };