//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_da "encoding/binary";_ge "errors";_fc "fmt";_fcb "github.com/unidoc/unipdf/v3/common";_fb "github.com/unidoc/unipdf/v3/internal/bitwise";_de "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_e "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_bg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_eb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_c "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_gf "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_dg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gb "image";_b "io";_g "math";_f "strings";_dac "time";);func (_ced *GenericRegion )parseHeader ()(_cfb error ){_fcb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _cfb !=nil {_fcb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_cfb );}else {_fcb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_ggg int ;_cga uint64 ;);if _cfb =_ced .RegionSegment .parseHeader ();_cfb !=nil {return _cfb ;};if _ ,_cfb =_ced ._bga .ReadBits (3);_cfb !=nil {return _cfb ;};_ggg ,_cfb =_ced ._bga .ReadBit ();if _cfb !=nil {return _cfb ;};if _ggg ==1{_ced .UseExtTemplates =true ;};_ggg ,_cfb =_ced ._bga .ReadBit ();if _cfb !=nil {return _cfb ;};if _ggg ==1{_ced .IsTPGDon =true ;};_cga ,_cfb =_ced ._bga .ReadBits (2);if _cfb !=nil {return _cfb ;};_ced .GBTemplate =byte (_cga &0xf);_ggg ,_cfb =_ced ._bga .ReadBit ();if _cfb !=nil {return _cfb ;};if _ggg ==1{_ced .IsMMREncoded =true ;};if !_ced .IsMMREncoded {_bffa :=1;if _ced .GBTemplate ==0{_bffa =4;if _ced .UseExtTemplates {_bffa =12;};};if _cfb =_ced .readGBAtPixels (_bffa );_cfb !=nil {return _cfb ;};};if _cfb =_ced .computeSegmentDataStructure ();_cfb !=nil {return _cfb ;};_fcb .Log .Trace ("\u0025\u0073",_ced );return nil ;};func (_egcd *GenericRegion )GetRegionInfo ()*RegionSegment {return _egcd .RegionSegment };func (_cbdf *Header )writeSegmentNumber (_bded _fb .BinaryWriter )(_cgc int ,_aegd error ){_cdd :=make ([]byte ,4);_da .BigEndian .PutUint32 (_cdd ,_cbdf .SegmentNumber );if _cgc ,_aegd =_bded .Write (_cdd );_aegd !=nil {return 0,_dg .Wrap (_aegd ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _cgc ,nil ;};func (_fbacg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _fbacg .SdHuffDecodeHeightSelection {case 0:_ggd ,_egcf :=_eb .GetStandardTable (4);if _egcf !=nil {return 0,_egcf ;};return _ggd .Decode (_fbacg ._gae );case 1:_gfcf ,_daff :=_eb .GetStandardTable (5);if _daff !=nil {return 0,_daff ;};return _gfcf .Decode (_fbacg ._gae );case 3:if _fbacg ._fgad ==nil {_eecc ,_ceaa :=_eb .GetStandardTable (0);if _ceaa !=nil {return 0,_ceaa ;};_fbacg ._fgad =_eecc ;};return _fbacg ._fgad .Decode (_fbacg ._gae );};return 0,nil ;};func NewGenericRegion (r _fb .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_bga :r };};func _efe (_aeed int )int {if _aeed ==0{return 0;};_aeed |=_aeed >>1;_aeed |=_aeed >>2;_aeed |=_aeed >>4;_aeed |=_aeed >>8;_aeed |=_aeed >>16;return (_aeed +1)>>1;};func (_ffbe *GenericRegion )copyLineAbove (_efaa int )error {_adc :=_efaa *_ffbe .Bitmap .RowStride ;_abaf :=_adc -_ffbe .Bitmap .RowStride ;for _cff :=0;_cff < _ffbe .Bitmap .RowStride ;_cff ++{_feg ,_ecef :=_ffbe .Bitmap .GetByte (_abaf );if _ecef !=nil {return _ecef ;};_abaf ++;if _ecef =_ffbe .Bitmap .SetByte (_adc ,_feg );_ecef !=nil {return _ecef ;};_adc ++;};return nil ;};func (_abdac *PatternDictionary )readTemplate ()error {_cbbc ,_dgedeb :=_abdac ._cgad .ReadBits (2);if _dgedeb !=nil {return _dgedeb ;};_abdac .HDTemplate =byte (_cbbc );return nil ;};func (_fcc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_decf ,_fccd ,_dae ,_fag ,_daeb ,_fec ,_ffgg ,_dbce ,_ceg int )(_fg error ){var (_cf ,_bcc int ;_ccg ,_edd int ;_bfg ,_fdb int ;_feb byte ;);if _decf > 0{_feb ,_fg =_fcc .RegionBitmap .GetByte (_ffgg -_dae );if _fg !=nil {return ;};_ccg =int (_feb );};if _dbce > 0&&_dbce <=_fcc .ReferenceBitmap .Height {_feb ,_fg =_fcc .ReferenceBitmap .GetByte (_ceg -_fag +_fec );if _fg !=nil {return ;};_edd =int (_feb )<<2;};if _dbce >=0&&_dbce < _fcc .ReferenceBitmap .Height {_feb ,_fg =_fcc .ReferenceBitmap .GetByte (_ceg +_fec );if _fg !=nil {return ;};_bfg =int (_feb );};if _dbce > -2&&_dbce < _fcc .ReferenceBitmap .Height -1{_feb ,_fg =_fcc .ReferenceBitmap .GetByte (_ceg +_fag +_fec );if _fg !=nil {return ;};_fdb =int (_feb );};_cf =((_ccg >>5)&0x6)|((_fdb >>2)&0x30)|(_bfg &0xc0)|(_edd &0x200);_bcc =((_fdb >>2)&0x70)|(_bfg &0xc0)|(_edd &0x700);var _dbfd int ;for _agf :=0;_agf < _daeb ;_agf =_dbfd {var (_cbb int ;_aca int ;);_dbfd =_agf +8;if _cbb =_fccd -_agf ;_cbb > 8{_cbb =8;};_cec :=_dbfd < _fccd ;_bbgf :=_dbfd < _fcc .ReferenceBitmap .Width ;_eea :=_fec +1;if _decf > 0{_feb =0;if _cec {_feb ,_fg =_fcc .RegionBitmap .GetByte (_ffgg -_dae +1);if _fg !=nil {return ;};};_ccg =(_ccg <<8)|int (_feb );};if _dbce > 0&&_dbce <=_fcc .ReferenceBitmap .Height {var _fde int ;if _bbgf {_feb ,_fg =_fcc .ReferenceBitmap .GetByte (_ceg -_fag +_eea );if _fg !=nil {return ;};_fde =int (_feb )<<2;};_edd =(_edd <<8)|_fde ;};if _dbce >=0&&_dbce < _fcc .ReferenceBitmap .Height {_feb =0;if _bbgf {_feb ,_fg =_fcc .ReferenceBitmap .GetByte (_ceg +_eea );if _fg !=nil {return ;};};_bfg =(_bfg <<8)|int (_feb );};if _dbce > -2&&_dbce < (_fcc .ReferenceBitmap .Height -1){_feb =0;if _bbgf {_feb ,_fg =_fcc .ReferenceBitmap .GetByte (_ceg +_fag +_eea );if _fg !=nil {return ;};};_fdb =(_fdb <<8)|int (_feb );};for _gfcb :=0;_gfcb < _cbb ;_gfcb ++{var _adg int ;_cfa :=(_bcc >>4)&0x1ff;switch _cfa {case 0x1ff:_adg =1;case 0x00:_adg =0;default:_fcc ._gd .SetIndex (int32 (_cf ));_adg ,_fg =_fcc ._ec .DecodeBit (_fcc ._gd );if _fg !=nil {return ;};};_bgg :=uint (7-_gfcb );_aca |=int (_adg <<_bgg );_cf =((_cf &0x0d6)<<1)|_adg |(_ccg >>_bgg +5)&0x002|((_fdb >>_bgg +2)&0x010)|((_bfg >>_bgg )&0x040)|((_edd >>_bgg )&0x200);_bcc =((_bcc &0xdb)<<1)|((_fdb >>_bgg +2)&0x010)|((_bfg >>_bgg )&0x080)|((_edd >>_bgg )&0x400);};_fg =_fcc .RegionBitmap .SetByte (_ffgg ,byte (_aca ));if _fg !=nil {return ;};_ffgg ++;_ceg ++;};return nil ;};func (_dggb *SymbolDictionary )readRefinementAtPixels (_agggc int )error {_dggb .SdrATX =make ([]int8 ,_agggc );_dggb .SdrATY =make ([]int8 ,_agggc );var (_efdf byte ;_dddg error ;);for _bbda :=0;_bbda < _agggc ;_bbda ++{_efdf ,_dddg =_dggb ._gae .ReadByte ();if _dddg !=nil {return _dddg ;};_dggb .SdrATX [_bbda ]=int8 (_efdf );_efdf ,_dddg =_dggb ._gae .ReadByte ();if _dddg !=nil {return _dddg ;};_dggb .SdrATY [_bbda ]=int8 (_efdf );};return nil ;};func (_facg *TableSegment )parseHeader ()error {var (_cgfac int ;_dcdga uint64 ;_aegde error ;);_cgfac ,_aegde =_facg ._cbeg .ReadBit ();if _aegde !=nil {return _aegde ;};if _cgfac ==1{return _fc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cgfac );};if _dcdga ,_aegde =_facg ._cbeg .ReadBits (3);_aegde !=nil {return _aegde ;};_facg ._abfa =(int32 (_dcdga )+1)&0xf;if _dcdga ,_aegde =_facg ._cbeg .ReadBits (3);_aegde !=nil {return _aegde ;};_facg ._dfdc =(int32 (_dcdga )+1)&0xf;if _dcdga ,_aegde =_facg ._cbeg .ReadBits (32);_aegde !=nil {return _aegde ;};_facg ._bfada =int32 (_dcdga &_g .MaxInt32 );if _dcdga ,_aegde =_facg ._cbeg .ReadBits (32);_aegde !=nil {return _aegde ;};_facg ._ggbb =int32 (_dcdga &_g .MaxInt32 );return nil ;};func (_gcc *Header )readSegmentPageAssociation (_fgdf Documenter ,_adfa _fb .StreamReader ,_ceea uint64 ,_cba ...int )(_abcg error ){const _gcdd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_gcc .PageAssociationFieldSize {_gfda ,_ffad :=_adfa .ReadBits (8);if _ffad !=nil {return _dg .Wrap (_ffad ,_gcdd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gcc .PageAssociation =int (_gfda &0xFF);}else {_ebab ,_edb :=_adfa .ReadBits (32);if _edb !=nil {return _dg .Wrap (_edb ,_gcdd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gcc .PageAssociation =int (_ebab &_g .MaxInt32 );};if _ceea ==0{return nil ;};if _gcc .PageAssociation !=0{_adea ,_dcba :=_fgdf .GetPage (_gcc .PageAssociation );if _dcba !=nil {return _dg .Wrap (_dcba ,_gcdd ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _dgab int ;for _eff :=uint64 (0);_eff < _ceea ;_eff ++{_dgab =_cba [_eff ];_gcc .RTSegments [_eff ],_dcba =_adea .GetSegment (_dgab );if _dcba !=nil {var _gcecb error ;_gcc .RTSegments [_eff ],_gcecb =_fgdf .GetGlobalSegment (_dgab );if _gcecb !=nil {return _dg .Wrapf (_dcba ,_gcdd ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_gcc .PageAssociation );};};};return nil ;};for _eefd :=uint64 (0);_eefd < _ceea ;_eefd ++{_gcc .RTSegments [_eefd ],_abcg =_fgdf .GetGlobalSegment (_cba [_eefd ]);if _abcg !=nil {return _dg .Wrapf (_abcg ,_gcdd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_cba [_eefd ]);};};return nil ;};func (_edda *SymbolDictionary )Init (h *Header ,r _fb .StreamReader )error {_edda .Header =h ;_edda ._gae =r ;return _edda .parseHeader ();};type HalftoneRegion struct{_fccgb _fb .StreamReader ;_egbg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _e .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_e .Bitmap ;Patterns []*_e .Bitmap ;};func (_egf *GenericRegion )Init (h *Header ,r _fb .StreamReader )error {_egf .RegionSegment =NewRegionSegment (r );_egf ._bga =r ;return _egf .parseHeader ();};func (_fbee *SymbolDictionary )setRefinementAtPixels ()error {if !_fbee .UseRefinementAggregation ||_fbee .SdrTemplate !=0{return nil ;};if _gfed :=_fbee .readRefinementAtPixels (2);_gfed !=nil {return _gfed ;};return nil ;};type GenericRefinementRegion struct{_gfg templater ;_fa templater ;_ae _fb .StreamReader ;_ed *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_e .Bitmap ;ReferenceBitmap *_e .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_ec *_bg .Decoder ;_gd *_bg .DecoderStats ;_edf bool ;_dgbg []bool ;};var _ templater =&template1 {};func (_aggg *PageInformationSegment )DefaultPixelValue ()uint8 {return _aggg ._dfag };func (_ffgb *SymbolDictionary )encodeRefinementATFlags (_ccf _fb .BinaryWriter )(_dfgb int ,_caaae error ){const _eeae ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_ffgb .UseRefinementAggregation ||_ffgb .SdrTemplate !=0{return 0,nil ;};for _gged :=0;_gged < 2;_gged ++{if _caaae =_ccf .WriteByte (byte (_ffgb .SdrATX [_gged ]));_caaae !=nil {return _dfgb ,_dg .Wrapf (_caaae ,_eeae ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gged );};_dfgb ++;if _caaae =_ccf .WriteByte (byte (_ffgb .SdrATY [_gged ]));_caaae !=nil {return _dfgb ,_dg .Wrapf (_caaae ,_eeae ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gged );};_dfgb ++;};return _dfgb ,nil ;};func (_ddfc *GenericRegion )overrideAtTemplate0a (_bfeb ,_cbc ,_dcbed ,_eccad ,_gbda ,_eeab int )int {if _ddfc .GBAtOverride [0]{_bfeb &=0xFFEF;if _ddfc .GBAtY [0]==0&&_ddfc .GBAtX [0]>=-int8 (_gbda ){_bfeb |=(_eccad >>uint (int8 (_eeab )-_ddfc .GBAtX [0]&0x1))<<4;}else {_bfeb |=int (_ddfc .getPixel (_cbc +int (_ddfc .GBAtX [0]),_dcbed +int (_ddfc .GBAtY [0])))<<4;};};if _ddfc .GBAtOverride [1]{_bfeb &=0xFBFF;if _ddfc .GBAtY [1]==0&&_ddfc .GBAtX [1]>=-int8 (_gbda ){_bfeb |=(_eccad >>uint (int8 (_eeab )-_ddfc .GBAtX [1]&0x1))<<10;}else {_bfeb |=int (_ddfc .getPixel (_cbc +int (_ddfc .GBAtX [1]),_dcbed +int (_ddfc .GBAtY [1])))<<10;};};if _ddfc .GBAtOverride [2]{_bfeb &=0xF7FF;if _ddfc .GBAtY [2]==0&&_ddfc .GBAtX [2]>=-int8 (_gbda ){_bfeb |=(_eccad >>uint (int8 (_eeab )-_ddfc .GBAtX [2]&0x1))<<11;}else {_bfeb |=int (_ddfc .getPixel (_cbc +int (_ddfc .GBAtX [2]),_dcbed +int (_ddfc .GBAtY [2])))<<11;};};if _ddfc .GBAtOverride [3]{_bfeb &=0x7FFF;if _ddfc .GBAtY [3]==0&&_ddfc .GBAtX [3]>=-int8 (_gbda ){_bfeb |=(_eccad >>uint (int8 (_eeab )-_ddfc .GBAtX [3]&0x1))<<15;}else {_bfeb |=int (_ddfc .getPixel (_cbc +int (_ddfc .GBAtX [3]),_dcbed +int (_ddfc .GBAtY [3])))<<15;};};return _bfeb ;};func (_aee *GenericRefinementRegion )setParameters (_efb *_bg .DecoderStats ,_bbb *_bg .Decoder ,_dbfe int8 ,_gbd ,_dfa uint32 ,_gda *_e .Bitmap ,_bce ,_gce int32 ,_cdc bool ,_fbga []int8 ,_fab []int8 ){_fcb .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _efb !=nil {_aee ._gd =_efb ;};if _bbb !=nil {_aee ._ec =_bbb ;};_aee .TemplateID =_dbfe ;_aee .RegionInfo .BitmapWidth =_gbd ;_aee .RegionInfo .BitmapHeight =_dfa ;_aee .ReferenceBitmap =_gda ;_aee .ReferenceDX =_bce ;_aee .ReferenceDY =_gce ;_aee .IsTPGROn =_cdc ;_aee .GrAtX =_fbga ;_aee .GrAtY =_fab ;_aee .RegionBitmap =nil ;_fcb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_aee );};func (_eded *SymbolDictionary )decodeNewSymbols (_gefcc ,_gbgd uint32 ,_agecf *_e .Bitmap ,_bdcf ,_efcg int32 )error {if _eded ._dbdd ==nil {_eded ._dbdd =_fbe (_eded ._gae ,nil );if _eded ._ggbf ==nil {var _bfgdb error ;_eded ._ggbf ,_bfgdb =_bg .New (_eded ._gae );if _bfgdb !=nil {return _bfgdb ;};};if _eded ._ffc ==nil {_eded ._ffc =_bg .NewStats (65536,1);};};_eded ._dbdd .setParameters (_eded ._ffc ,_eded ._ggbf ,_eded .SdrTemplate ,_gefcc ,_gbgd ,_agecf ,_bdcf ,_efcg ,false ,_eded .SdrATX ,_eded .SdrATY );return _eded .addSymbol (_eded ._dbdd );};func (_fegg *TextRegion )createRegionBitmap ()error {_fegg .RegionBitmap =_e .New (int (_fegg .RegionInfo .BitmapWidth ),int (_fegg .RegionInfo .BitmapHeight ));if _fegg .DefaultPixel !=0{_fegg .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_ffab *TextRegion )setCodingStatistics ()error {if _ffab ._cdgb ==nil {_ffab ._cdgb =_bg .NewStats (512,1);};if _ffab ._fcac ==nil {_ffab ._fcac =_bg .NewStats (512,1);};if _ffab ._bgbf ==nil {_ffab ._bgbf =_bg .NewStats (512,1);};if _ffab ._dacc ==nil {_ffab ._dacc =_bg .NewStats (512,1);};if _ffab ._cdec ==nil {_ffab ._cdec =_bg .NewStats (512,1);};if _ffab ._ededd ==nil {_ffab ._ededd =_bg .NewStats (512,1);};if _ffab ._geef ==nil {_ffab ._geef =_bg .NewStats (512,1);};if _ffab ._adbef ==nil {_ffab ._adbef =_bg .NewStats (1<<uint (_ffab ._fbdba ),1);};if _ffab ._fgdc ==nil {_ffab ._fgdc =_bg .NewStats (512,1);};if _ffab ._abddd ==nil {_ffab ._abddd =_bg .NewStats (512,1);};if _ffab ._ggcc ==nil {var _dedc error ;_ffab ._ggcc ,_dedc =_bg .New (_ffab ._fgfcg );if _dedc !=nil {return _dedc ;};};return nil ;};func (_ece *template0 )setIndex (_faff *_bg .DecoderStats ){_faff .SetIndex (0x100)};func (_gdf *HalftoneRegion )computeX (_ddfe ,_eba int )int {return _gdf .shiftAndFill (int (_gdf .HGridX )+_ddfe *int (_gdf .HRegionY )+_eba *int (_gdf .HRegionX ));};var _ templater =&template0 {};func (_ggef *GenericRegion )decodeTemplate3 (_ecga ,_agbf ,_eeb int ,_fggd ,_aafc int )(_gadf error ){const _cda ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_bbbg ,_bag int ;_fgd int ;_bgbg byte ;_adcb ,_faga int ;);if _ecga >=1{_bgbg ,_gadf =_ggef .Bitmap .GetByte (_aafc );if _gadf !=nil {return _dg .Wrap (_gadf ,_cda ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fgd =int (_bgbg );};_bbbg =(_fgd >>1)&0x70;for _fac :=0;_fac < _eeb ;_fac =_adcb {var (_fbea byte ;_gde int ;);_adcb =_fac +8;if _bad :=_agbf -_fac ;_bad > 8{_gde =8;}else {_gde =_bad ;};if _ecga >=1{_fgd <<=8;if _adcb < _agbf {_bgbg ,_gadf =_ggef .Bitmap .GetByte (_aafc +1);if _gadf !=nil {return _dg .Wrap (_gadf ,_cda ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_fgd |=int (_bgbg );};};for _gfdg :=0;_gfdg < _gde ;_gfdg ++{if _ggef ._begf {_bag =_ggef .overrideAtTemplate3 (_bbbg ,_fac +_gfdg ,_ecga ,int (_fbea ),_gfdg );_ggef ._fdbb .SetIndex (int32 (_bag ));}else {_ggef ._fdbb .SetIndex (int32 (_bbbg ));};_faga ,_gadf =_ggef ._agb .DecodeBit (_ggef ._fdbb );if _gadf !=nil {return _dg .Wrap (_gadf ,_cda ,"");};_fbea |=byte (_faga )<<byte (7-_gfdg );_bbbg =((_bbbg &0x1f7)<<1)|_faga |((_fgd >>uint (8-_gfdg ))&0x010);};if _fedg :=_ggef .Bitmap .SetByte (_fggd ,_fbea );_fedg !=nil {return _dg .Wrap (_fedg ,_cda ,"");};_fggd ++;_aafc ++;};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_baef *PageInformationSegment )readResolution ()error {_dgce ,_bfa :=_baef ._ccdd .ReadBits (32);if _bfa !=nil {return _bfa ;};_baef .ResolutionX =int (_dgce &_g .MaxInt32 );_dgce ,_bfa =_baef ._ccdd .ReadBits (32);if _bfa !=nil {return _bfa ;};_baef .ResolutionY =int (_dgce &_g .MaxInt32 );return nil ;};func (_a *EndOfStripe )LineNumber ()int {return _a ._fd };func (_age *HalftoneRegion )combineGrayscalePlanes (_aaaf []*_e .Bitmap ,_ddd int )error {_eab :=0;for _daa :=0;_daa < _aaaf [_ddd ].Height ;_daa ++{for _gcd :=0;_gcd < _aaaf [_ddd ].Width ;_gcd +=8{_ecf ,_cge :=_aaaf [_ddd +1].GetByte (_eab );if _cge !=nil {return _cge ;};_gffd ,_cge :=_aaaf [_ddd ].GetByte (_eab );if _cge !=nil {return _cge ;};_cge =_aaaf [_ddd ].SetByte (_eab ,_e .CombineBytes (_gffd ,_ecf ,_e .CmbOpXor ));if _cge !=nil {return _cge ;};_eab ++;};};return nil ;};func (_fdag *Header )writeSegmentPageAssociation (_bggdd _fb .BinaryWriter )(_bgef int ,_gdee error ){const _dbd ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _fdag .pageSize ()!=4{if _gdee =_bggdd .WriteByte (byte (_fdag .PageAssociation ));_gdee !=nil {return 0,_dg .Wrap (_gdee ,_dbd ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_gcgaa :=make ([]byte ,4);_da .BigEndian .PutUint32 (_gcgaa ,uint32 (_fdag .PageAssociation ));if _bgef ,_gdee =_bggdd .Write (_gcgaa );_gdee !=nil {return 0,_dg .Wrap (_gdee ,_dbd ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _bgef ,nil ;};func (_ffec *TextRegion )readHuffmanFlags ()error {var (_decff int ;_gfdc uint64 ;_gbfaf error ;);_ ,_gbfaf =_ffec ._fgfcg .ReadBit ();if _gbfaf !=nil {return _gbfaf ;};_decff ,_gbfaf =_ffec ._fgfcg .ReadBit ();if _gbfaf !=nil {return _gbfaf ;};_ffec .SbHuffRSize =int8 (_decff );_gfdc ,_gbfaf =_ffec ._fgfcg .ReadBits (2);if _gbfaf !=nil {return _gbfaf ;};_ffec .SbHuffRDY =int8 (_gfdc )&0xf;_gfdc ,_gbfaf =_ffec ._fgfcg .ReadBits (2);if _gbfaf !=nil {return _gbfaf ;};_ffec .SbHuffRDX =int8 (_gfdc )&0xf;_gfdc ,_gbfaf =_ffec ._fgfcg .ReadBits (2);if _gbfaf !=nil {return _gbfaf ;};_ffec .SbHuffRDHeight =int8 (_gfdc )&0xf;_gfdc ,_gbfaf =_ffec ._fgfcg .ReadBits (2);if _gbfaf !=nil {return _gbfaf ;};_ffec .SbHuffRDWidth =int8 (_gfdc )&0xf;_gfdc ,_gbfaf =_ffec ._fgfcg .ReadBits (2);if _gbfaf !=nil {return _gbfaf ;};_ffec .SbHuffDT =int8 (_gfdc )&0xf;_gfdc ,_gbfaf =_ffec ._fgfcg .ReadBits (2);if _gbfaf !=nil {return _gbfaf ;};_ffec .SbHuffDS =int8 (_gfdc )&0xf;_gfdc ,_gbfaf =_ffec ._fgfcg .ReadBits (2);if _gbfaf !=nil {return _gbfaf ;};_ffec .SbHuffFS =int8 (_gfdc )&0xf;return nil ;};type Segmenter interface{Init (_abab *Header ,_gadc _fb .StreamReader )error ;};func (_dabb *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_fegf ,_cgbc :=_dabb ._ccdd .ReadBit ();if _cgbc !=nil {return _cgbc ;};if _fegf ==1{_dabb ._aefg =true ;};return nil ;};func (_cce *Header )readReferredToSegmentNumbers (_cbfc _fb .StreamReader ,_adga int )([]int ,error ){const _fcbd ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_edfg :=make ([]int ,_adga );if _adga > 0{_cce .RTSegments =make ([]*Header ,_adga );var (_abe uint64 ;_fce error ;);for _gbfg :=0;_gbfg < _adga ;_gbfg ++{_abe ,_fce =_cbfc .ReadBits (byte (_cce .referenceSize ())<<3);if _fce !=nil {return nil ,_dg .Wrapf (_fce ,_fcbd ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_gbfg );};_edfg [_gbfg ]=int (_abe &_g .MaxInt32 );};};return _edfg ,nil ;};func (_aeae *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_aeaf int ;_ccde int32 ;_bfge error ;_babe =int32 (_aeae ._bgcgd +_aeae .NumberOfNewSymbols );_bgad =make ([]int ,_babe ););for _bbce :=int32 (0);_bbce < _babe ;_bbce +=_ccde {if _aeae .IsHuffmanEncoded {_efcea ,_eeabd :=_eb .GetStandardTable (1);if _eeabd !=nil {return nil ,_eeabd ;};_feea ,_eeabd :=_efcea .Decode (_aeae ._gae );if _eeabd !=nil {return nil ,_eeabd ;};_ccde =int32 (_feea );}else {_ccde ,_bfge =_aeae ._ggbf .DecodeInt (_aeae ._cgfc );if _bfge !=nil {return nil ,_bfge ;};};if _ccde !=0{for _bbcb :=_bbce ;_bbcb < _bbce +_ccde ;_bbcb ++{_bgad [_bbcb ]=_aeaf ;};};if _aeaf ==0{_aeaf =1;}else {_aeaf =0;};};return _bgad ,nil ;};func (_fdf *GenericRefinementRegion )updateOverride ()error {if _fdf .GrAtX ==nil ||_fdf .GrAtY ==nil {return _ge .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_fdf .GrAtX )!=len (_fdf .GrAtY ){return _ge .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_fdf ._dgbg =make ([]bool ,len (_fdf .GrAtX ));switch _fdf .TemplateID {case 0:if _fdf .GrAtX [0]!=-1&&_fdf .GrAtY [0]!=-1{_fdf ._dgbg [0]=true ;_fdf ._edf =true ;};if _fdf .GrAtX [1]!=-1&&_fdf .GrAtY [1]!=-1{_fdf ._dgbg [1]=true ;_fdf ._edf =true ;};case 1:_fdf ._edf =false ;};return nil ;};func (_cded *GenericRegion )GetRegionBitmap ()(_cgb *_e .Bitmap ,_bgaf error ){if _cded .Bitmap !=nil {return _cded .Bitmap ,nil ;};if _cded .IsMMREncoded {if _cded ._edeb ==nil {_cded ._edeb ,_bgaf =_c .New (_cded ._bga ,int (_cded .RegionSegment .BitmapWidth ),int (_cded .RegionSegment .BitmapHeight ),_cded .DataOffset ,_cded .DataLength );if _bgaf !=nil {return nil ,_bgaf ;};};_cded .Bitmap ,_bgaf =_cded ._edeb .UncompressMMR ();return _cded .Bitmap ,_bgaf ;};if _bgaf =_cded .updateOverrideFlags ();_bgaf !=nil {return nil ,_bgaf ;};var _eca int ;if _cded ._agb ==nil {_cded ._agb ,_bgaf =_bg .New (_cded ._bga );if _bgaf !=nil {return nil ,_bgaf ;};};if _cded ._fdbb ==nil {_cded ._fdbb =_bg .NewStats (65536,1);};_cded .Bitmap =_e .New (int (_cded .RegionSegment .BitmapWidth ),int (_cded .RegionSegment .BitmapHeight ));_dbb :=int (uint32 (_cded .Bitmap .Width +7)&(^uint32 (7)));for _ecc :=0;_ecc < _cded .Bitmap .Height ;_ecc ++{if _cded .IsTPGDon {var _fge int ;_fge ,_bgaf =_cded .decodeSLTP ();if _bgaf !=nil {return nil ,_bgaf ;};_eca ^=_fge ;};if _eca ==1{if _ecc > 0{if _bgaf =_cded .copyLineAbove (_ecc );_bgaf !=nil {return nil ,_bgaf ;};};}else {if _bgaf =_cded .decodeLine (_ecc ,_cded .Bitmap .Width ,_dbb );_bgaf !=nil {return nil ,_bgaf ;};};};return _cded .Bitmap ,nil ;};func (_ga *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ga .RegionInfo };func (_fbfc *TextRegion )decodeRdy ()(int64 ,error ){const _bgeaa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _fbfc .IsHuffmanEncoded {if _fbfc .SbHuffRDY ==3{if _fbfc ._bede ==nil {var (_bafe int ;_aeeea error ;);if _fbfc .SbHuffFS ==3{_bafe ++;};if _fbfc .SbHuffDS ==3{_bafe ++;};if _fbfc .SbHuffDT ==3{_bafe ++;};if _fbfc .SbHuffRDWidth ==3{_bafe ++;};if _fbfc .SbHuffRDHeight ==3{_bafe ++;};if _fbfc .SbHuffRDX ==3{_bafe ++;};_fbfc ._bede ,_aeeea =_fbfc .getUserTable (_bafe );if _aeeea !=nil {return 0,_dg .Wrap (_aeeea ,_bgeaa ,"");};};return _fbfc ._bede .Decode (_fbfc ._fgfcg );};_eccd ,_gdfa :=_eb .GetStandardTable (14+int (_fbfc .SbHuffRDY ));if _gdfa !=nil {return 0,_gdfa ;};return _eccd .Decode (_fbfc ._fgfcg );};_dace ,_bafa :=_fbfc ._ggcc .DecodeInt (_fbfc ._abddd );if _bafa !=nil {return 0,_dg .Wrap (_bafa ,_bgeaa ,"");};return int64 (_dace ),nil ;};func (_bfd *Header )readNumberOfReferredToSegments (_fafa _fb .StreamReader )(uint64 ,error ){const _aea ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_efd ,_adb :=_fafa .ReadBits (3);if _adb !=nil {return 0,_dg .Wrap (_adb ,_aea ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_efd &=0xf;var _fgfc []byte ;if _efd <=4{_fgfc =make ([]byte ,5);for _eedc :=0;_eedc <=4;_eedc ++{_fdbd ,_cbd :=_fafa .ReadBit ();if _cbd !=nil {return 0,_dg .Wrap (_cbd ,_aea ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fgfc [_eedc ]=byte (_fdbd );};}else {_efd ,_adb =_fafa .ReadBits (29);if _adb !=nil {return 0,_adb ;};_efd &=_g .MaxInt32 ;_abcc :=(_efd +8)>>3;_abcc <<=3;_fgfc =make ([]byte ,_abcc );var _ggbc uint64 ;for _ggbc =0;_ggbc < _abcc ;_ggbc ++{_faef ,_gac :=_fafa .ReadBit ();if _gac !=nil {return 0,_dg .Wrap (_gac ,_aea ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fgfc [_ggbc ]=byte (_faef );};};return _efd ,nil ;};func (_adbe *PageInformationSegment )checkInput ()error {if _adbe .PageBMHeight ==_g .MaxInt32 {if !_adbe .IsStripe {_fcb .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func (_agfa *PageInformationSegment )readDefaultPixelValue ()error {_bbfc ,_geeb :=_agfa ._ccdd .ReadBit ();if _geeb !=nil {return _geeb ;};_agfa ._dfag =uint8 (_bbfc &0xf);return nil ;};func (_gbe *GenericRegion )writeGBAtPixels (_ecag _fb .BinaryWriter )(_aaee int ,_gddb error ){const _cfea ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _gbe .UseMMR {return 0,nil ;};_cfd :=1;if _gbe .GBTemplate ==0{_cfd =4;}else if _gbe .UseExtTemplates {_cfd =12;};if len (_gbe .GBAtX )!=_cfd {return 0,_dg .Errorf (_cfea ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_gbe .GBAtY )!=_cfd {return 0,_dg .Errorf (_cfea ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _gedg :=0;_gedg < _cfd ;_gedg ++{if _gddb =_ecag .WriteByte (byte (_gbe .GBAtX [_gedg ]));_gddb !=nil {return _aaee ,_dg .Wrap (_gddb ,_cfea ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_aaee ++;if _gddb =_ecag .WriteByte (byte (_gbe .GBAtY [_gedg ]));_gddb !=nil {return _aaee ,_dg .Wrap (_gddb ,_cfea ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_aaee ++;};return _aaee ,nil ;};func (_cg *template1 )setIndex (_fbb *_bg .DecoderStats ){_fbb .SetIndex (0x080)};func (_gadb *GenericRegion )decodeTemplate2 (_dabe ,_dbg ,_cfef int ,_cee ,_fcd int )(_caggg error ){const _ecca ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_acda ,_fbec int ;_dded ,_gdga int ;_bfcd byte ;_dcbe ,_bgeg int ;);if _dabe >=1{_bfcd ,_caggg =_gadb .Bitmap .GetByte (_fcd );if _caggg !=nil {return _dg .Wrap (_caggg ,_ecca ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_dded =int (_bfcd );};if _dabe >=2{_bfcd ,_caggg =_gadb .Bitmap .GetByte (_fcd -_gadb .Bitmap .RowStride );if _caggg !=nil {return _dg .Wrap (_caggg ,_ecca ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gdga =int (_bfcd )<<4;};_acda =(_dded >>3&0x7c)|(_gdga >>3&0x380);for _bdac :=0;_bdac < _cfef ;_bdac =_dcbe {var (_gfcg byte ;_aadf int ;);_dcbe =_bdac +8;if _ffef :=_dbg -_bdac ;_ffef > 8{_aadf =8;}else {_aadf =_ffef ;};if _dabe > 0{_dded <<=8;if _dcbe < _dbg {_bfcd ,_caggg =_gadb .Bitmap .GetByte (_fcd +1);if _caggg !=nil {return _dg .Wrap (_caggg ,_ecca ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_dded |=int (_bfcd );};};if _dabe > 1{_gdga <<=8;if _dcbe < _dbg {_bfcd ,_caggg =_gadb .Bitmap .GetByte (_fcd -_gadb .Bitmap .RowStride +1);if _caggg !=nil {return _dg .Wrap (_caggg ,_ecca ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_gdga |=int (_bfcd )<<4;};};for _caaac :=0;_caaac < _aadf ;_caaac ++{_fae :=uint (10-_caaac );if _gadb ._begf {_fbec =_gadb .overrideAtTemplate2 (_acda ,_bdac +_caaac ,_dabe ,int (_gfcg ),_caaac );_gadb ._fdbb .SetIndex (int32 (_fbec ));}else {_gadb ._fdbb .SetIndex (int32 (_acda ));};_bgeg ,_caggg =_gadb ._agb .DecodeBit (_gadb ._fdbb );if _caggg !=nil {return _dg .Wrap (_caggg ,_ecca ,"");};_gfcg |=byte (_bgeg <<uint (7-_caaac ));_acda =((_acda &0x1bd)<<1)|_bgeg |((_dded >>_fae )&0x4)|((_gdga >>_fae )&0x80);};if _dgge :=_gadb .Bitmap .SetByte (_cee ,_gfcg );_dgge !=nil {return _dg .Wrap (_dgge ,_ecca ,"");};_cee ++;_fcd ++;};return nil ;};func (_ddff *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _ddff .RegionSegment };func (_cegd *PageInformationSegment )encodeStripingInformation (_aabf _fb .BinaryWriter )(_bdea int ,_afbb error ){const _ffefe ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_cegd .IsStripe {if _bdea ,_afbb =_aabf .Write ([]byte {0x00,0x00});_afbb !=nil {return 0,_dg .Wrap (_afbb ,_ffefe ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _bdea ,nil ;};_def :=make ([]byte ,2);_da .BigEndian .PutUint16 (_def ,_cegd .MaxStripeSize |1<<15);if _bdea ,_afbb =_aabf .Write (_def );_afbb !=nil {return 0,_dg .Wrapf (_afbb ,_ffefe ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_cegd .MaxStripeSize );};return _bdea ,nil ;};func (_fabe *Header )GetSegmentData ()(Segmenter ,error ){var _cbe Segmenter ;if _fabe .SegmentData !=nil {_cbe =_fabe .SegmentData ;};if _cbe ==nil {_geb ,_fbfe :=_ecba [_fabe .Type ];if !_fbfe {return nil ,_fc .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_fabe .Type ,_fabe .Type );};_cbe =_geb ();_fcb .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_fabe .SegmentNumber ,_fabe .SegmentDataStartOffset );_dadg ,_fbagb :=_fabe .subInputReader ();if _fbagb !=nil {return nil ,_fbagb ;};if _ddge :=_cbe .Init (_fabe ,_dadg );_ddge !=nil {_fcb .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_ddge ,_cbe );return nil ,_ddge ;};_fabe .SegmentData =_cbe ;};return _cbe ,nil ;};func (_dbgg *TableSegment )Init (h *Header ,r _fb .StreamReader )error {_dbgg ._cbeg =r ;return _dbgg .parseHeader ();};const BorderSize =6;func NewRegionSegment (r _fb .StreamReader )*RegionSegment {return &RegionSegment {_eabc :r }};func (_dfdf *PageInformationSegment )Size ()int {return 19};func (_aaa *template1 )form (_beg ,_abde ,_adaf ,_aad ,_adagc int16 )int16 {return ((_beg &0x02)<<8)|(_abde <<6)|((_adaf &0x03)<<4)|(_aad <<1)|_adagc ;};func (_abfe *TextRegion )decodeRdw ()(int64 ,error ){const _befc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _abfe .IsHuffmanEncoded {if _abfe .SbHuffRDWidth ==3{if _abfe ._abbc ==nil {var (_fdded int ;_dbaf error ;);if _abfe .SbHuffFS ==3{_fdded ++;};if _abfe .SbHuffDS ==3{_fdded ++;};if _abfe .SbHuffDT ==3{_fdded ++;};_abfe ._abbc ,_dbaf =_abfe .getUserTable (_fdded );if _dbaf !=nil {return 0,_dg .Wrap (_dbaf ,_befc ,"");};};return _abfe ._abbc .Decode (_abfe ._fgfcg );};_eggbc ,_bfadaa :=_eb .GetStandardTable (14+int (_abfe .SbHuffRDWidth ));if _bfadaa !=nil {return 0,_dg .Wrap (_bfadaa ,_befc ,"");};return _eggbc .Decode (_abfe ._fgfcg );};_eadf ,_fbef :=_abfe ._ggcc .DecodeInt (_abfe ._ededd );if _fbef !=nil {return 0,_dg .Wrap (_fbef ,_befc ,"");};return int64 (_eadf ),nil ;};func (_cac *GenericRegion )setParametersMMR (_feaf bool ,_fabd ,_bgfg int64 ,_gcab ,_agg uint32 ,_aece byte ,_eceb ,_cbcd bool ,_afb ,_fcg []int8 ){_cac .DataOffset =_fabd ;_cac .DataLength =_bgfg ;_cac .RegionSegment =&RegionSegment {};_cac .RegionSegment .BitmapHeight =_gcab ;_cac .RegionSegment .BitmapWidth =_agg ;_cac .GBTemplate =_aece ;_cac .IsMMREncoded =_feaf ;_cac .IsTPGDon =_eceb ;_cac .GBAtX =_afb ;_cac .GBAtY =_fcg ;};func (_ecaa *PatternDictionary )extractPatterns (_dcff *_e .Bitmap )error {var _caeg int ;_acb :=make ([]*_e .Bitmap ,_ecaa .GrayMax +1);for _caeg <=int (_ecaa .GrayMax ){_fee :=int (_ecaa .HdpWidth )*_caeg ;_cfc :=_gb .Rect (_fee ,0,_fee +int (_ecaa .HdpWidth ),int (_ecaa .HdpHeight ));_aggge ,_ace :=_e .Extract (_cfc ,_dcff );if _ace !=nil {return _ace ;};_acb [_caeg ]=_aggge ;_caeg ++;};_ecaa .Patterns =_acb ;return nil ;};func (_ffdb *TableSegment )HtHigh ()int32 {return _ffdb ._ggbb };func (_degb *Header )subInputReader ()(_fb .StreamReader ,error ){return _fb .NewSubstreamReader (_degb .Reader ,_degb .SegmentDataStartOffset ,_degb .SegmentDataLength );};func (_egbc *TextRegion )Encode (w _fb .BinaryWriter )(_afbc int ,_egdb error ){const _eeec ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _afbc ,_egdb =_egbc .RegionInfo .Encode (w );_egdb !=nil {return _afbc ,_dg .Wrap (_egdb ,_eeec ,"");};var _fbbg int ;if _fbbg ,_egdb =_egbc .encodeFlags (w );_egdb !=nil {return _afbc ,_dg .Wrap (_egdb ,_eeec ,"");};_afbc +=_fbbg ;if _fbbg ,_egdb =_egbc .encodeSymbols (w );_egdb !=nil {return _afbc ,_dg .Wrap (_egdb ,_eeec ,"");};_afbc +=_fbbg ;return _afbc ,nil ;};func (_ecac *PageInformationSegment )readContainsRefinement ()error {_gfbbg ,_bbac :=_ecac ._ccdd .ReadBit ();if _bbac !=nil {return _bbac ;};if _gfbbg ==1{_ecac ._gdfc =true ;};return nil ;};func (_aff *GenericRefinementRegion )String ()string {_egb :=&_f .Builder {};_egb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_egb .WriteString (_aff .RegionInfo .String ()+"\u000a");_egb .WriteString (_fc .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_aff .IsTPGROn ));_egb .WriteString (_fc .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_aff .TemplateID ));_egb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_aff .GrAtX ));_egb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_aff .GrAtY ));_egb .WriteString (_fc .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_aff .ReferenceDX ));_egb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_aff .ReferenceDY ));return _egb .String ();};func (_cgeg *TextRegion )decodeRdh ()(int64 ,error ){const _gead ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _cgeg .IsHuffmanEncoded {if _cgeg .SbHuffRDHeight ==3{if _cgeg ._dfe ==nil {var (_fadee int ;_gab error ;);if _cgeg .SbHuffFS ==3{_fadee ++;};if _cgeg .SbHuffDS ==3{_fadee ++;};if _cgeg .SbHuffDT ==3{_fadee ++;};if _cgeg .SbHuffRDWidth ==3{_fadee ++;};_cgeg ._dfe ,_gab =_cgeg .getUserTable (_fadee );if _gab !=nil {return 0,_dg .Wrap (_gab ,_gead ,"");};};return _cgeg ._dfe .Decode (_cgeg ._fgfcg );};_cegfe ,_dgagd :=_eb .GetStandardTable (14+int (_cgeg .SbHuffRDHeight ));if _dgagd !=nil {return 0,_dg .Wrap (_dgagd ,_gead ,"");};return _cegfe .Decode (_cgeg ._fgfcg );};_ffbb ,_bcgc :=_cgeg ._ggcc .DecodeInt (_cgeg ._geef );if _bcgc !=nil {return 0,_dg .Wrap (_bcgc ,_gead ,"");};return int64 (_ffbb ),nil ;};type RegionSegment struct{_eabc _fb .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _e .CombinationOperator ;};func (_eaa *Header )writeFlags (_cea _fb .BinaryWriter )(_cbfce error ){const _addb ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_bgfe :=byte (_eaa .Type );if _cbfce =_cea .WriteByte (_bgfe );_cbfce !=nil {return _dg .Wrap (_cbfce ,_addb ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_eaa .RetainFlag &&!_eaa .PageAssociationFieldSize {return nil ;};if _cbfce =_cea .SkipBits (-8);_cbfce !=nil {return _dg .Wrap (_cbfce ,_addb ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _cbga int ;if _eaa .RetainFlag {_cbga =1;};if _cbfce =_cea .WriteBit (_cbga );_cbfce !=nil {return _dg .Wrap (_cbfce ,_addb ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_cbga =0;if _eaa .PageAssociationFieldSize {_cbga =1;};if _cbfce =_cea .WriteBit (_cbga );_cbfce !=nil {return _dg .Wrap (_cbfce ,_addb ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_cea .FinishByte ();return nil ;};func (_dfda *SymbolDictionary )Encode (w _fb .BinaryWriter )(_bfea int ,_fbbb error ){const _aegc ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _dfda ==nil {return 0,_dg .Error (_aegc ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bfea ,_fbbb =_dfda .encodeFlags (w );_fbbb !=nil {return _bfea ,_dg .Wrap (_fbbb ,_aegc ,"");};_aege ,_fbbb :=_dfda .encodeATFlags (w );if _fbbb !=nil {return _bfea ,_dg .Wrap (_fbbb ,_aegc ,"");};_bfea +=_aege ;if _aege ,_fbbb =_dfda .encodeRefinementATFlags (w );_fbbb !=nil {return _bfea ,_dg .Wrap (_fbbb ,_aegc ,"");};_bfea +=_aege ;if _aege ,_fbbb =_dfda .encodeNumSyms (w );_fbbb !=nil {return _bfea ,_dg .Wrap (_fbbb ,_aegc ,"");};_bfea +=_aege ;if _aege ,_fbbb =_dfda .encodeSymbols (w );_fbbb !=nil {return _bfea ,_dg .Wrap (_fbbb ,_aegc ,"");};_bfea +=_aege ;return _bfea ,nil ;};func (_cbae *TextRegion )symbolIDCodeLengths ()error {var (_gada []*_eb .Code ;_cbded uint64 ;_ebddc _eb .Tabler ;_baed error ;);for _eedd :=0;_eedd < 35;_eedd ++{_cbded ,_baed =_cbae ._fgfcg .ReadBits (4);if _baed !=nil {return _baed ;};_dbadb :=int (_cbded &0xf);if _dbadb > 0{_gada =append (_gada ,_eb .NewCode (int32 (_dbadb ),0,int32 (_eedd ),false ));};};_ebddc ,_baed =_eb .NewFixedSizeTable (_gada );if _baed !=nil {return _baed ;};var (_ggccd int64 ;_gddfc uint32 ;_afcad []*_eb .Code ;_bfcbe int64 ;);for _gddfc < _cbae .NumberOfSymbols {_bfcbe ,_baed =_ebddc .Decode (_cbae ._fgfcg );if _baed !=nil {return _baed ;};if _bfcbe < 32{if _bfcbe > 0{_afcad =append (_afcad ,_eb .NewCode (int32 (_bfcbe ),0,int32 (_gddfc ),false ));};_ggccd =_bfcbe ;_gddfc ++;}else {var _fbagf ,_dbdg int64 ;switch _bfcbe {case 32:_cbded ,_baed =_cbae ._fgfcg .ReadBits (2);if _baed !=nil {return _baed ;};_fbagf =3+int64 (_cbded );if _gddfc > 0{_dbdg =_ggccd ;};case 33:_cbded ,_baed =_cbae ._fgfcg .ReadBits (3);if _baed !=nil {return _baed ;};_fbagf =3+int64 (_cbded );case 34:_cbded ,_baed =_cbae ._fgfcg .ReadBits (7);if _baed !=nil {return _baed ;};_fbagf =11+int64 (_cbded );};for _adee :=0;_adee < int (_fbagf );_adee ++{if _dbdg > 0{_afcad =append (_afcad ,_eb .NewCode (int32 (_dbdg ),0,int32 (_gddfc ),false ));};_gddfc ++;};};};_cbae ._fgfcg .Align ();_cbae ._ddbf ,_baed =_eb .NewFixedSizeTable (_afcad );return _baed ;};func (_bebc *Header )readSegmentDataLength (_aed _fb .StreamReader )(_dfdb error ){_bebc .SegmentDataLength ,_dfdb =_aed .ReadBits (32);if _dfdb !=nil {return _dfdb ;};_bebc .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_ff *EndOfStripe )Init (h *Header ,r _fb .StreamReader )error {_ff ._dgb =r ;return _ff .parseHeader (h ,r );};type template0 struct{};func (_cedc *TextRegion )computeSymbolCodeLength ()error {if _cedc .IsHuffmanEncoded {return _cedc .symbolIDCodeLengths ();};_cedc ._fbdba =int8 (_g .Ceil (_g .Log (float64 (_cedc .NumberOfSymbols ))/_g .Log (2)));return nil ;};func (_agec *PageInformationSegment )readCombinationOperator ()error {_edee ,_fade :=_agec ._ccdd .ReadBits (2);if _fade !=nil {return _fade ;};_agec ._ceca =_e .CombinationOperator (int (_edee ));return nil ;};func (_edebd *TextRegion )decodeRI ()(int64 ,error ){if !_edebd .UseRefinement {return 0,nil ;};if _edebd .IsHuffmanEncoded {_aaba ,_bgafd :=_edebd ._fgfcg .ReadBit ();return int64 (_aaba ),_bgafd ;};_gccec ,_fdefb :=_edebd ._ggcc .DecodeInt (_edebd ._cdec );return int64 (_gccec ),_fdefb ;};func (_dcae *HalftoneRegion )renderPattern (_acdc [][]int )(_fbf error ){var _gbb ,_fcf int ;for _geee :=0;_geee < int (_dcae .HGridHeight );_geee ++{for _cgg :=0;_cgg < int (_dcae .HGridWidth );_cgg ++{_gbb =_dcae .computeX (_geee ,_cgg );_fcf =_dcae .computeY (_geee ,_cgg );_aeecb :=_dcae .Patterns [_acdc [_geee ][_cgg ]];if _fbf =_e .Blit (_aeecb ,_dcae .HalftoneRegionBitmap ,_gbb +int (_dcae .HGridX ),_fcf +int (_dcae .HGridY ),_dcae .CombinationOperator );_fbf !=nil {return _fbf ;};};};return nil ;};func (_aba *GenericRefinementRegion )decodeSLTP ()(int ,error ){_aba .Template .setIndex (_aba ._gd );return _aba ._ec .DecodeBit (_aba ._gd );};func _fbe (_aeg _fb .StreamReader ,_fcca *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ae :_aeg ,RegionInfo :NewRegionSegment (_aeg ),_ed :_fcca ,_gfg :&template0 {},_fa :&template1 {}};};func (_cffd *SymbolDictionary )GetDictionary ()([]*_e .Bitmap ,error ){_fcb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_fcb .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_fcb .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_cffd ._deca ,_cffd ._bdga );}();if _cffd ._deca ==nil {var _cdeg error ;if _cffd .UseRefinementAggregation {_cffd ._cddd =_cffd .getSbSymCodeLen ();};if !_cffd .IsHuffmanEncoded {if _cdeg =_cffd .setCodingStatistics ();_cdeg !=nil {return nil ,_cdeg ;};};_cffd ._bdga =make ([]*_e .Bitmap ,_cffd .NumberOfNewSymbols );var _fdbf []int ;if _cffd .IsHuffmanEncoded &&!_cffd .UseRefinementAggregation {_fdbf =make ([]int ,_cffd .NumberOfNewSymbols );};if _cdeg =_cffd .setSymbolsArray ();_cdeg !=nil {return nil ,_cdeg ;};var _abb ,_gbde int64 ;_cffd ._aedb =0;for _cffd ._aedb < _cffd .NumberOfNewSymbols {_gbde ,_cdeg =_cffd .decodeHeightClassDeltaHeight ();if _cdeg !=nil {return nil ,_cdeg ;};_abb +=_gbde ;var _ccdc ,_ebbg uint32 ;_caegg :=int64 (_cffd ._aedb );for {var _egd int64 ;_egd ,_cdeg =_cffd .decodeDifferenceWidth ();if _cdeg !=nil {return nil ,_cdeg ;};if _egd ==int64 (_g .MaxInt64 )||_cffd ._aedb >=_cffd .NumberOfNewSymbols {break ;};_ccdc +=uint32 (_egd );_ebbg +=_ccdc ;if !_cffd .IsHuffmanEncoded ||_cffd .UseRefinementAggregation {if !_cffd .UseRefinementAggregation {_cdeg =_cffd .decodeDirectlyThroughGenericRegion (_ccdc ,uint32 (_abb ));if _cdeg !=nil {return nil ,_cdeg ;};}else {_cdeg =_cffd .decodeAggregate (_ccdc ,uint32 (_abb ));if _cdeg !=nil {return nil ,_cdeg ;};};}else if _cffd .IsHuffmanEncoded &&!_cffd .UseRefinementAggregation {_fdbf [_cffd ._aedb ]=int (_ccdc );};_cffd ._aedb ++;};if _cffd .IsHuffmanEncoded &&!_cffd .UseRefinementAggregation {var _agbc int64 ;if _cffd .SdHuffBMSizeSelection ==0{var _bgfd _eb .Tabler ;_bgfd ,_cdeg =_eb .GetStandardTable (1);if _cdeg !=nil {return nil ,_cdeg ;};_agbc ,_cdeg =_bgfd .Decode (_cffd ._gae );if _cdeg !=nil {return nil ,_cdeg ;};}else {_agbc ,_cdeg =_cffd .huffDecodeBmSize ();if _cdeg !=nil {return nil ,_cdeg ;};};_cffd ._gae .Align ();var _adfag *_e .Bitmap ;_adfag ,_cdeg =_cffd .decodeHeightClassCollectiveBitmap (_agbc ,uint32 (_abb ),_ebbg );if _cdeg !=nil {return nil ,_cdeg ;};_cdeg =_cffd .decodeHeightClassBitmap (_adfag ,_caegg ,int (_abb ),_fdbf );if _cdeg !=nil {return nil ,_cdeg ;};};};_fcaa ,_cdeg :=_cffd .getToExportFlags ();if _cdeg !=nil {return nil ,_cdeg ;};_cffd .setExportedSymbols (_fcaa );};return _cffd ._deca ,nil ;};func (_cfg *Header )writeReferredToCount (_cabe _fb .BinaryWriter )(_gfbg int ,_fgefe error ){const _ebb ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_cfg .RTSNumbers =make ([]int ,len (_cfg .RTSegments ));for _adec ,_fcdbg :=range _cfg .RTSegments {_cfg .RTSNumbers [_adec ]=int (_fcdbg .SegmentNumber );};if len (_cfg .RTSNumbers )<=4{var _gcgf byte ;if len (_cfg .RetainBits )>=1{_gcgf =byte (_cfg .RetainBits [0]);};_gcgf |=byte (len (_cfg .RTSNumbers ))<<5;if _fgefe =_cabe .WriteByte (_gcgf );_fgefe !=nil {return 0,_dg .Wrap (_fgefe ,_ebb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_cdea :=uint32 (len (_cfg .RTSNumbers ));_gcfg :=make ([]byte ,4+_de .Ceil (len (_cfg .RTSNumbers )+1,8));_cdea |=0x7<<29;_da .BigEndian .PutUint32 (_gcfg ,_cdea );copy (_gcfg [1:],_cfg .RetainBits );_gfbg ,_fgefe =_cabe .Write (_gcfg );if _fgefe !=nil {return 0,_dg .Wrap (_fgefe ,_ebb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _gfbg ,nil ;};func (_dagg *SymbolDictionary )decodeThroughTextRegion (_feeg ,_agff ,_dggec uint32 )error {if _dagg ._bgcca ==nil {_dagg ._bgcca =_dacd (_dagg ._gae ,nil );_dagg ._bgcca .setContexts (_dagg ._ffc ,_bg .NewStats (512,1),_bg .NewStats (512,1),_bg .NewStats (512,1),_bg .NewStats (512,1),_dagg ._feag ,_bg .NewStats (512,1),_bg .NewStats (512,1),_bg .NewStats (512,1),_bg .NewStats (512,1));};if _baa :=_dagg .setSymbolsArray ();_baa !=nil {return _baa ;};_dagg ._bgcca .setParameters (_dagg ._ggbf ,_dagg .IsHuffmanEncoded ,true ,_feeg ,_agff ,_dggec ,1,_dagg ._bgcgd +_dagg ._aedb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dagg .SdrTemplate ,_dagg .SdrATX ,_dagg .SdrATY ,_dagg ._fgee ,_dagg ._cddd );return _dagg .addSymbol (_dagg ._bgcca );};func (_agd *Header )readHeaderFlags ()error {const _cgd ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_abgf ,_gebf :=_agd .Reader .ReadBit ();if _gebf !=nil {return _dg .Wrap (_gebf ,_cgd ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _abgf !=0{_agd .RetainFlag =true ;};_abgf ,_gebf =_agd .Reader .ReadBit ();if _gebf !=nil {return _dg .Wrap (_gebf ,_cgd ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _abgf !=0{_agd .PageAssociationFieldSize =true ;};_cdaf ,_gebf :=_agd .Reader .ReadBits (6);if _gebf !=nil {return _dg .Wrap (_gebf ,_cgd ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_agd .Type =Type (int (_cdaf ));return nil ;};func (_ageee *TableSegment )StreamReader ()_fb .StreamReader {return _ageee ._cbeg };func (_bgcgb *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_ageb ,_gace :=_bgcgb ._ccdd .ReadBit ();if _gace !=nil {return _gace ;};if _ageb ==1{_bgcgb ._dba =true ;};return nil ;};func (_gaa *Header )String ()string {_egcb :=&_f .Builder {};_egcb .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_egcb .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_gaa .SegmentNumber ));_egcb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_gaa .Type ));_egcb .WriteString (_fc .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_gaa .RetainFlag ));_egcb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gaa .PageAssociation ));_egcb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gaa .PageAssociationFieldSize ));_egcb .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_fgge :=range _gaa .RTSNumbers {_egcb .WriteString (_fc .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_fgge ));};_egcb .WriteString (_fc .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_gaa .HeaderLength ));_egcb .WriteString (_fc .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_gaa .SegmentDataLength ));_egcb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_gaa .SegmentDataStartOffset ));return _egcb .String ();};func (_dcf *PageInformationSegment )readIsStriped ()error {_aeff ,_gcad :=_dcf ._ccdd .ReadBit ();if _gcad !=nil {return _gcad ;};if _aeff ==1{_dcf .IsStripe =true ;};return nil ;};func (_cbcaa *TableSegment )HtRS ()int32 {return _cbcaa ._abfa };var _ SegmentEncoder =&RegionSegment {};func (_aeee *GenericRegion )decodeTemplate1 (_gcec ,_bccg ,_ffbef int ,_ffgf ,_ged int )(_eegc error ){const _bdff ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_bgbc ,_edae int ;_bee ,_ffeg int ;_dea byte ;_bebd ,_fbac int ;);if _gcec >=1{_dea ,_eegc =_aeee .Bitmap .GetByte (_ged );if _eegc !=nil {return _dg .Wrap (_eegc ,_bdff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bee =int (_dea );};if _gcec >=2{_dea ,_eegc =_aeee .Bitmap .GetByte (_ged -_aeee .Bitmap .RowStride );if _eegc !=nil {return _dg .Wrap (_eegc ,_bdff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ffeg =int (_dea )<<5;};_bgbc =((_bee >>1)&0x1f8)|((_ffeg >>1)&0x1e00);for _fdfe :=0;_fdfe < _ffbef ;_fdfe =_bebd {var (_gad byte ;_ggaa int ;);_bebd =_fdfe +8;if _fefc :=_bccg -_fdfe ;_fefc > 8{_ggaa =8;}else {_ggaa =_fefc ;};if _gcec > 0{_bee <<=8;if _bebd < _bccg {_dea ,_eegc =_aeee .Bitmap .GetByte (_ged +1);if _eegc !=nil {return _dg .Wrap (_eegc ,_bdff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bee |=int (_dea );};};if _gcec > 1{_ffeg <<=8;if _bebd < _bccg {_dea ,_eegc =_aeee .Bitmap .GetByte (_ged -_aeee .Bitmap .RowStride +1);if _eegc !=nil {return _dg .Wrap (_eegc ,_bdff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ffeg |=int (_dea )<<5;};};for _aafg :=0;_aafg < _ggaa ;_aafg ++{if _aeee ._begf {_edae =_aeee .overrideAtTemplate1 (_bgbc ,_fdfe +_aafg ,_gcec ,int (_gad ),_aafg );_aeee ._fdbb .SetIndex (int32 (_edae ));}else {_aeee ._fdbb .SetIndex (int32 (_bgbc ));};_fbac ,_eegc =_aeee ._agb .DecodeBit (_aeee ._fdbb );if _eegc !=nil {return _dg .Wrap (_eegc ,_bdff ,"");};_gad |=byte (_fbac )<<uint (7-_aafg );_cdce :=uint (8-_aafg );_bgbc =((_bgbc &0xefb)<<1)|_fbac |((_bee >>_cdce )&0x8)|((_ffeg >>_cdce )&0x200);};if _febd :=_aeee .Bitmap .SetByte (_ffgf ,_gad );_febd !=nil {return _dg .Wrap (_febd ,_bdff ,"");};_ffgf ++;_ged ++;};return nil ;};func (_edgc *SymbolDictionary )encodeSymbols (_geda _fb .BinaryWriter )(_dgdg int ,_ecff error ){const _gdfca ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_efde :=_gf .New ();_efde .Init ();_dgbd ,_ecff :=_edgc ._eec .SelectByIndexes (_edgc ._gdgg );if _ecff !=nil {return 0,_dg .Wrap (_ecff ,_gdfca ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_bega :=map[*_e .Bitmap ]int {};for _cccd ,_cabb :=range _dgbd .Values {_bega [_cabb ]=_cccd ;};_dgbd .SortByHeight ();var _beea ,_fdec int ;_ceab ,_ecff :=_dgbd .GroupByHeight ();if _ecff !=nil {return 0,_dg .Wrap (_ecff ,_gdfca ,"");};for _ ,_cgcb :=range _ceab .Values {_bccga :=_cgcb .Values [0].Height ;_fgbc :=_bccga -_beea ;if _ecff =_efde .EncodeInteger (_gf .IADH ,_fgbc );_ecff !=nil {return 0,_dg .Wrapf (_ecff ,_gdfca ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fgbc );};_beea =_bccga ;_gdfb ,_bfca :=_cgcb .GroupByWidth ();if _bfca !=nil {return 0,_dg .Wrapf (_bfca ,_gdfca ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_bccga );};var _aeb int ;for _ ,_ebcc :=range _gdfb .Values {for _ ,_cdff :=range _ebcc .Values {_efag :=_cdff .Width ;_fdee :=_efag -_aeb ;if _bfca =_efde .EncodeInteger (_gf .IADW ,_fdee );_bfca !=nil {return 0,_dg .Wrapf (_bfca ,_gdfca ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_fdee );};_aeb +=_fdee ;if _bfca =_efde .EncodeBitmap (_cdff ,false );_bfca !=nil {return 0,_dg .Wrapf (_bfca ,_gdfca ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_bccga ,_efag );};_bbc :=_bega [_cdff ];_edgc ._cabed [_bbc ]=_fdec ;_fdec ++;};};if _bfca =_efde .EncodeOOB (_gf .IADW );_bfca !=nil {return 0,_dg .Wrap (_bfca ,_gdfca ,"\u0049\u0041\u0044\u0057");};};if _ecff =_efde .EncodeInteger (_gf .IAEX ,0);_ecff !=nil {return 0,_dg .Wrap (_ecff ,_gdfca ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _ecff =_efde .EncodeInteger (_gf .IAEX ,len (_edgc ._gdgg ));_ecff !=nil {return 0,_dg .Wrap (_ecff ,_gdfca ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_efde .Final ();_bbgfc ,_ecff :=_efde .WriteTo (_geda );if _ecff !=nil {return 0,_dg .Wrap (_ecff ,_gdfca ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_bbgfc ),nil ;};func (_efbc *RegionSegment )String ()string {_ebe :=&_f .Builder {};_ebe .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_ebe .WriteString (_fc .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_efbc .BitmapWidth ,_efbc .BitmapHeight ));_ebe .WriteString (_fc .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_efbc .XLocation ,_efbc .YLocation ));_ebe .WriteString (_fc .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_efbc .CombinaionOperator ));return _ebe .String ();};func (_bcfe *TextRegion )readAmountOfSymbolInstances ()error {_ccfg ,_eacgf :=_bcfe ._fgfcg .ReadBits (32);if _eacgf !=nil {return _eacgf ;};_bcfe .NumberOfSymbolInstances =uint32 (_ccfg &_g .MaxUint32 );_bdbcc :=_bcfe .RegionInfo .BitmapWidth *_bcfe .RegionInfo .BitmapHeight ;if _bdbcc < _bcfe .NumberOfSymbolInstances {_fcb .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_bdbcc ,_bcfe .NumberOfSymbolInstances );_bcfe .NumberOfSymbolInstances =_bdbcc ;};return nil ;};func (_ecec *PatternDictionary )checkInput ()error {if _ecec .HdpHeight < 1||_ecec .HdpWidth < 1{return _ge .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _ecec .IsMMREncoded {if _ecec .HDTemplate !=0{_fcb .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_bceg *SymbolDictionary )setAtPixels ()error {if _bceg .IsHuffmanEncoded {return nil ;};_deced :=1;if _bceg .SdTemplate ==0{_deced =4;};if _ebgc :=_bceg .readAtPixels (_deced );_ebgc !=nil {return _ebgc ;};return nil ;};type SymbolDictionary struct{_gae _fb .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_fgb bool ;_dgcb bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_bgcgd uint32 ;_edgd []*_e .Bitmap ;_aedb uint32 ;_bdga []*_e .Bitmap ;_fgad _eb .Tabler ;_bgee _eb .Tabler ;_ggab _eb .Tabler ;_bdgb _eb .Tabler ;_deca []*_e .Bitmap ;_fgee []*_e .Bitmap ;_ggbf *_bg .Decoder ;_bgcca *TextRegion ;_dbbae *GenericRegion ;_dbdd *GenericRefinementRegion ;_ffc *_bg .DecoderStats ;_ffgga *_bg .DecoderStats ;_eead *_bg .DecoderStats ;_cbca *_bg .DecoderStats ;_cgfc *_bg .DecoderStats ;_bebda *_bg .DecoderStats ;_fcad *_bg .DecoderStats ;_gcag *_bg .DecoderStats ;_feag *_bg .DecoderStats ;_cddd int8 ;_eec *_e .Bitmaps ;_gdgg []int ;_cabed map[int ]int ;_ccgg bool ;};func (_daebff *TextRegion )decodeCurrentT ()(int64 ,error ){if _daebff .SbStrips !=1{if _daebff .IsHuffmanEncoded {_ddgeb ,_cdfd :=_daebff ._fgfcg .ReadBits (byte (_daebff .LogSBStrips ));return int64 (_ddgeb ),_cdfd ;};_fdde ,_decb :=_daebff ._ggcc .DecodeInt (_daebff ._dacc );if _decb !=nil {return 0,_decb ;};return int64 (_fdde ),nil ;};return 0,nil ;};func NewHeader (d Documenter ,r _fb .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_dcag :=&Header {Reader :r };if _fbce :=_dcag .parse (d ,r ,offset ,organizationType );_fbce !=nil {return nil ,_dg .Wrap (_fbce ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _dcag ,nil ;};func (_bgcba *TextRegion )decodeID ()(int64 ,error ){if _bgcba .IsHuffmanEncoded {if _bgcba ._ddbf ==nil {_bbfd ,_eggc :=_bgcba ._fgfcg .ReadBits (byte (_bgcba ._fbdba ));return int64 (_bbfd ),_eggc ;};return _bgcba ._ddbf .Decode (_bgcba ._fgfcg );};return _bgcba ._ggcc .DecodeIAID (uint64 (_bgcba ._fbdba ),_bgcba ._adbef );};func (_fcff *TextRegion )decodeRdx ()(int64 ,error ){const _dfcc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _fcff .IsHuffmanEncoded {if _fcff .SbHuffRDX ==3{if _fcff ._ffcd ==nil {var (_bbffb int ;_ecgag error ;);if _fcff .SbHuffFS ==3{_bbffb ++;};if _fcff .SbHuffDS ==3{_bbffb ++;};if _fcff .SbHuffDT ==3{_bbffb ++;};if _fcff .SbHuffRDWidth ==3{_bbffb ++;};if _fcff .SbHuffRDHeight ==3{_bbffb ++;};_fcff ._ffcd ,_ecgag =_fcff .getUserTable (_bbffb );if _ecgag !=nil {return 0,_dg .Wrap (_ecgag ,_dfcc ,"");};};return _fcff ._ffcd .Decode (_fcff ._fgfcg );};_dgec ,_eace :=_eb .GetStandardTable (14+int (_fcff .SbHuffRDX ));if _eace !=nil {return 0,_dg .Wrap (_eace ,_dfcc ,"");};return _dgec .Decode (_fcff ._fgfcg );};_fbbf ,_gbad :=_fcff ._ggcc .DecodeInt (_fcff ._fgdc );if _gbad !=nil {return 0,_dg .Wrap (_gbad ,_dfcc ,"");};return int64 (_fbbf ),nil ;};func (_fgff *GenericRegion )overrideAtTemplate1 (_gafc ,_fdg ,_bed ,_agcaa ,_dgc int )int {_gafc &=0x1FF7;if _fgff .GBAtY [0]==0&&_fgff .GBAtX [0]>=-int8 (_dgc ){_gafc |=(_agcaa >>uint (7-(int8 (_dgc )+_fgff .GBAtX [0]))&0x1)<<3;}else {_gafc |=int (_fgff .getPixel (_fdg +int (_fgff .GBAtX [0]),_bed +int (_fgff .GBAtY [0])))<<3;};return _gafc ;};func (_gdag *HalftoneRegion )checkInput ()error {if _gdag .IsMMREncoded {if _gdag .HTemplate !=0{_fcb .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_gdag .HTemplate );};if _gdag .HSkipEnabled {_fcb .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_gdag .HSkipEnabled );};};return nil ;};func (_ggc *PatternDictionary )readGrayMax ()error {_dcdg ,_gdbf :=_ggc ._cgad .ReadBits (32);if _gdbf !=nil {return _gdbf ;};_ggc .GrayMax =uint32 (_dcdg &_g .MaxUint32 );return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_eaf *GenericRegion )setParametersWithAt (_ccdb bool ,_fgdd byte ,_fgdb ,_fad bool ,_abg ,_dda []int8 ,_gdb ,_fecd uint32 ,_bbbc *_bg .DecoderStats ,_fadb *_bg .Decoder ){_eaf .IsMMREncoded =_ccdb ;_eaf .GBTemplate =_fgdd ;_eaf .IsTPGDon =_fgdb ;_eaf .GBAtX =_abg ;_eaf .GBAtY =_dda ;_eaf .RegionSegment .BitmapHeight =_fecd ;_eaf .RegionSegment .BitmapWidth =_gdb ;_eaf ._edeb =nil ;_eaf .Bitmap =nil ;if _bbbc !=nil {_eaf ._fdbb =_bbbc ;};if _fadb !=nil {_eaf ._agb =_fadb ;};_fcb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_eaf );};func (_cgafe *SymbolDictionary )decodeRefinedSymbol (_gba ,_ecfg uint32 )error {var (_bfbc int ;_eecf ,_efaf int32 ;);if _cgafe .IsHuffmanEncoded {_eebg ,_ecfc :=_cgafe ._gae .ReadBits (byte (_cgafe ._cddd ));if _ecfc !=nil {return _ecfc ;};_bfbc =int (_eebg );_daec ,_ecfc :=_eb .GetStandardTable (15);if _ecfc !=nil {return _ecfc ;};_dgf ,_ecfc :=_daec .Decode (_cgafe ._gae );if _ecfc !=nil {return _ecfc ;};_eecf =int32 (_dgf );_dgf ,_ecfc =_daec .Decode (_cgafe ._gae );if _ecfc !=nil {return _ecfc ;};_efaf =int32 (_dgf );_daec ,_ecfc =_eb .GetStandardTable (1);if _ecfc !=nil {return _ecfc ;};if _ ,_ecfc =_daec .Decode (_cgafe ._gae );_ecfc !=nil {return _ecfc ;};_cgafe ._gae .Align ();}else {_fcef ,_dedb :=_cgafe ._ggbf .DecodeIAID (uint64 (_cgafe ._cddd ),_cgafe ._feag );if _dedb !=nil {return _dedb ;};_bfbc =int (_fcef );_eecf ,_dedb =_cgafe ._ggbf .DecodeInt (_cgafe ._bebda );if _dedb !=nil {return _dedb ;};_efaf ,_dedb =_cgafe ._ggbf .DecodeInt (_cgafe ._fcad );if _dedb !=nil {return _dedb ;};};if _fged :=_cgafe .setSymbolsArray ();_fged !=nil {return _fged ;};_bdeg :=_cgafe ._fgee [_bfbc ];if _bbca :=_cgafe .decodeNewSymbols (_gba ,_ecfg ,_bdeg ,_eecf ,_efaf );_bbca !=nil {return _bbca ;};if _cgafe .IsHuffmanEncoded {_cgafe ._gae .Align ();};return nil ;};func (_fdfd *PageInformationSegment )Init (h *Header ,r _fb .StreamReader )(_cadf error ){_fdfd ._ccdd =r ;if _cadf =_fdfd .parseHeader ();_cadf !=nil {return _dg .Wrap (_cadf ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_edg *HalftoneRegion )Init (hd *Header ,r _fb .StreamReader )error {_edg ._fccgb =r ;_edg ._egbg =hd ;_edg .RegionSegment =NewRegionSegment (r );return _edg .parseHeader ();};func (_gfdf *SymbolDictionary )readNumberOfExportedSymbols ()error {_edc ,_aebf :=_gfdf ._gae .ReadBits (32);if _aebf !=nil {return _aebf ;};_gfdf .NumberOfExportedSymbols =uint32 (_edc &_g .MaxUint32 );return nil ;};func (_bda *GenericRefinementRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){var _gdd error ;_fcb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _gdd !=nil {_fcb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gdd );}else {_fcb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _bda .RegionBitmap !=nil {return _bda .RegionBitmap ,nil ;};_ba :=0;if _bda .ReferenceBitmap ==nil {_bda .ReferenceBitmap ,_gdd =_bda .getGrReference ();if _gdd !=nil {return nil ,_gdd ;};};if _bda ._ec ==nil {_bda ._ec ,_gdd =_bg .New (_bda ._ae );if _gdd !=nil {return nil ,_gdd ;};};if _bda ._gd ==nil {_bda ._gd =_bg .NewStats (8192,1);};_bda .RegionBitmap =_e .New (int (_bda .RegionInfo .BitmapWidth ),int (_bda .RegionInfo .BitmapHeight ));if _bda .TemplateID ==0{if _gdd =_bda .updateOverride ();_gdd !=nil {return nil ,_gdd ;};};_be :=(_bda .RegionBitmap .Width +7)&-8;var _cd int ;if _bda .IsTPGROn {_cd =int (-_bda .ReferenceDY )*_bda .ReferenceBitmap .RowStride ;};_df :=_cd +1;for _fe :=0;_fe < _bda .RegionBitmap .Height ;_fe ++{if _bda .IsTPGROn {_bf ,_bdb :=_bda .decodeSLTP ();if _bdb !=nil {return nil ,_bdb ;};_ba ^=_bf ;};if _ba ==0{_gdd =_bda .decodeOptimized (_fe ,_bda .RegionBitmap .Width ,_bda .RegionBitmap .RowStride ,_bda .ReferenceBitmap .RowStride ,_be ,_cd ,_df );if _gdd !=nil {return nil ,_gdd ;};}else {_gdd =_bda .decodeTypicalPredictedLine (_fe ,_bda .RegionBitmap .Width ,_bda .RegionBitmap .RowStride ,_bda .ReferenceBitmap .RowStride ,_be ,_cd );if _gdd !=nil {return nil ,_gdd ;};};};return _bda .RegionBitmap ,nil ;};func (_dbad *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_gefe :=range _dbad .Header .RTSegments {if _gefe .Type ==0{_aabd ,_fdeae :=_gefe .GetSegmentData ();if _fdeae !=nil {return _fdeae ;};_ffbd ,_dbfc :=_aabd .(*SymbolDictionary );if !_dbfc {return _fc .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_aabd );};_edfe ,_fdeae :=_ffbd .GetDictionary ();if _fdeae !=nil {return _fc .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_gefe .SegmentNumber ,_fdeae .Error ());};_dbad ._edgd =append (_dbad ._edgd ,_edfe ...);_dbad ._bgcgd +=_ffbd .NumberOfExportedSymbols ;};};return nil ;};func (_fgce *PageInformationSegment )parseHeader ()(_cbde error ){_fcb .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _fdef ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _cbde !=nil {_fdef +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_cbde .Error ();}else {_fdef +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_fcb .Log .Trace (_fdef );}();if _cbde =_fgce .readWidthAndHeight ();_cbde !=nil {return _cbde ;};if _cbde =_fgce .readResolution ();_cbde !=nil {return _cbde ;};_ ,_cbde =_fgce ._ccdd .ReadBit ();if _cbde !=nil {return _cbde ;};if _cbde =_fgce .readCombinationOperatorOverrideAllowed ();_cbde !=nil {return _cbde ;};if _cbde =_fgce .readRequiresAuxiliaryBuffer ();_cbde !=nil {return _cbde ;};if _cbde =_fgce .readCombinationOperator ();_cbde !=nil {return _cbde ;};if _cbde =_fgce .readDefaultPixelValue ();_cbde !=nil {return _cbde ;};if _cbde =_fgce .readContainsRefinement ();_cbde !=nil {return _cbde ;};if _cbde =_fgce .readIsLossless ();_cbde !=nil {return _cbde ;};if _cbde =_fgce .readIsStriped ();_cbde !=nil {return _cbde ;};if _cbde =_fgce .readMaxStripeSize ();_cbde !=nil {return _cbde ;};if _cbde =_fgce .checkInput ();_cbde !=nil {return _cbde ;};_fcb .Log .Trace ("\u0025\u0073",_fgce );return nil ;};func (_aebe *SymbolDictionary )decodeDirectlyThroughGenericRegion (_ega ,_bgdb uint32 )error {if _aebe ._dbbae ==nil {_aebe ._dbbae =NewGenericRegion (_aebe ._gae );};_aebe ._dbbae .setParametersWithAt (false ,byte (_aebe .SdTemplate ),false ,false ,_aebe .SdATX ,_aebe .SdATY ,_ega ,_bgdb ,_aebe ._ffc ,_aebe ._ggbf );return _aebe .addSymbol (_aebe ._dbbae );};func (_gcee *SymbolDictionary )encodeNumSyms (_bcf _fb .BinaryWriter )(_efda int ,_aga error ){const _dgcbc ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_cdca :=make ([]byte ,4);_da .BigEndian .PutUint32 (_cdca ,_gcee .NumberOfExportedSymbols );if _efda ,_aga =_bcf .Write (_cdca );_aga !=nil {return _efda ,_dg .Wrap (_aga ,_dgcbc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_da .BigEndian .PutUint32 (_cdca ,_gcee .NumberOfNewSymbols );_dfdbg ,_aga :=_bcf .Write (_cdca );if _aga !=nil {return _efda ,_dg .Wrap (_aga ,_dgcbc ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _efda +_dfdbg ,nil ;};func (_gdc *PatternDictionary )computeSegmentDataStructure ()error {_gdc .DataOffset =_gdc ._cgad .StreamPosition ();_gdc .DataHeaderLength =_gdc .DataOffset -_gdc .DataHeaderOffset ;_gdc .DataLength =int64 (_gdc ._cgad .Length ())-_gdc .DataHeaderLength ;return nil ;};func (_gcgd *PatternDictionary )setGbAtPixels (){if _gcgd .HDTemplate ==0{_gcgd .GBAtX =make ([]int8 ,4);_gcgd .GBAtY =make ([]int8 ,4);_gcgd .GBAtX [0]=-int8 (_gcgd .HdpWidth );_gcgd .GBAtY [0]=0;_gcgd .GBAtX [1]=-3;_gcgd .GBAtY [1]=-1;_gcgd .GBAtX [2]=2;_gcgd .GBAtY [2]=-2;_gcgd .GBAtX [3]=-2;_gcgd .GBAtY [3]=-2;}else {_gcgd .GBAtX =[]int8 {-int8 (_gcgd .HdpWidth )};_gcgd .GBAtY =[]int8 {0};};};func (_fgef *Header )readHeaderLength (_faeg _fb .StreamReader ,_bcbc int64 ){_fgef .HeaderLength =_faeg .StreamPosition ()-_bcbc ;};func (_bdf *GenericRefinementRegion )getGrReference ()(*_e .Bitmap ,error ){segments :=_bdf ._ed .RTSegments ;if len (segments )==0{return nil ,_ge .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_egc ,_gc :=segments [0].GetSegmentData ();if _gc !=nil {return nil ,_gc ;};_ccc ,_bff :=_egc .(Regioner );if !_bff {return nil ,_fc .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_egc );};return _ccc .GetRegionBitmap ();};func (_daf *Header )readDataStartOffset (_bcba _fb .StreamReader ,_cccf OrganizationType ){if _cccf ==OSequential {_daf .SegmentDataStartOffset =uint64 (_bcba .StreamPosition ());};};func (_ggee *SymbolDictionary )readNumberOfNewSymbols ()error {_cabba ,_adacd :=_ggee ._gae .ReadBits (32);if _adacd !=nil {return _adacd ;};_ggee .NumberOfNewSymbols =uint32 (_cabba &_g .MaxUint32 );return nil ;};func (_aggf *HalftoneRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){if _aggf .HalftoneRegionBitmap !=nil {return _aggf .HalftoneRegionBitmap ,nil ;};var _gcga error ;_aggf .HalftoneRegionBitmap =_e .New (int (_aggf .RegionSegment .BitmapWidth ),int (_aggf .RegionSegment .BitmapHeight ));if _aggf .Patterns ==nil ||len (_aggf .Patterns )==0{_aggf .Patterns ,_gcga =_aggf .GetPatterns ();if _gcga !=nil {return nil ,_gcga ;};};if _aggf .HDefaultPixel ==1{_aggf .HalftoneRegionBitmap .SetDefaultPixel ();};_ebg :=_g .Ceil (_g .Log (float64 (len (_aggf .Patterns )))/_g .Log (2));_befb :=int (_ebg );var _cbcb [][]int ;_cbcb ,_gcga =_aggf .grayScaleDecoding (_befb );if _gcga !=nil {return nil ,_gcga ;};if _gcga =_aggf .renderPattern (_cbcb );_gcga !=nil {return nil ,_gcga ;};return _aggf .HalftoneRegionBitmap ,nil ;};func (_afcg *SymbolDictionary )getUserTable (_aggb int )(_eb .Tabler ,error ){var _cfdf int ;for _ ,_fcfda :=range _afcg .Header .RTSegments {if _fcfda .Type ==53{if _cfdf ==_aggb {_fdgd ,_eefg :=_fcfda .GetSegmentData ();if _eefg !=nil {return nil ,_eefg ;};_dbed :=_fdgd .(_eb .BasicTabler );return _eb .NewEncodedTable (_dbed );};_cfdf ++;};};return nil ,nil ;};func (_bfe *GenericRegion )String ()string {_gfbb :=&_f .Builder {};_gfbb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_gfbb .WriteString (_bfe .RegionSegment .String ()+"\u000a");_gfbb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bfe .UseExtTemplates ));_gfbb .WriteString (_fc .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bfe .IsTPGDon ));_gfbb .WriteString (_fc .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_bfe .GBTemplate ));_gfbb .WriteString (_fc .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_bfe .IsMMREncoded ));_gfbb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bfe .GBAtX ));_gfbb .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bfe .GBAtY ));_gfbb .WriteString (_fc .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_bfe .GBAtOverride ));return _gfbb .String ();};func (_effb *TextRegion )decodeDT ()(_bacef int64 ,_eacb error ){if _effb .IsHuffmanEncoded {if _effb .SbHuffDT ==3{_bacef ,_eacb =_effb ._ggfe .Decode (_effb ._fgfcg );if _eacb !=nil {return 0,_eacb ;};}else {var _ddfb _eb .Tabler ;_ddfb ,_eacb =_eb .GetStandardTable (11+int (_effb .SbHuffDT ));if _eacb !=nil {return 0,_eacb ;};_bacef ,_eacb =_ddfb .Decode (_effb ._fgfcg );if _eacb !=nil {return 0,_eacb ;};};}else {var _bgdf int32 ;_bgdf ,_eacb =_effb ._ggcc .DecodeInt (_effb ._cdgb );if _eacb !=nil {return ;};_bacef =int64 (_bgdf );};_bacef *=int64 (_effb .SbStrips );return _bacef ,nil ;};func (_dcgd *TextRegion )parseHeader ()error {var _geebb error ;_fcb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _geebb !=nil {_fcb .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_geebb );}else {_fcb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _geebb =_dcgd .RegionInfo .parseHeader ();_geebb !=nil {return _geebb ;};if _geebb =_dcgd .readRegionFlags ();_geebb !=nil {return _geebb ;};if _dcgd .IsHuffmanEncoded {if _geebb =_dcgd .readHuffmanFlags ();_geebb !=nil {return _geebb ;};};if _geebb =_dcgd .readUseRefinement ();_geebb !=nil {return _geebb ;};if _geebb =_dcgd .readAmountOfSymbolInstances ();_geebb !=nil {return _geebb ;};if _geebb =_dcgd .getSymbols ();_geebb !=nil {return _geebb ;};if _geebb =_dcgd .computeSymbolCodeLength ();_geebb !=nil {return _geebb ;};if _geebb =_dcgd .checkInput ();_geebb !=nil {return _geebb ;};_fcb .Log .Trace ("\u0025\u0073",_dcgd .String ());return nil ;};func (_bbacb *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_e .Points ,symbols *_e .Bitmaps ,classIDs *_de .IntSlice ,boxes *_e .Boxes ,width ,height ,symbits int ){_bbacb .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_bbacb ._egcdc =globalSymbolsMap ;_bbacb ._cdeb =localSymbolsMap ;_bbacb ._dcgfd =comps ;_bbacb ._cadb =inLL ;_bbacb ._dcda =symbols ;_bbacb ._gedac =classIDs ;_bbacb ._bace =boxes ;_bbacb ._abee =symbits ;};func (_fdc *SymbolDictionary )getSbSymCodeLen ()int8 {_adfdg :=int8 (_g .Ceil (_g .Log (float64 (_fdc ._bgcgd +_fdc .NumberOfNewSymbols ))/_g .Log (2)));if _fdc .IsHuffmanEncoded &&_adfdg < 1{return 1;};return _adfdg ;};func (_eafb *SymbolDictionary )readAtPixels (_egfed int )error {_eafb .SdATX =make ([]int8 ,_egfed );_eafb .SdATY =make ([]int8 ,_egfed );var (_gefcf byte ;_acfg error ;);for _bbea :=0;_bbea < _egfed ;_bbea ++{_gefcf ,_acfg =_eafb ._gae .ReadByte ();if _acfg !=nil {return _acfg ;};_eafb .SdATX [_bbea ]=int8 (_gefcf );_gefcf ,_acfg =_eafb ._gae .ReadByte ();if _acfg !=nil {return _acfg ;};_eafb .SdATY [_bbea ]=int8 (_gefcf );};return nil ;};func (_gfcc *TextRegion )decodeDfs ()(int64 ,error ){if _gfcc .IsHuffmanEncoded {if _gfcc .SbHuffFS ==3{if _gfcc ._ecece ==nil {var _adce error ;_gfcc ._ecece ,_adce =_gfcc .getUserTable (0);if _adce !=nil {return 0,_adce ;};};return _gfcc ._ecece .Decode (_gfcc ._fgfcg );};_gcaf ,_eefde :=_eb .GetStandardTable (6+int (_gfcc .SbHuffFS ));if _eefde !=nil {return 0,_eefde ;};return _gcaf .Decode (_gfcc ._fgfcg );};_ebfc ,_gccf :=_gfcc ._ggcc .DecodeInt (_gfcc ._fcac );if _gccf !=nil {return 0,_gccf ;};return int64 (_ebfc ),nil ;};func (_dgede *GenericRegion )getPixel (_fgc ,_ggbe int )int8 {if _fgc < 0||_fgc >=_dgede .Bitmap .Width {return 0;};if _ggbe < 0||_ggbe >=_dgede .Bitmap .Height {return 0;};if _dgede .Bitmap .GetPixel (_fgc ,_ggbe ){return 1;};return 0;};func (_gefd *SymbolDictionary )encodeATFlags (_bea _fb .BinaryWriter )(_gddd int ,_dgad error ){const _efbf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _gefd .IsHuffmanEncoded ||_gefd .SdTemplate !=0{return 0,nil ;};_daebf :=4;if _gefd .SdTemplate !=0{_daebf =1;};for _bfab :=0;_bfab < _daebf ;_bfab ++{if _dgad =_bea .WriteByte (byte (_gefd .SdATX [_bfab ]));_dgad !=nil {return _gddd ,_dg .Wrapf (_dgad ,_efbf ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bfab );};_gddd ++;if _dgad =_bea .WriteByte (byte (_gefd .SdATY [_bfab ]));_dgad !=nil {return _gddd ,_dg .Wrapf (_dgad ,_efbf ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bfab );};_gddd ++;};return _gddd ,nil ;};func (_cbgf *GenericRegion )overrideAtTemplate2 (_ebf ,_bgd ,_aae ,_dbbf ,_ccdg int )int {_ebf &=0x3FB;if _cbgf .GBAtY [0]==0&&_cbgf .GBAtX [0]>=-int8 (_ccdg ){_ebf |=(_dbbf >>uint (7-(int8 (_ccdg )+_cbgf .GBAtX [0]))&0x1)<<2;}else {_ebf |=int (_cbgf .getPixel (_bgd +int (_cbgf .GBAtX [0]),_aae +int (_cbgf .GBAtY [0])))<<2;};return _ebf ;};func (_fgda *SymbolDictionary )decodeHeightClassBitmap (_eeaf *_e .Bitmap ,_addd int64 ,_dcgb int ,_ffgbb []int )error {for _ffd :=_addd ;_ffd < int64 (_fgda ._aedb );_ffd ++{var _efcdc int ;for _agdg :=_addd ;_agdg <=_ffd -1;_agdg ++{_efcdc +=_ffgbb [_agdg ];};_fdeb :=_gb .Rect (_efcdc ,0,_efcdc +_ffgbb [_ffd ],_dcgb );_fcbgd ,_acde :=_e .Extract (_fdeb ,_eeaf );if _acde !=nil {return _acde ;};_fgda ._bdga [_ffd ]=_fcbgd ;_fgda ._fgee =append (_fgda ._fgee ,_fcbgd );};return nil ;};type SegmentEncoder interface{Encode (_fbed _fb .BinaryWriter )(_aac int ,_efaac error );};func (_abfd *PatternDictionary )Init (h *Header ,r _fb .StreamReader )error {_abfd ._cgad =r ;return _abfd .parseHeader ();};func (_gea *GenericRegion )computeSegmentDataStructure ()error {_gea .DataOffset =_gea ._bga .StreamPosition ();_gea .DataHeaderLength =_gea .DataOffset -_gea .DataHeaderOffset ;_gea .DataLength =int64 (_gea ._bga .Length ())-_gea .DataHeaderLength ;return nil ;};func (_geg *GenericRegion )decodeLine (_fdd ,_dacb ,_bbbb int )error {const _fgf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_bbf :=_geg .Bitmap .GetByteIndex (0,_fdd );_gcfd :=_bbf -_geg .Bitmap .RowStride ;switch _geg .GBTemplate {case 0:if !_geg .UseExtTemplates {return _geg .decodeTemplate0a (_fdd ,_dacb ,_bbbb ,_bbf ,_gcfd );};return _geg .decodeTemplate0b (_fdd ,_dacb ,_bbbb ,_bbf ,_gcfd );case 1:return _geg .decodeTemplate1 (_fdd ,_dacb ,_bbbb ,_bbf ,_gcfd );case 2:return _geg .decodeTemplate2 (_fdd ,_dacb ,_bbbb ,_bbf ,_gcfd );case 3:return _geg .decodeTemplate3 (_fdd ,_dacb ,_bbbb ,_bbf ,_gcfd );};return _dg .Errorf (_fgf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_geg .GBTemplate );};func (_gadg *TextRegion )initSymbols ()error {const _eagg ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_afa :=range _gadg .Header .RTSegments {if _afa ==nil {return _dg .Error (_eagg ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _afa .Type ==0{_agcd ,_aeba :=_afa .GetSegmentData ();if _aeba !=nil {return _dg .Wrap (_aeba ,_eagg ,"");};_ddaa ,_dage :=_agcd .(*SymbolDictionary );if !_dage {return _dg .Error (_eagg ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ddaa ._feag =_gadg ._adbef ;_fcaac ,_aeba :=_ddaa .GetDictionary ();if _aeba !=nil {return _dg .Wrap (_aeba ,_eagg ,"");};_gadg .Symbols =append (_gadg .Symbols ,_fcaac ...);};};_gadg .NumberOfSymbols =uint32 (len (_gadg .Symbols ));return nil ;};func (_bb *EndOfStripe )parseHeader (_ea *Header ,_bd _fb .StreamReader )error {_ab ,_ag :=_bb ._dgb .ReadBits (32);if _ag !=nil {return _ag ;};_bb ._fd =int (_ab &_g .MaxInt32 );return nil ;};func (_caec *GenericRegion )updateOverrideFlags ()error {const _cgf ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _caec .GBAtX ==nil ||_caec .GBAtY ==nil {return nil ;};if len (_caec .GBAtX )!=len (_caec .GBAtY ){return _dg .Errorf (_cgf ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_caec .GBAtX ),len (_caec .GBAtY ));};_caec .GBAtOverride =make ([]bool ,len (_caec .GBAtX ));switch _caec .GBTemplate {case 0:if !_caec .UseExtTemplates {if _caec .GBAtX [0]!=3||_caec .GBAtY [0]!=-1{_caec .setOverrideFlag (0);};if _caec .GBAtX [1]!=-3||_caec .GBAtY [1]!=-1{_caec .setOverrideFlag (1);};if _caec .GBAtX [2]!=2||_caec .GBAtY [2]!=-2{_caec .setOverrideFlag (2);};if _caec .GBAtX [3]!=-2||_caec .GBAtY [3]!=-2{_caec .setOverrideFlag (3);};}else {if _caec .GBAtX [0]!=-2||_caec .GBAtY [0]!=0{_caec .setOverrideFlag (0);};if _caec .GBAtX [1]!=0||_caec .GBAtY [1]!=-2{_caec .setOverrideFlag (1);};if _caec .GBAtX [2]!=-2||_caec .GBAtY [2]!=-1{_caec .setOverrideFlag (2);};if _caec .GBAtX [3]!=-1||_caec .GBAtY [3]!=-2{_caec .setOverrideFlag (3);};if _caec .GBAtX [4]!=1||_caec .GBAtY [4]!=-2{_caec .setOverrideFlag (4);};if _caec .GBAtX [5]!=2||_caec .GBAtY [5]!=-1{_caec .setOverrideFlag (5);};if _caec .GBAtX [6]!=-3||_caec .GBAtY [6]!=0{_caec .setOverrideFlag (6);};if _caec .GBAtX [7]!=-4||_caec .GBAtY [7]!=0{_caec .setOverrideFlag (7);};if _caec .GBAtX [8]!=2||_caec .GBAtY [8]!=-2{_caec .setOverrideFlag (8);};if _caec .GBAtX [9]!=3||_caec .GBAtY [9]!=-1{_caec .setOverrideFlag (9);};if _caec .GBAtX [10]!=-2||_caec .GBAtY [10]!=-2{_caec .setOverrideFlag (10);};if _caec .GBAtX [11]!=-3||_caec .GBAtY [11]!=-1{_caec .setOverrideFlag (11);};};case 1:if _caec .GBAtX [0]!=3||_caec .GBAtY [0]!=-1{_caec .setOverrideFlag (0);};case 2:if _caec .GBAtX [0]!=2||_caec .GBAtY [0]!=-1{_caec .setOverrideFlag (0);};case 3:if _caec .GBAtX [0]!=2||_caec .GBAtY [0]!=-1{_caec .setOverrideFlag (0);};};return nil ;};func (_adfd *Header )parse (_fcbb Documenter ,_adafa _fb .StreamReader ,_bdfd int64 ,_fbcf OrganizationType )(_bbfg error ){const _cbf ="\u0070\u0061\u0072s\u0065";_fcb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _bbfg !=nil {_fcb .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bbfg );}else {_fcb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_bbfg =_adafa .Seek (_bdfd ,_b .SeekStart );if _bbfg !=nil {return _dg .Wrap (_bbfg ,_cbf ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _bbfg =_adfd .readSegmentNumber (_adafa );_bbfg !=nil {return _dg .Wrap (_bbfg ,_cbf ,"");};if _bbfg =_adfd .readHeaderFlags ();_bbfg !=nil {return _dg .Wrap (_bbfg ,_cbf ,"");};var _fbfee uint64 ;_fbfee ,_bbfg =_adfd .readNumberOfReferredToSegments (_adafa );if _bbfg !=nil {return _dg .Wrap (_bbfg ,_cbf ,"");};_adfd .RTSNumbers ,_bbfg =_adfd .readReferredToSegmentNumbers (_adafa ,int (_fbfee ));if _bbfg !=nil {return _dg .Wrap (_bbfg ,_cbf ,"");};_bbfg =_adfd .readSegmentPageAssociation (_fcbb ,_adafa ,_fbfee ,_adfd .RTSNumbers ...);if _bbfg !=nil {return _dg .Wrap (_bbfg ,_cbf ,"");};if _adfd .Type !=TEndOfFile {if _bbfg =_adfd .readSegmentDataLength (_adafa );_bbfg !=nil {return _dg .Wrap (_bbfg ,_cbf ,"");};};_adfd .readDataStartOffset (_adafa ,_fbcf );_adfd .readHeaderLength (_adafa ,_bdfd );_fcb .Log .Trace ("\u0025\u0073",_adfd );return nil ;};type PatternDictionary struct{_cgad _fb .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_e .Bitmap ;GrayMax uint32 ;};type OrganizationType uint8 ;func _dacd (_eaad _fb .StreamReader ,_ccce *Header )*TextRegion {_cacb :=&TextRegion {_fgfcg :_eaad ,Header :_ccce ,RegionInfo :NewRegionSegment (_eaad )};return _cacb ;};type EndOfStripe struct{_dgb _fb .StreamReader ;_fd int ;};func (_bcgd *SymbolDictionary )readRegionFlags ()error {var (_gbdb uint64 ;_egee int ;);_ ,_faec :=_bcgd ._gae .ReadBits (3);if _faec !=nil {return _faec ;};_egee ,_faec =_bcgd ._gae .ReadBit ();if _faec !=nil {return _faec ;};_bcgd .SdrTemplate =int8 (_egee );_gbdb ,_faec =_bcgd ._gae .ReadBits (2);if _faec !=nil {return _faec ;};_bcgd .SdTemplate =int8 (_gbdb &0xf);_egee ,_faec =_bcgd ._gae .ReadBit ();if _faec !=nil {return _faec ;};if _egee ==1{_bcgd ._fgb =true ;};_egee ,_faec =_bcgd ._gae .ReadBit ();if _faec !=nil {return _faec ;};if _egee ==1{_bcgd ._dgcb =true ;};_egee ,_faec =_bcgd ._gae .ReadBit ();if _faec !=nil {return _faec ;};if _egee ==1{_bcgd .SdHuffAggInstanceSelection =true ;};_egee ,_faec =_bcgd ._gae .ReadBit ();if _faec !=nil {return _faec ;};_bcgd .SdHuffBMSizeSelection =int8 (_egee );_gbdb ,_faec =_bcgd ._gae .ReadBits (2);if _faec !=nil {return _faec ;};_bcgd .SdHuffDecodeWidthSelection =int8 (_gbdb &0xf);_gbdb ,_faec =_bcgd ._gae .ReadBits (2);if _faec !=nil {return _faec ;};_bcgd .SdHuffDecodeHeightSelection =int8 (_gbdb &0xf);_egee ,_faec =_bcgd ._gae .ReadBit ();if _faec !=nil {return _faec ;};if _egee ==1{_bcgd .UseRefinementAggregation =true ;};_egee ,_faec =_bcgd ._gae .ReadBit ();if _faec !=nil {return _faec ;};if _egee ==1{_bcgd .IsHuffmanEncoded =true ;};return nil ;};func (_bfcc *SymbolDictionary )decodeHeightClassCollectiveBitmap (_gdaa int64 ,_cddg ,_ggec uint32 )(*_e .Bitmap ,error ){if _gdaa ==0{_bfbb :=_e .New (int (_ggec ),int (_cddg ));var (_dfab byte ;_cdeab error ;);for _bfcb :=0;_bfcb < len (_bfbb .Data );_bfcb ++{_dfab ,_cdeab =_bfcc ._gae .ReadByte ();if _cdeab !=nil {return nil ,_cdeab ;};if _cdeab =_bfbb .SetByte (_bfcb ,_dfab );_cdeab !=nil {return nil ,_cdeab ;};};return _bfbb ,nil ;};if _bfcc ._dbbae ==nil {_bfcc ._dbbae =NewGenericRegion (_bfcc ._gae );};_bfcc ._dbbae .setParameters (true ,_bfcc ._gae .StreamPosition (),_gdaa ,_cddg ,_ggec );_edega ,_fcfd :=_bfcc ._dbbae .GetRegionBitmap ();if _fcfd !=nil {return nil ,_fcfd ;};return _edega ,nil ;};type TableSegment struct{_cbeg _fb .StreamReader ;_dcab int32 ;_dfdc int32 ;_abfa int32 ;_bfada int32 ;_ggbb int32 ;};func (_fbfa *TextRegion )readUseRefinement ()error {if !_fbfa .UseRefinement ||_fbfa .SbrTemplate !=0{return nil ;};var (_ebaa byte ;_ebea error ;);_fbfa .SbrATX =make ([]int8 ,2);_fbfa .SbrATY =make ([]int8 ,2);_ebaa ,_ebea =_fbfa ._fgfcg .ReadByte ();if _ebea !=nil {return _ebea ;};_fbfa .SbrATX [0]=int8 (_ebaa );_ebaa ,_ebea =_fbfa ._fgfcg .ReadByte ();if _ebea !=nil {return _ebea ;};_fbfa .SbrATY [0]=int8 (_ebaa );_ebaa ,_ebea =_fbfa ._fgfcg .ReadByte ();if _ebea !=nil {return _ebea ;};_fbfa .SbrATX [1]=int8 (_ebaa );_ebaa ,_ebea =_fbfa ._fgfcg .ReadByte ();if _ebea !=nil {return _ebea ;};_fbfa .SbrATY [1]=int8 (_ebaa );return nil ;};func (_eaee *TextRegion )encodeSymbols (_bdag _fb .BinaryWriter )(_ecd int ,_fcfc error ){const _bdae ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_acdad :=make ([]byte ,4);_da .BigEndian .PutUint32 (_acdad ,_eaee .NumberOfSymbols );if _ecd ,_fcfc =_bdag .Write (_acdad );_fcfc !=nil {return _ecd ,_dg .Wrap (_fcfc ,_bdae ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_egba ,_fcfc :=_e .NewClassedPoints (_eaee ._cadb ,_de .IntSlice (_eaee ._dcgfd ));if _fcfc !=nil {return 0,_dg .Wrap (_fcfc ,_bdae ,"");};var _bbba ,_ggea int ;_acdae :=_gf .New ();_acdae .Init ();if _fcfc =_acdae .EncodeInteger (_gf .IADT ,0);_fcfc !=nil {return _ecd ,_dg .Wrap (_fcfc ,_bdae ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_aebd ,_fcfc :=_egba .GroupByY ();if _fcfc !=nil {return 0,_dg .Wrap (_fcfc ,_bdae ,"");};for _ ,_befg :=range _aebd {_gegc :=int (_befg .YAtIndex (0));_eacg :=_gegc -_bbba ;if _fcfc =_acdae .EncodeInteger (_gf .IADT ,_eacg );_fcfc !=nil {return _ecd ,_dg .Wrap (_fcfc ,_bdae ,"");};var _fegga int ;for _ddbd ,_gfce :=range _befg .IntSlice {switch _ddbd {case 0:_acdcf :=int (_befg .XAtIndex (_ddbd ))-_ggea ;if _fcfc =_acdae .EncodeInteger (_gf .IAFS ,_acdcf );_fcfc !=nil {return _ecd ,_dg .Wrap (_fcfc ,_bdae ,"");};_ggea +=_acdcf ;_fegga =_ggea ;default:_edea :=int (_befg .XAtIndex (_ddbd ))-_fegga ;if _fcfc =_acdae .EncodeInteger (_gf .IADS ,_edea );_fcfc !=nil {return _ecd ,_dg .Wrap (_fcfc ,_bdae ,"");};_fegga +=_edea ;};_ffgfg ,_acef :=_eaee ._gedac .Get (_gfce );if _acef !=nil {return _ecd ,_dg .Wrap (_acef ,_bdae ,"");};_aeafc ,_cfdc :=_eaee ._egcdc [_ffgfg ];if !_cfdc {_aeafc ,_cfdc =_eaee ._cdeb [_ffgfg ];if !_cfdc {return _ecd ,_dg .Errorf (_bdae ,"\u0053\u0079\u006d\u006f\u0062\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_ffgfg );};};if _acef =_acdae .EncodeIAID (_eaee ._abee ,_aeafc );_acef !=nil {return _ecd ,_dg .Wrap (_acef ,_bdae ,"");};};if _fcfc =_acdae .EncodeOOB (_gf .IADS );_fcfc !=nil {return _ecd ,_dg .Wrap (_fcfc ,_bdae ,"");};};_acdae .Final ();_edcb ,_fcfc :=_acdae .WriteTo (_bdag );if _fcfc !=nil {return _ecd ,_dg .Wrap (_fcfc ,_bdae ,"");};_ecd +=int (_edcb );return _ecd ,nil ;};func (_gcg *GenericRegion )decodeSLTP ()(int ,error ){switch _gcg .GBTemplate {case 0:_gcg ._fdbb .SetIndex (0x9B25);case 1:_gcg ._fdbb .SetIndex (0x795);case 2:_gcg ._fdbb .SetIndex (0xE5);case 3:_gcg ._fdbb .SetIndex (0x195);};return _gcg ._agb .DecodeBit (_gcg ._fdbb );};func (_egge *TextRegion )getUserTable (_febg int )(_eb .Tabler ,error ){const _caaaf ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _ddde int ;for _ ,_geac :=range _egge .Header .RTSegments {if _geac .Type ==53{if _ddde ==_febg {_ggcaf ,_fabc :=_geac .GetSegmentData ();if _fabc !=nil {return nil ,_fabc ;};_ccaa ,_cfeab :=_ggcaf .(*TableSegment );if !_cfeab {_fcb .Log .Debug (_fc .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_geac .SegmentNumber ));return nil ,_dg .Error (_caaaf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _eb .NewEncodedTable (_ccaa );};_ddde ++;};};return nil ,nil ;};func (_cdf *GenericRefinementRegion )decodeTemplate (_adgg ,_cbg ,_abd ,_fdac ,_cecg ,_adf ,_eagb ,_gag ,_dfc ,_faab int ,_bdbc templater )(_dbe error ){var (_bba ,_bbd ,_acd ,_dc ,_caf int16 ;_aa ,_gfe ,_beb ,_ade int ;_ded byte ;);if _dfc >=1&&(_dfc -1)< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab -_fdac );if _dbe !=nil {return ;};_aa =int (_ded );};if _dfc >=0&&(_dfc )< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab );if _dbe !=nil {return ;};_gfe =int (_ded );};if _dfc >=-1&&(_dfc +1)< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab +_fdac );if _dbe !=nil {return ;};_beb =int (_ded );};_faab ++;if _adgg >=1{_ded ,_dbe =_cdf .RegionBitmap .GetByte (_gag -_abd );if _dbe !=nil {return ;};_ade =int (_ded );};_gag ++;_efa :=_cdf .ReferenceDX %8;_cagg :=6+_efa ;_gg :=_faab %_fdac ;if _cagg >=0{if _cagg < 8{_bba =int16 (_aa >>uint (_cagg ))&0x07;};if _cagg < 8{_bbd =int16 (_gfe >>uint (_cagg ))&0x07;};if _cagg < 8{_acd =int16 (_beb >>uint (_cagg ))&0x07;};if _cagg ==6&&_gg > 1{if _dfc >=1&&(_dfc -1)< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab -_fdac -2);if _dbe !=nil {return _dbe ;};_bba |=int16 (_ded <<2)&0x04;};if _dfc >=0&&_dfc < _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab -2);if _dbe !=nil {return _dbe ;};_bbd |=int16 (_ded <<2)&0x04;};if _dfc >=-1&&_dfc +1< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab +_fdac -2);if _dbe !=nil {return _dbe ;};_acd |=int16 (_ded <<2)&0x04;};};if _cagg ==0{_aa =0;_gfe =0;_beb =0;if _gg < _fdac -1{if _dfc >=1&&_dfc -1< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab -_fdac );if _dbe !=nil {return _dbe ;};_aa =int (_ded );};if _dfc >=0&&_dfc < _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab );if _dbe !=nil {return _dbe ;};_gfe =int (_ded );};if _dfc >=-1&&_dfc +1< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab +_fdac );if _dbe !=nil {return _dbe ;};_beb =int (_ded );};};_faab ++;};}else {_bba =int16 (_aa <<1)&0x07;_bbd =int16 (_gfe <<1)&0x07;_acd =int16 (_beb <<1)&0x07;_aa =0;_gfe =0;_beb =0;if _gg < _fdac -1{if _dfc >=1&&_dfc -1< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab -_fdac );if _dbe !=nil {return _dbe ;};_aa =int (_ded );};if _dfc >=0&&_dfc < _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab );if _dbe !=nil {return _dbe ;};_gfe =int (_ded );};if _dfc >=-1&&_dfc +1< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab +_fdac );if _dbe !=nil {return _dbe ;};_beb =int (_ded );};_faab ++;};_bba |=int16 ((_aa >>7)&0x07);_bbd |=int16 ((_gfe >>7)&0x07);_acd |=int16 ((_beb >>7)&0x07);};_dc =int16 (_ade >>6);_caf =0;_dbfda :=(2-_efa )%8;_aa <<=uint (_dbfda );_gfe <<=uint (_dbfda );_beb <<=uint (_dbfda );_ade <<=2;var _dad int ;for _bgfb :=0;_bgfb < _cbg ;_bgfb ++{_bgcb :=_bgfb &0x07;_ddg :=_bdbc .form (_bba ,_bbd ,_acd ,_dc ,_caf );if _cdf ._edf {_ded ,_dbe =_cdf .RegionBitmap .GetByte (_cdf .RegionBitmap .GetByteIndex (_bgfb ,_adgg ));if _dbe !=nil {return _dbe ;};_cdf ._gd .SetIndex (int32 (_cdf .overrideAtTemplate0 (int (_ddg ),_bgfb ,_adgg ,int (_ded ),_bgcb )));}else {_cdf ._gd .SetIndex (int32 (_ddg ));};_dad ,_dbe =_cdf ._ec .DecodeBit (_cdf ._gd );if _dbe !=nil {return _dbe ;};if _dbe =_cdf .RegionBitmap .SetPixel (_bgfb ,_adgg ,byte (_dad ));_dbe !=nil {return _dbe ;};_bba =((_bba <<1)|0x01&int16 (_aa >>7))&0x07;_bbd =((_bbd <<1)|0x01&int16 (_gfe >>7))&0x07;_acd =((_acd <<1)|0x01&int16 (_beb >>7))&0x07;_dc =((_dc <<1)|0x01&int16 (_ade >>7))&0x07;_caf =int16 (_dad );if (_bgfb -int (_cdf .ReferenceDX ))%8==5{_aa =0;_gfe =0;_beb =0;if ((_bgfb -int (_cdf .ReferenceDX ))/8)+1< _cdf .ReferenceBitmap .RowStride {if _dfc >=1&&(_dfc -1)< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab -_fdac );if _dbe !=nil {return _dbe ;};_aa =int (_ded );};if _dfc >=0&&_dfc < _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab );if _dbe !=nil {return _dbe ;};_gfe =int (_ded );};if _dfc >=-1&&(_dfc +1)< _cdf .ReferenceBitmap .Height {_ded ,_dbe =_cdf .ReferenceBitmap .GetByte (_faab +_fdac );if _dbe !=nil {return _dbe ;};_beb =int (_ded );};};_faab ++;}else {_aa <<=1;_gfe <<=1;_beb <<=1;};if _bgcb ==5&&_adgg >=1{if ((_bgfb >>3)+1)>=_cdf .RegionBitmap .RowStride {_ade =0;}else {_ded ,_dbe =_cdf .RegionBitmap .GetByte (_gag -_abd );if _dbe !=nil {return _dbe ;};_ade =int (_ded );};_gag ++;}else {_ade <<=1;};};return nil ;};func (_fegd *SymbolDictionary )addSymbol (_cafad Regioner )error {_gcce ,_edfc :=_cafad .GetRegionBitmap ();if _edfc !=nil {return _edfc ;};_fegd ._bdga [_fegd ._aedb ]=_gcce ;_fegd ._fgee =append (_fegd ._fgee ,_gcce );_fcb .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gcce );return nil ;};func (_bdfa *PageInformationSegment )Encode (w _fb .BinaryWriter )(_abf int ,_dfba error ){const _cfdb ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_gffg :=make ([]byte ,4);_da .BigEndian .PutUint32 (_gffg ,uint32 (_bdfa .PageBMWidth ));_abf ,_dfba =w .Write (_gffg );if _dfba !=nil {return _abf ,_dg .Wrap (_dfba ,_cfdb ,"\u0077\u0069\u0064t\u0068");};_da .BigEndian .PutUint32 (_gffg ,uint32 (_bdfa .PageBMHeight ));var _bab int ;_bab ,_dfba =w .Write (_gffg );if _dfba !=nil {return _bab +_abf ,_dg .Wrap (_dfba ,_cfdb ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_abf +=_bab ;_da .BigEndian .PutUint32 (_gffg ,uint32 (_bdfa .ResolutionX ));_bab ,_dfba =w .Write (_gffg );if _dfba !=nil {return _bab +_abf ,_dg .Wrap (_dfba ,_cfdb ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_abf +=_bab ;_da .BigEndian .PutUint32 (_gffg ,uint32 (_bdfa .ResolutionY ));if _bab ,_dfba =w .Write (_gffg );_dfba !=nil {return _bab +_abf ,_dg .Wrap (_dfba ,_cfdb ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_abf +=_bab ;if _dfba =_bdfa .encodeFlags (w );_dfba !=nil {return _abf ,_dg .Wrap (_dfba ,_cfdb ,"");};_abf ++;if _bab ,_dfba =_bdfa .encodeStripingInformation (w );_dfba !=nil {return _abf ,_dg .Wrap (_dfba ,_cfdb ,"");};_abf +=_bab ;return _abf ,nil ;};func (_aaafc *TableSegment )HtLow ()int32 {return _aaafc ._bfada };func (_befd *HalftoneRegion )computeSegmentDataStructure ()error {_befd .DataOffset =_befd ._fccgb .StreamPosition ();_befd .DataHeaderLength =_befd .DataOffset -_befd .DataHeaderOffset ;_befd .DataLength =int64 (_befd ._fccgb .Length ())-_befd .DataHeaderLength ;return nil ;};func (_cc *GenericRefinementRegion )Init (header *Header ,r _fb .StreamReader )error {_cc ._ed =header ;_cc ._ae =r ;_cc .RegionInfo =NewRegionSegment (r );return _cc .parseHeader ();};func (_cabd *TextRegion )decodeSymbolInstances ()error {_feaa ,_bbafec :=_cabd .decodeStripT ();if _bbafec !=nil {return _bbafec ;};var (_eegcc int64 ;_ebde uint32 ;);for _ebde < _cabd .NumberOfSymbolInstances {_aaag ,_fcfag :=_cabd .decodeDT ();if _fcfag !=nil {return _fcfag ;};_feaa +=_aaag ;var _accc int64 ;_caegc :=true ;_cabd ._aaeb =0;for {if _caegc {_accc ,_fcfag =_cabd .decodeDfs ();if _fcfag !=nil {return _fcfag ;};_eegcc +=_accc ;_cabd ._aaeb =_eegcc ;_caegc =false ;}else {_aceab ,_gbgf :=_cabd .decodeIds ();if _gbgf !=nil {return _gbgf ;};if _aceab ==_g .MaxInt32 ||_ebde >=_cabd .NumberOfSymbolInstances {break ;};_cabd ._aaeb +=_aceab +int64 (_cabd .SbdsOffset );};_dgca ,_begg :=_cabd .decodeCurrentT ();if _begg !=nil {return _begg ;};_efcf :=_feaa +_dgca ;_aebfc ,_begg :=_cabd .decodeID ();if _begg !=nil {return _begg ;};_cage ,_begg :=_cabd .decodeRI ();if _begg !=nil {return _begg ;};_cdbb ,_begg :=_cabd .decodeIb (_cage ,_aebfc );if _begg !=nil {return _begg ;};if _begg =_cabd .blit (_cdbb ,_efcf );_begg !=nil {return _begg ;};_ebde ++;};};return nil ;};func (_cgfa *PatternDictionary )parseHeader ()error {_fcb .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_fcb .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_bfgd :=_cgfa ._cgad .ReadBits (5);if _bfgd !=nil {return _bfgd ;};if _bfgd =_cgfa .readTemplate ();_bfgd !=nil {return _bfgd ;};if _bfgd =_cgfa .readIsMMREncoded ();_bfgd !=nil {return _bfgd ;};if _bfgd =_cgfa .readPatternWidthAndHeight ();_bfgd !=nil {return _bfgd ;};if _bfgd =_cgfa .readGrayMax ();_bfgd !=nil {return _bfgd ;};if _bfgd =_cgfa .computeSegmentDataStructure ();_bfgd !=nil {return _bfgd ;};return _cgfa .checkInput ();};func (_ggdc *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _agbe ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _ggdc .SbHuffRSize ==0{_cafaf ,_egea :=_eb .GetStandardTable (1);if _egea !=nil {return 0,_dg .Wrap (_egea ,_agbe ,"");};return _cafaf .Decode (_ggdc ._fgfcg );};if _ggdc ._cbgc ==nil {var (_aace int ;_gaac error ;);if _ggdc .SbHuffFS ==3{_aace ++;};if _ggdc .SbHuffDS ==3{_aace ++;};if _ggdc .SbHuffDT ==3{_aace ++;};if _ggdc .SbHuffRDWidth ==3{_aace ++;};if _ggdc .SbHuffRDHeight ==3{_aace ++;};if _ggdc .SbHuffRDX ==3{_aace ++;};if _ggdc .SbHuffRDY ==3{_aace ++;};_ggdc ._cbgc ,_gaac =_ggdc .getUserTable (_aace );if _gaac !=nil {return 0,_dg .Wrap (_gaac ,_agbe ,"");};};_ddcc ,_gdec :=_ggdc ._cbgc .Decode (_ggdc ._fgfcg );if _gdec !=nil {return 0,_dg .Wrap (_gdec ,_agbe ,"");};return _ddcc ,nil ;};func (_caga *TextRegion )blit (_eafbg *_e .Bitmap ,_acbd int64 )error {if _caga .IsTransposed ==0&&(_caga .ReferenceCorner ==2||_caga .ReferenceCorner ==3){_caga ._aaeb +=int64 (_eafbg .Width -1);}else if _caga .IsTransposed ==1&&(_caga .ReferenceCorner ==0||_caga .ReferenceCorner ==2){_caga ._aaeb +=int64 (_eafbg .Height -1);};_ffag :=_caga ._aaeb ;if _caga .IsTransposed ==1{_ffag ,_acbd =_acbd ,_ffag ;};switch _caga .ReferenceCorner {case 0:_acbd -=int64 (_eafbg .Height -1);case 2:_acbd -=int64 (_eafbg .Height -1);_ffag -=int64 (_eafbg .Width -1);case 3:_ffag -=int64 (_eafbg .Width -1);};_acbf :=_e .Blit (_eafbg ,_caga .RegionBitmap ,int (_ffag ),int (_acbd ),_caga .CombinationOperator );if _acbf !=nil {return _acbf ;};if _caga .IsTransposed ==0&&(_caga .ReferenceCorner ==0||_caga .ReferenceCorner ==1){_caga ._aaeb +=int64 (_eafbg .Width -1);};if _caga .IsTransposed ==1&&(_caga .ReferenceCorner ==1||_caga .ReferenceCorner ==3){_caga ._aaeb +=int64 (_eafbg .Height -1);};return nil ;};func (_bfad *RegionSegment )Encode (w _fb .BinaryWriter )(_gddbc int ,_bec error ){const _gffa ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_fffc :=make ([]byte ,4);_da .BigEndian .PutUint32 (_fffc ,_bfad .BitmapWidth );_gddbc ,_bec =w .Write (_fffc );if _bec !=nil {return 0,_dg .Wrap (_bec ,_gffa ,"\u0057\u0069\u0064t\u0068");};_da .BigEndian .PutUint32 (_fffc ,_bfad .BitmapHeight );var _aega int ;_aega ,_bec =w .Write (_fffc );if _bec !=nil {return 0,_dg .Wrap (_bec ,_gffa ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_gddbc +=_aega ;_da .BigEndian .PutUint32 (_fffc ,_bfad .XLocation );_aega ,_bec =w .Write (_fffc );if _bec !=nil {return 0,_dg .Wrap (_bec ,_gffa ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_gddbc +=_aega ;_da .BigEndian .PutUint32 (_fffc ,_bfad .YLocation );_aega ,_bec =w .Write (_fffc );if _bec !=nil {return 0,_dg .Wrap (_bec ,_gffa ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_gddbc +=_aega ;if _bec =w .WriteByte (byte (_bfad .CombinaionOperator )&0x07);_bec !=nil {return 0,_dg .Wrap (_bec ,_gffa ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_gddbc ++;return _gddbc ,nil ;};func (_eda *GenericRefinementRegion )decodeOptimized (_ffb ,_gcf ,_agc ,_cb ,_ffg ,_dfb ,_bef int )error {var (_gfc error ;_agca int ;_ee int ;);_bfb :=_ffb -int (_eda .ReferenceDY );if _af :=int (-_eda .ReferenceDX );_af > 0{_agca =_af ;};_bgc :=_eda .ReferenceBitmap .GetByteIndex (_agca ,_bfb );if _eda .ReferenceDX > 0{_ee =int (_eda .ReferenceDX );};_db :=_eda .RegionBitmap .GetByteIndex (_ee ,_ffb );switch _eda .TemplateID {case 0:_gfc =_eda .decodeTemplate (_ffb ,_gcf ,_agc ,_cb ,_ffg ,_dfb ,_bef ,_db ,_bfb ,_bgc ,_eda ._gfg );case 1:_gfc =_eda .decodeTemplate (_ffb ,_gcf ,_agc ,_cb ,_ffg ,_dfb ,_bef ,_db ,_bfb ,_bgc ,_eda ._fa );};return _gfc ;};func (_ecgf *Header )readSegmentNumber (_bac _fb .StreamReader )error {const _fbeg ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_cafa :=make ([]byte ,4);_ ,_gbfa :=_bac .Read (_cafa );if _gbfa !=nil {return _dg .Wrap (_gbfa ,_fbeg ,"");};_ecgf .SegmentNumber =_da .BigEndian .Uint32 (_cafa );return nil ;};func (_dcbb *HalftoneRegion )grayScaleDecoding (_dagf int )([][]int ,error ){var (_fga []int8 ;_bgeb []int8 ;);if !_dcbb .IsMMREncoded {_fga =make ([]int8 ,4);_bgeb =make ([]int8 ,4);if _dcbb .HTemplate <=1{_fga [0]=3;}else if _dcbb .HTemplate >=2{_fga [0]=2;};_bgeb [0]=-1;_fga [1]=-3;_bgeb [1]=-1;_fga [2]=2;_bgeb [2]=-2;_fga [3]=-2;_bgeb [3]=-2;};_eed :=make ([]*_e .Bitmap ,_dagf );_bdbb :=NewGenericRegion (_dcbb ._fccgb );_bdbb .setParametersMMR (_dcbb .IsMMREncoded ,_dcbb .DataOffset ,_dcbb .DataLength ,_dcbb .HGridHeight ,_dcbb .HGridWidth ,_dcbb .HTemplate ,false ,_dcbb .HSkipEnabled ,_fga ,_bgeb );_aage :=_dagf -1;var _bffg error ;_eed [_aage ],_bffg =_bdbb .GetRegionBitmap ();if _bffg !=nil {return nil ,_bffg ;};for _aage > 0{_aage --;_bdbb .Bitmap =nil ;_eed [_aage ],_bffg =_bdbb .GetRegionBitmap ();if _bffg !=nil {return nil ,_bffg ;};if _bffg =_dcbb .combineGrayscalePlanes (_eed ,_aage );_bffg !=nil {return nil ,_bffg ;};};return _dcbb .computeGrayScalePlanes (_eed ,_dagf );};func (_abbd *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _abbd .IsHuffmanEncoded {return _abbd .decodeHeightClassDeltaHeightWithHuffman ();};_agbgg ,_bebf :=_abbd ._ggbf .DecodeInt (_abbd ._ffgga );if _bebf !=nil {return 0,_bebf ;};return int64 (_agbgg ),nil ;};func (_fbaga *TextRegion )setParameters (_eebdc *_bg .Decoder ,_ebae ,_eaeg bool ,_dgada ,_daed uint32 ,_fcaad uint32 ,_abbe int8 ,_dfcd uint32 ,_agdd int8 ,_fgcc _e .CombinationOperator ,_bcgg int8 ,_efbcf int16 ,_facb ,_dadd ,_gaae ,_cbgb ,_fgcfb ,_cbbca ,_eecfb ,_dccab ,_dcfb ,_ecgb int8 ,_adcd ,_cccdd []int8 ,_dbgga []*_e .Bitmap ,_cffe int8 ){_fbaga ._ggcc =_eebdc ;_fbaga .IsHuffmanEncoded =_ebae ;_fbaga .UseRefinement =_eaeg ;_fbaga .RegionInfo .BitmapWidth =_dgada ;_fbaga .RegionInfo .BitmapHeight =_daed ;_fbaga .NumberOfSymbolInstances =_fcaad ;_fbaga .SbStrips =_abbe ;_fbaga .NumberOfSymbols =_dfcd ;_fbaga .DefaultPixel =_agdd ;_fbaga .CombinationOperator =_fgcc ;_fbaga .IsTransposed =_bcgg ;_fbaga .ReferenceCorner =_efbcf ;_fbaga .SbdsOffset =_facb ;_fbaga .SbHuffFS =_dadd ;_fbaga .SbHuffDS =_gaae ;_fbaga .SbHuffDT =_cbgb ;_fbaga .SbHuffRDWidth =_fgcfb ;_fbaga .SbHuffRDHeight =_cbbca ;_fbaga .SbHuffRDX =_eecfb ;_fbaga .SbHuffRDY =_dccab ;_fbaga .SbrTemplate =_ecgb ;_fbaga .SbrATX =_adcd ;_fbaga .SbrATY =_cccdd ;_fbaga .Symbols =_dbgga ;_fbaga ._fbdba =_cffe ;};func (_dfdbd *RegionSegment )Size ()int {return 17};func (_gff *template0 )form (_ebc ,_dcg ,_cad ,_bcb ,_fgg int16 )int16 {return (_ebc <<10)|(_dcg <<7)|(_cad <<4)|(_bcb <<1)|_fgg ;};func (_cca *GenericRegion )decodeTemplate0b (_dcb ,_abc ,_adab int ,_ffbg ,_cbbb int )(_deg error ){const _cae ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_abcb ,_dgag int ;_gge ,_aef int ;_aec byte ;_acf int ;);if _dcb >=1{_aec ,_deg =_cca .Bitmap .GetByte (_cbbb );if _deg !=nil {return _dg .Wrap (_deg ,_cae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gge =int (_aec );};if _dcb >=2{_aec ,_deg =_cca .Bitmap .GetByte (_cbbb -_cca .Bitmap .RowStride );if _deg !=nil {return _dg .Wrap (_deg ,_cae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aef =int (_aec )<<6;};_abcb =(_gge &0xf0)|(_aef &0x3800);for _dfg :=0;_dfg < _adab ;_dfg =_acf {var (_eee byte ;_eeg int ;);_acf =_dfg +8;if _cegb :=_abc -_dfg ;_cegb > 8{_eeg =8;}else {_eeg =_cegb ;};if _dcb > 0{_gge <<=8;if _acf < _abc {_aec ,_deg =_cca .Bitmap .GetByte (_cbbb +1);if _deg !=nil {return _dg .Wrap (_deg ,_cae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gge |=int (_aec );};};if _dcb > 1{_aef <<=8;if _acf < _abc {_aec ,_deg =_cca .Bitmap .GetByte (_cbbb -_cca .Bitmap .RowStride +1);if _deg !=nil {return _dg .Wrap (_deg ,_cae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aef |=int (_aec )<<6;};};for _gddf :=0;_gddf < _eeg ;_gddf ++{_edeg :=uint (7-_gddf );if _cca ._begf {_dgag =_cca .overrideAtTemplate0b (_abcb ,_dfg +_gddf ,_dcb ,int (_eee ),_gddf ,int (_edeg ));_cca ._fdbb .SetIndex (int32 (_dgag ));}else {_cca ._fdbb .SetIndex (int32 (_abcb ));};var _efc int ;_efc ,_deg =_cca ._agb .DecodeBit (_cca ._fdbb );if _deg !=nil {return _dg .Wrap (_deg ,_cae ,"");};_eee |=byte (_efc <<uint (_edeg ));_abcb =((_abcb &0x7bf7)<<1)|_efc |((_gge >>_edeg )&0x10)|((_aef >>_edeg )&0x800);};if _gcea :=_cca .Bitmap .SetByte (_ffbg ,_eee );_gcea !=nil {return _dg .Wrap (_gcea ,_cae ,"");};_ffbg ++;_cbbb ++;};return nil ;};func (_fcda *HalftoneRegion )computeY (_fdgb ,_ecfb int )int {return _fcda .shiftAndFill (int (_fcda .HGridY )+_fdgb *int (_fcda .HRegionX )-_ecfb *int (_fcda .HRegionY ));};func (_cdb *GenericRegion )overrideAtTemplate3 (_fbcg ,_febc ,_ffggf ,_aafe ,_fgeb int )int {_fbcg &=0x3EF;if _cdb .GBAtY [0]==0&&_cdb .GBAtX [0]>=-int8 (_fgeb ){_fbcg |=(_aafe >>uint (7-(int8 (_fgeb )+_cdb .GBAtX [0]))&0x1)<<4;}else {_fbcg |=int (_cdb .getPixel (_febc +int (_cdb .GBAtX [0]),_ffggf +int (_cdb .GBAtY [0])))<<4;};return _fbcg ;};func (_bbe *GenericRegion )setOverrideFlag (_fbdb int ){_bbe .GBAtOverride [_fbdb ]=true ;_bbe ._begf =true ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);var (_dfdd Segmenter ;_ecba =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _dfdd },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _dfdd },TProfiles :func ()Segmenter {return _dfdd },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _dfdd },TBitmap :func ()Segmenter {return _dfdd }};);func (_ccea *TextRegion )setContexts (_ffaf *_bg .DecoderStats ,_fcga *_bg .DecoderStats ,_egbb *_bg .DecoderStats ,_gdafd *_bg .DecoderStats ,_defbf *_bg .DecoderStats ,_fddg *_bg .DecoderStats ,_baff *_bg .DecoderStats ,_efeae *_bg .DecoderStats ,_dbfb *_bg .DecoderStats ,_gfae *_bg .DecoderStats ){_ccea ._cdgb =_fcga ;_ccea ._fcac =_egbb ;_ccea ._bgbf =_gdafd ;_ccea ._dacc =_defbf ;_ccea ._ededd =_baff ;_ccea ._geef =_efeae ;_ccea ._adbef =_fddg ;_ccea ._fgdc =_dbfb ;_ccea ._abddd =_gfae ;_ccea ._edaed =_ffaf ;};func (_bcge *TextRegion )GetRegionInfo ()*RegionSegment {return _bcge .RegionInfo };func (_gdeg *PageInformationSegment )CombinationOperator ()_e .CombinationOperator {return _gdeg ._ceca };func (_eggb *RegionSegment )parseHeader ()error {const _abag ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_fcb .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_fcb .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_aaeg ,_fgcf :=_eggb ._eabc .ReadBits (32);if _fgcf !=nil {return _dg .Wrap (_fgcf ,_abag ,"\u0077\u0069\u0064t\u0068");};_eggb .BitmapWidth =uint32 (_aaeg &_g .MaxUint32 );_aaeg ,_fgcf =_eggb ._eabc .ReadBits (32);if _fgcf !=nil {return _dg .Wrap (_fgcf ,_abag ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_eggb .BitmapHeight =uint32 (_aaeg &_g .MaxUint32 );_aaeg ,_fgcf =_eggb ._eabc .ReadBits (32);if _fgcf !=nil {return _dg .Wrap (_fgcf ,_abag ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_eggb .XLocation =uint32 (_aaeg &_g .MaxUint32 );_aaeg ,_fgcf =_eggb ._eabc .ReadBits (32);if _fgcf !=nil {return _dg .Wrap (_fgcf ,_abag ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_eggb .YLocation =uint32 (_aaeg &_g .MaxUint32 );if _ ,_fgcf =_eggb ._eabc .ReadBits (5);_fgcf !=nil {return _dg .Wrap (_fgcf ,_abag ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _fgcf =_eggb .readCombinationOperator ();_fgcf !=nil {return _dg .Wrap (_fgcf ,_abag ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_beec *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _beec ._dba };func (_eafg *TextRegion )decodeIds ()(int64 ,error ){const _acg ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _eafg .IsHuffmanEncoded {if _eafg .SbHuffDS ==3{if _eafg ._fdfeb ==nil {_gebfe :=0;if _eafg .SbHuffFS ==3{_gebfe ++;};var _cfbb error ;_eafg ._fdfeb ,_cfbb =_eafg .getUserTable (_gebfe );if _cfbb !=nil {return 0,_dg .Wrap (_cfbb ,_acg ,"");};};return _eafg ._fdfeb .Decode (_eafg ._fgfcg );};_gfca ,_beeg :=_eb .GetStandardTable (8+int (_eafg .SbHuffDS ));if _beeg !=nil {return 0,_dg .Wrap (_beeg ,_acg ,"");};return _gfca .Decode (_eafg ._fgfcg );};_ffaa ,_gbcc :=_eafg ._ggcc .DecodeInt (_eafg ._bgbf );if _gbcc !=nil {return 0,_dg .Wrap (_gbcc ,_acg ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_ffaa ),nil ;};func (_gafe *GenericRefinementRegion )overrideAtTemplate0 (_dece ,_fed ,_ede ,_adac ,_ffee int )int {if _gafe ._dgbg [0]{_dece &=0xfff7;if _gafe .GrAtY [0]==0&&int (_gafe .GrAtX [0])>=-_ffee {_dece |=(_adac >>uint (7-(_ffee +int (_gafe .GrAtX [0])))&0x1)<<3;}else {_dece |=_gafe .getPixel (_gafe .RegionBitmap ,_fed +int (_gafe .GrAtX [0]),_ede +int (_gafe .GrAtY [0]))<<3;};};if _gafe ._dgbg [1]{_dece &=0xefff;if _gafe .GrAtY [1]==0&&int (_gafe .GrAtX [1])>=-_ffee {_dece |=(_adac >>uint (7-(_ffee +int (_gafe .GrAtX [1])))&0x1)<<12;}else {_dece |=_gafe .getPixel (_gafe .ReferenceBitmap ,_fed +int (_gafe .GrAtX [1]),_ede +int (_gafe .GrAtY [1]));};};return _dece ;};func (_eggd *TextRegion )encodeFlags (_aggfd _fb .BinaryWriter )(_dafb int ,_eaea error ){const _baga ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _eaea =_aggfd .WriteBit (int (_eggd .SbrTemplate ));_eaea !=nil {return _dafb ,_dg .Wrap (_eaea ,_baga ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_eaea =_aggfd .WriteBits (uint64 (_eggd .SbdsOffset ),5);_eaea !=nil {return _dafb ,_dg .Wrap (_eaea ,_baga ,"\u0073\u0062\u0064\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _eaea =_aggfd .WriteBit (int (_eggd .DefaultPixel ));_eaea !=nil {return _dafb ,_dg .Wrap (_eaea ,_baga ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_eaea =_aggfd .WriteBits (uint64 (_eggd .CombinationOperator ),2);_eaea !=nil {return _dafb ,_dg .Wrap (_eaea ,_baga ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _eaea =_aggfd .WriteBit (int (_eggd .IsTransposed ));_eaea !=nil {return _dafb ,_dg .Wrap (_eaea ,_baga ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_eaea =_aggfd .WriteBits (uint64 (_eggd .ReferenceCorner ),2);_eaea !=nil {return _dafb ,_dg .Wrap (_eaea ,_baga ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_eaea =_aggfd .WriteBits (uint64 (_eggd .LogSBStrips ),2);_eaea !=nil {return _dafb ,_dg .Wrap (_eaea ,_baga ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _cfeb int ;if _eggd .UseRefinement {_cfeb =1;};if _eaea =_aggfd .WriteBit (_cfeb );_eaea !=nil {return _dafb ,_dg .Wrap (_eaea ,_baga ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_cfeb =0;if _eggd .IsHuffmanEncoded {_cfeb =1;};if _eaea =_aggfd .WriteBit (_cfeb );_eaea !=nil {return _dafb ,_dg .Wrap (_eaea ,_baga ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_dafb =2;return _dafb ,nil ;};var _ _eb .BasicTabler =&TableSegment {};func (_dga *GenericRegion )decodeTemplate0a (_eef ,_dde ,_bbbd int ,_fbgg ,_afca int )(_dgbb error ){const _bbbe ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_gbf ,_bfbe int ;_dab ,_gee int ;_gca byte ;_cbgg int ;);if _eef >=1{_gca ,_dgbb =_dga .Bitmap .GetByte (_afca );if _dgbb !=nil {return _dg .Wrap (_dgbb ,_bbbe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dab =int (_gca );};if _eef >=2{_gca ,_dgbb =_dga .Bitmap .GetByte (_afca -_dga .Bitmap .RowStride );if _dgbb !=nil {return _dg .Wrap (_dgbb ,_bbbe ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gee =int (_gca )<<6;};_gbf =(_dab &0xf0)|(_gee &0x3800);for _bggd :=0;_bggd < _bbbd ;_bggd =_cbgg {var (_afd byte ;_dgd int ;);_cbgg =_bggd +8;if _dbba :=_dde -_bggd ;_dbba > 8{_dgd =8;}else {_dgd =_dbba ;};if _eef > 0{_dab <<=8;if _cbgg < _dde {_gca ,_dgbb =_dga .Bitmap .GetByte (_afca +1);if _dgbb !=nil {return _dg .Wrap (_dgbb ,_bbbe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dab |=int (_gca );};};if _eef > 1{_fcbg :=_afca -_dga .Bitmap .RowStride +1;_gee <<=8;if _cbgg < _dde {_gca ,_dgbb =_dga .Bitmap .GetByte (_fcbg );if _dgbb !=nil {return _dg .Wrap (_dgbb ,_bbbe ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gee |=int (_gca )<<6;}else {_gee |=0;};};for _ggb :=0;_ggb < _dgd ;_ggb ++{_ecb :=uint (7-_ggb );if _dga ._begf {_bfbe =_dga .overrideAtTemplate0a (_gbf ,_bggd +_ggb ,_eef ,int (_afd ),_ggb ,int (_ecb ));_dga ._fdbb .SetIndex (int32 (_bfbe ));}else {_dga ._fdbb .SetIndex (int32 (_gbf ));};var _gagg int ;_gagg ,_dgbb =_dga ._agb .DecodeBit (_dga ._fdbb );if _dgbb !=nil {return _dg .Wrap (_dgbb ,_bbbe ,"");};_afd |=byte (_gagg )<<uint (_ecb );_gbf =((_gbf &0x7bf7)<<1)|_gagg |((_dab >>_ecb )&0x10)|((_gee >>_ecb )&0x800);};if _fbca :=_dga .Bitmap .SetByte (_fbgg ,_afd );_fbca !=nil {return _dg .Wrap (_fbca ,_bbbe ,"");};_fbgg ++;_afca ++;};return nil ;};func (_dfge *RegionSegment )readCombinationOperator ()error {_gdeed ,_fca :=_dfge ._eabc .ReadBits (3);if _fca !=nil {return _fca ;};_dfge .CombinaionOperator =_e .CombinationOperator (_gdeed &0xF);return nil ;};func (_fagag *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_fagag .SdHuffAggInstanceSelection {_fagg ,_afce :=_eb .GetStandardTable (1);if _afce !=nil {return 0,_afce ;};return _fagg .Decode (_fagag ._gae );};if _fagag ._bdgb ==nil {var (_dgeg int ;_dfgc error ;);if _fagag .SdHuffDecodeHeightSelection ==3{_dgeg ++;};if _fagag .SdHuffDecodeWidthSelection ==3{_dgeg ++;};if _fagag .SdHuffBMSizeSelection ==3{_dgeg ++;};_fagag ._bdgb ,_dfgc =_fagag .getUserTable (_dgeg );if _dfgc !=nil {return 0,_dfgc ;};};return _fagag ._bdgb .Decode (_fagag ._gae );};func (_ggeb *TextRegion )decodeStripT ()(_afbd int64 ,_cbff error ){if _ggeb .IsHuffmanEncoded {if _ggeb .SbHuffDT ==3{if _ggeb ._ggfe ==nil {var _ebbf int ;if _ggeb .SbHuffFS ==3{_ebbf ++;};if _ggeb .SbHuffDS ==3{_ebbf ++;};_ggeb ._ggfe ,_cbff =_ggeb .getUserTable (_ebbf );if _cbff !=nil {return 0,_cbff ;};};_afbd ,_cbff =_ggeb ._ggfe .Decode (_ggeb ._fgfcg );if _cbff !=nil {return 0,_cbff ;};}else {var _fadd _eb .Tabler ;_fadd ,_cbff =_eb .GetStandardTable (11+int (_ggeb .SbHuffDT ));if _cbff !=nil {return 0,_cbff ;};_afbd ,_cbff =_fadd .Decode (_ggeb ._fgfcg );if _cbff !=nil {return 0,_cbff ;};};}else {var _abad int32 ;_abad ,_cbff =_ggeb ._ggcc .DecodeInt (_ggeb ._cdgb );if _cbff !=nil {return 0,_cbff ;};_afbd =int64 (_abad );};_afbd *=int64 (-_ggeb .SbStrips );return _afbd ,nil ;};func (_bdd *SymbolDictionary )setCodingStatistics ()error {if _bdd ._gcag ==nil {_bdd ._gcag =_bg .NewStats (512,1);};if _bdd ._ffgga ==nil {_bdd ._ffgga =_bg .NewStats (512,1);};if _bdd ._eead ==nil {_bdd ._eead =_bg .NewStats (512,1);};if _bdd ._cbca ==nil {_bdd ._cbca =_bg .NewStats (512,1);};if _bdd ._cgfc ==nil {_bdd ._cgfc =_bg .NewStats (512,1);};if _bdd .UseRefinementAggregation &&_bdd ._feag ==nil {_bdd ._feag =_bg .NewStats (1<<uint (_bdd ._cddd ),1);_bdd ._bebda =_bg .NewStats (512,1);_bdd ._fcad =_bg .NewStats (512,1);};if _bdd ._ffc ==nil {_bdd ._ffc =_bg .NewStats (65536,1);};if _bdd ._ggbf ==nil {var _bcca error ;_bdd ._ggbf ,_bcca =_bg .New (_bdd ._gae );if _bcca !=nil {return _bcca ;};};return nil ;};func (_fabf *TextRegion )decodeIb (_fdbde ,_ecbe int64 )(*_e .Bitmap ,error ){const _defb ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_befff error ;_cdcaf *_e .Bitmap ;);if _fdbde ==0{if int (_ecbe )> len (_fabf .Symbols )-1{return nil ,_dg .Error (_defb ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _fabf .Symbols [int (_ecbe )],nil ;};var _ecaf ,_dbcf ,_bdege ,_degf int64 ;_ecaf ,_befff =_fabf .decodeRdw ();if _befff !=nil {return nil ,_dg .Wrap (_befff ,_defb ,"");};_dbcf ,_befff =_fabf .decodeRdh ();if _befff !=nil {return nil ,_dg .Wrap (_befff ,_defb ,"");};_bdege ,_befff =_fabf .decodeRdx ();if _befff !=nil {return nil ,_dg .Wrap (_befff ,_defb ,"");};_degf ,_befff =_fabf .decodeRdy ();if _befff !=nil {return nil ,_dg .Wrap (_befff ,_defb ,"");};if _fabf .IsHuffmanEncoded {if _ ,_befff =_fabf .decodeSymInRefSize ();_befff !=nil {return nil ,_dg .Wrap (_befff ,_defb ,"");};_fabf ._fgfcg .Align ();};_cbfe :=_fabf .Symbols [_ecbe ];_abbb :=uint32 (_cbfe .Width );_defe :=uint32 (_cbfe .Height );_fgdfa :=int32 (uint32 (_ecaf )>>1)+int32 (_bdege );_gfdb :=int32 (uint32 (_dbcf )>>1)+int32 (_degf );if _fabf ._acdf ==nil {_fabf ._acdf =_fbe (_fabf ._fgfcg ,nil );};_fabf ._acdf .setParameters (_fabf ._edaed ,_fabf ._ggcc ,_fabf .SbrTemplate ,_abbb +uint32 (_ecaf ),_defe +uint32 (_dbcf ),_cbfe ,_fgdfa ,_gfdb ,false ,_fabf .SbrATX ,_fabf .SbrATY );_cdcaf ,_befff =_fabf ._acdf .GetRegionBitmap ();if _befff !=nil {return nil ,_dg .Wrap (_befff ,_defb ,"\u0067\u0072\u0066");};if _fabf .IsHuffmanEncoded {_fabf ._fgfcg .Align ();};return _cdcaf ,nil ;};type EncodeInitializer interface{InitEncode ();};func (_bfc *GenericRefinementRegion )readAtPixels ()error {_bfc .GrAtX =make ([]int8 ,2);_bfc .GrAtY =make ([]int8 ,2);_fcbc ,_beff :=_bfc ._ae .ReadByte ();if _beff !=nil {return _beff ;};_bfc .GrAtX [0]=int8 (_fcbc );_fcbc ,_beff =_bfc ._ae .ReadByte ();if _beff !=nil {return _beff ;};_bfc .GrAtY [0]=int8 (_fcbc );_fcbc ,_beff =_bfc ._ae .ReadByte ();if _beff !=nil {return _beff ;};_bfc .GrAtX [1]=int8 (_fcbc );_fcbc ,_beff =_bfc ._ae .ReadByte ();if _beff !=nil {return _beff ;};_bfc .GrAtY [1]=int8 (_fcbc );return nil ;};func (_adcbb *PageInformationSegment )readMaxStripeSize ()error {_bbbbb ,_badd :=_adcbb ._ccdd .ReadBits (15);if _badd !=nil {return _badd ;};_adcbb .MaxStripeSize =uint16 (_bbbbb &_g .MaxUint16 );return nil ;};func (_ebee *SymbolDictionary )setSymbolsArray ()error {if _ebee ._edgd ==nil {if _efea :=_ebee .retrieveImportSymbols ();_efea !=nil {return _efea ;};};if _ebee ._fgee ==nil {_ebee ._fgee =append (_ebee ._fgee ,_ebee ._edgd ...);};return nil ;};func (_ebca *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _ebca ._ggab ==nil {var (_fbde int ;_cadg error ;);if _ebca .SdHuffDecodeHeightSelection ==3{_fbde ++;};if _ebca .SdHuffDecodeWidthSelection ==3{_fbde ++;};_ebca ._ggab ,_cadg =_ebca .getUserTable (_fbde );if _cadg !=nil {return 0,_cadg ;};};return _ebca ._ggab .Decode (_ebca ._gae );};type templater interface{form (_fbgd ,_fccg ,_adag ,_cab ,_bge int16 )int16 ;setIndex (_gga *_bg .DecoderStats );};func (_gaee *TextRegion )readRegionFlags ()error {var (_ebdd int ;_geeeg uint64 ;_efad error ;);_ebdd ,_efad =_gaee ._fgfcg .ReadBit ();if _efad !=nil {return _efad ;};_gaee .SbrTemplate =int8 (_ebdd );_geeeg ,_efad =_gaee ._fgfcg .ReadBits (5);if _efad !=nil {return _efad ;};_gaee .SbdsOffset =int8 (_geeeg );if _gaee .SbdsOffset > 0x0f{_gaee .SbdsOffset -=0x20;};_ebdd ,_efad =_gaee ._fgfcg .ReadBit ();if _efad !=nil {return _efad ;};_gaee .DefaultPixel =int8 (_ebdd );_geeeg ,_efad =_gaee ._fgfcg .ReadBits (2);if _efad !=nil {return _efad ;};_gaee .CombinationOperator =_e .CombinationOperator (int (_geeeg )&0x3);_ebdd ,_efad =_gaee ._fgfcg .ReadBit ();if _efad !=nil {return _efad ;};_gaee .IsTransposed =int8 (_ebdd );_geeeg ,_efad =_gaee ._fgfcg .ReadBits (2);if _efad !=nil {return _efad ;};_gaee .ReferenceCorner =int16 (_geeeg )&0x3;_geeeg ,_efad =_gaee ._fgfcg .ReadBits (2);if _efad !=nil {return _efad ;};_gaee .LogSBStrips =int16 (_geeeg )&0x3;_gaee .SbStrips =1<<uint (_gaee .LogSBStrips );_ebdd ,_efad =_gaee ._fgfcg .ReadBit ();if _efad !=nil {return _efad ;};if _ebdd ==1{_gaee .UseRefinement =true ;};_ebdd ,_efad =_gaee ._fgfcg .ReadBit ();if _efad !=nil {return _efad ;};if _ebdd ==1{_gaee .IsHuffmanEncoded =true ;};return nil ;};func (_gbc *PageInformationSegment )readIsLossless ()error {_cead ,_cedf :=_gbc ._ccdd .ReadBit ();if _cedf !=nil {return _cedf ;};if _cead ==1{_gbc .IsLossless =true ;};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_e .Bitmap ,error );};func (_dcfd *PatternDictionary )readIsMMREncoded ()error {_egff ,_acfe :=_dcfd ._cgad .ReadBit ();if _acfe !=nil {return _acfe ;};if _egff !=0{_dcfd .IsMMREncoded =true ;};return nil ;};func (_gfga *Header )pageSize ()uint {if _gfga .PageAssociation <=255{return 1;};return 4;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _fb .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};type PageInformationSegment struct{_ccdd _fb .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_dba bool ;_ceca _e .CombinationOperator ;_aefg bool ;_dfag uint8 ;_gdfc bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_eccag *SymbolDictionary )InitEncode (symbols *_e .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _afda ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_eccag .SdATX =[]int8 {3,-3,2,-2};_eccag .SdATY =[]int8 {-1,-1,-2,-2};_eccag ._eec =symbols ;_eccag ._gdgg =make ([]int ,len (symbolList ));copy (_eccag ._gdgg ,symbolList );if len (_eccag ._gdgg )!=_eccag ._eec .Size (){return _dg .Error (_afda ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_eccag .NumberOfNewSymbols =uint32 (symbols .Size ());_eccag .NumberOfExportedSymbols =uint32 (symbols .Size ());_eccag ._cabed =symbolMap ;_eccag ._ccgg =unborderSymbols ;return nil ;};func (_acc *SymbolDictionary )setRetainedCodingContexts (_bffe *SymbolDictionary ){_acc ._ggbf =_bffe ._ggbf ;_acc .IsHuffmanEncoded =_bffe .IsHuffmanEncoded ;_acc .UseRefinementAggregation =_bffe .UseRefinementAggregation ;_acc .SdTemplate =_bffe .SdTemplate ;_acc .SdrTemplate =_bffe .SdrTemplate ;_acc .SdATX =_bffe .SdATX ;_acc .SdATY =_bffe .SdATY ;_acc .SdrATX =_bffe .SdrATX ;_acc .SdrATY =_bffe .SdrATY ;_acc ._ffc =_bffe ._ffc ;};func (_eeeg *HalftoneRegion )shiftAndFill (_bgff int )int {_bgff >>=8;if _bgff < 0{_aggfa :=int (_g .Log (float64 (_efe (_bgff )))/_g .Log (2));_bdbg :=31-_aggfa ;for _acfcc :=1;_acfcc < _bdbg ;_acfcc ++{_bgff |=1<<uint (31-_acfcc );};};return _bgff ;};type TextRegion struct{_fgfcg _fb .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbdsOffset int8 ;DefaultPixel int8 ;CombinationOperator _e .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_aaeb int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_e .Bitmap ;Symbols []*_e .Bitmap ;_ggcc *_bg .Decoder ;_acdf *GenericRefinementRegion ;_cdgb *_bg .DecoderStats ;_fcac *_bg .DecoderStats ;_bgbf *_bg .DecoderStats ;_dacc *_bg .DecoderStats ;_cdec *_bg .DecoderStats ;_ededd *_bg .DecoderStats ;_geef *_bg .DecoderStats ;_adbef *_bg .DecoderStats ;_fgdc *_bg .DecoderStats ;_abddd *_bg .DecoderStats ;_edaed *_bg .DecoderStats ;_fbdba int8 ;_ddbf *_eb .FixedSizeTable ;Header *Header ;_ecece _eb .Tabler ;_fdfeb _eb .Tabler ;_ggfe _eb .Tabler ;_abbc _eb .Tabler ;_dfe _eb .Tabler ;_ffcd _eb .Tabler ;_bede _eb .Tabler ;_cbgc _eb .Tabler ;_egcdc ,_cdeb map[int ]int ;_dcgfd []int ;_cadb *_e .Points ;_dcda *_e .Bitmaps ;_gedac *_de .IntSlice ;_gacg ,_abee int ;_bace *_e .Boxes ;};func (_egfe *GenericRegion )setParameters (_begc bool ,_afff ,_dadb int64 ,_fdae ,_cfad uint32 ){_egfe .IsMMREncoded =_begc ;_egfe .DataOffset =_afff ;_egfe .DataLength =_dadb ;_egfe .RegionSegment .BitmapHeight =_fdae ;_egfe .RegionSegment .BitmapWidth =_cfad ;_egfe ._edeb =nil ;_egfe .Bitmap =nil ;};func (_bbff *TableSegment )HtPS ()int32 {return _bbff ._dfdc };func (_gcgfg *TextRegion )String ()string {_eaca :=&_f .Builder {};_eaca .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_eaca .WriteString (_gcgfg .RegionInfo .String ()+"\u000a");_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_gcgfg .SbrTemplate ));_eaca .WriteString (_fc .Sprintf ("\u0009-\u0020S\u0062\u0064\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_gcgfg .SbdsOffset ));_eaca .WriteString (_fc .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_gcgfg .DefaultPixel ));_eaca .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_gcgfg .CombinationOperator ));_eaca .WriteString (_fc .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_gcgfg .IsTransposed ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gcgfg .ReferenceCorner ));_eaca .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_gcgfg .UseRefinement ));_eaca .WriteString (_fc .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_gcgfg .IsHuffmanEncoded ));if _gcgfg .IsHuffmanEncoded {_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gcgfg .SbHuffRSize ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_gcgfg .SbHuffRDY ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_gcgfg .SbHuffRDX ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_gcgfg .SbHuffRDHeight ));_eaca .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_gcgfg .SbHuffRDWidth ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_gcgfg .SbHuffDT ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_gcgfg .SbHuffDS ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_gcgfg .SbHuffFS ));};_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gcgfg .SbrATX ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_gcgfg .SbrATY ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gcgfg .NumberOfSymbolInstances ));_eaca .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gcgfg .SbrATX ));return _eaca .String ();};type Regioner interface{GetRegionBitmap ()(*_e .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_bdc *GenericRegion )Encode (w _fb .BinaryWriter )(_ddb int ,_fff error ){const _fbc ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _bdc .Bitmap ==nil {return 0,_dg .Error (_fbc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_edfd ,_fff :=_bdc .RegionSegment .Encode (w );if _fff !=nil {return 0,_dg .Wrap (_fff ,_fbc ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_ddb +=_edfd ;if _fff =w .SkipBits (4);_fff !=nil {return _ddb ,_dg .Wrap (_fff ,_fbc ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _ccd int ;if _bdc .IsTPGDon {_ccd =1;};if _fff =w .WriteBit (_ccd );_fff !=nil {return _ddb ,_dg .Wrap (_fff ,_fbc ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_ccd =0;if _fff =w .WriteBit (int (_bdc .GBTemplate >>1)&0x01);_fff !=nil {return _ddb ,_dg .Wrap (_fff ,_fbc ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _fff =w .WriteBit (int (_bdc .GBTemplate )&0x01);_fff !=nil {return _ddb ,_dg .Wrap (_fff ,_fbc ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _bdc .UseMMR {_ccd =1;};if _fff =w .WriteBit (_ccd );_fff !=nil {return _ddb ,_dg .Wrap (_fff ,_fbc ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_ddb ++;if _edfd ,_fff =_bdc .writeGBAtPixels (w );_fff !=nil {return _ddb ,_dg .Wrap (_fff ,_fbc ,"");};_ddb +=_edfd ;_bgbb :=_gf .New ();if _fff =_bgbb .EncodeBitmap (_bdc .Bitmap ,_bdc .IsTPGDon );_fff !=nil {return _ddb ,_dg .Wrap (_fff ,_fbc ,"");};_bgbb .Final ();var _dag int64 ;if _dag ,_fff =_bgbb .WriteTo (w );_fff !=nil {return _ddb ,_dg .Wrap (_fff ,_fbc ,"");};_ddb +=int (_dag );return _ddb ,nil ;};func (_cbbd *SymbolDictionary )checkInput ()error {if _cbbd .SdHuffDecodeHeightSelection ==2{_fcb .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069g\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_cbbd .SdHuffDecodeHeightSelection );};if _cbbd .SdHuffDecodeWidthSelection ==2{_fcb .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_cbbd .SdHuffDecodeWidthSelection );};if _cbbd .IsHuffmanEncoded {if _cbbd .SdTemplate !=0{_fcb .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_cbbd .SdTemplate );};if !_cbbd .UseRefinementAggregation {if !_cbbd .UseRefinementAggregation {if _cbbd ._fgb {_fcb .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_cbbd ._fgb =false ;};if _cbbd ._dgcb {_fcb .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_cbbd ._dgcb =false ;};};};}else {if _cbbd .SdHuffBMSizeSelection !=0{_fcb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_cbbd .SdHuffBMSizeSelection =0;};if _cbbd .SdHuffDecodeWidthSelection !=0{_fcb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_cbbd .SdHuffDecodeWidthSelection =0;};if _cbbd .SdHuffDecodeHeightSelection !=0{_fcb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_cbbd .SdHuffDecodeHeightSelection =0;};};if !_cbbd .UseRefinementAggregation {if _cbbd .SdrTemplate !=0{_fcb .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cbbd .SdrTemplate );_cbbd .SdrTemplate =0;};};if !_cbbd .IsHuffmanEncoded ||!_cbbd .UseRefinementAggregation {if _cbbd .SdHuffAggInstanceSelection {_fcb .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cbbd .SdHuffAggInstanceSelection );};};return nil ;};func (_fced *TextRegion )checkInput ()error {const _eggg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_fced .UseRefinement {if _fced .SbrTemplate !=0{_fcb .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fced .SbrTemplate =0;};};if _fced .SbHuffFS ==2||_fced .SbHuffRDWidth ==2||_fced .SbHuffRDHeight ==2||_fced .SbHuffRDX ==2||_fced .SbHuffRDY ==2{return _dg .Error (_eggg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_fced .UseRefinement {if _fced .SbHuffRSize !=0{_fcb .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_fced .SbHuffRSize =0;};if _fced .SbHuffRDY !=0{_fcb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_fced .SbHuffRDY =0;};if _fced .SbHuffRDX !=0{_fcb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_fced .SbHuffRDX =0;};if _fced .SbHuffRDWidth !=0{_fcb .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_fced .SbHuffRDWidth =0;};if _fced .SbHuffRDHeight !=0{_fcb .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_fced .SbHuffRDHeight =0;};};return nil ;};func (_gfb *GenericRefinementRegion )decodeTypicalPredictedLine (_afc ,_cde ,_dge ,_edfb ,_dbf ,_ad int )error {_ebd :=_afc -int (_gfb .ReferenceDY );_ca :=_gfb .ReferenceBitmap .GetByteIndex (0,_ebd );_dd :=_gfb .RegionBitmap .GetByteIndex (0,_afc );var _dgg error ;switch _gfb .TemplateID {case 0:_dgg =_gfb .decodeTypicalPredictedLineTemplate0 (_afc ,_cde ,_dge ,_edfb ,_dbf ,_ad ,_dd ,_ebd ,_ca );case 1:_dgg =_gfb .decodeTypicalPredictedLineTemplate1 (_afc ,_cde ,_dge ,_edfb ,_dbf ,_ad ,_dd ,_ebd ,_ca );};return _dgg ;};func (_cfab *GenericRegion )InitEncode (bm *_e .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _cef ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _dg .Error (_cef ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _dg .Error (_cef ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_cfab .Bitmap =bm ;_cfab .GBTemplate =byte (template );switch _cfab .GBTemplate {case 0:_cfab .GBAtX =[]int8 {3,-3,2,-2};_cfab .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_cfab .GBAtX =[]int8 {3};_cfab .GBAtY =[]int8 {-1};case 2,3:_cfab .GBAtX =[]int8 {2};_cfab .GBAtY =[]int8 {-1};default:return _dg .Errorf (_cef ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_cfab .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_cfab .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_ceef *TextRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){if _ceef .RegionBitmap !=nil {return _ceef .RegionBitmap ,nil ;};if !_ceef .IsHuffmanEncoded {if _fdbc :=_ceef .setCodingStatistics ();_fdbc !=nil {return nil ,_fdbc ;};};if _fcfa :=_ceef .createRegionBitmap ();_fcfa !=nil {return nil ,_fcfa ;};if _bagd :=_ceef .decodeSymbolInstances ();_bagd !=nil {return nil ,_bagd ;};return _ceef .RegionBitmap ,nil ;};func (_caad *GenericRefinementRegion )getPixel (_abda *_e .Bitmap ,_gfd ,_aaf int )int {if _gfd < 0||_gfd >=_abda .Width {return 0;};if _aaf < 0||_aaf >=_abda .Height {return 0;};if _abda .GetPixel (_gfd ,_aaf ){return 1;};return 0;};func (_ebdc *SymbolDictionary )encodeFlags (_cece _fb .BinaryWriter )(_dee int ,_gefc error ){const _bdgbb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _gefc =_cece .SkipBits (3);_gefc !=nil {return 0,_dg .Wrap (_gefc ,_bdgbb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _fdfc int ;if _ebdc .SdrTemplate > 0{_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"s\u0064\u0072\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fdfc =0;if _ebdc .SdTemplate > 1{_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fdfc =0;if _ebdc .SdTemplate ==1||_ebdc .SdTemplate ==3{_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0073\u0064\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fdfc =0;if _ebdc ._fgb {_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_fdfc =0;if _ebdc ._dgcb {_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_fdfc =0;if _ebdc .SdHuffAggInstanceSelection {_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0073\u0064\u0068\u0075\u0066\u0066\u0061\u0067\u0067\u0069\u006e\u0073\u0074");};_fdfc =int (_ebdc .SdHuffBMSizeSelection );if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0073\u0064\u0068u\u0066\u0066\u0062\u006d\u0073\u0069\u007a\u0065");};_fdfc =0;if _ebdc .SdHuffDecodeWidthSelection > 1{_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_fdfc =0;switch _ebdc .SdHuffDecodeWidthSelection {case 1,3:_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"s\u0064\u0068\u0075\u0066\u0066\u0077\u0069\u0064\u0074\u0068");};_fdfc =0;if _ebdc .SdHuffDecodeHeightSelection > 1{_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_fdfc =0;switch _ebdc .SdHuffDecodeHeightSelection {case 1,3:_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0073\u0064\u0068u\u0066\u0066\u0068\u0065\u0069\u0067\u0068\u0074");};_fdfc =0;if _ebdc .UseRefinementAggregation {_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0073\u0064\u0072\u0065\u0066\u0061\u0067\u0067");};_fdfc =0;if _ebdc .IsHuffmanEncoded {_fdfc =1;};if _gefc =_cece .WriteBit (_fdfc );_gefc !=nil {return _dee ,_dg .Wrap (_gefc ,_bdgbb ,"\u0073\u0064\u0068\u0075\u0066\u0066");};return 2,nil ;};type GenericRegion struct{_bga _fb .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_begf bool ;Bitmap *_e .Bitmap ;_agb *_bg .Decoder ;_fdbb *_bg .DecoderStats ;_edeb *_c .Decoder ;};func (_cgbb *GenericRegion )overrideAtTemplate0b (_fafd ,_dade ,_add ,_cbcg ,_fcba ,_bae int )int {if _cgbb .GBAtOverride [0]{_fafd &=0xFFFD;if _cgbb .GBAtY [0]==0&&_cgbb .GBAtX [0]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [0]&0x1))<<1;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [0]),_add +int (_cgbb .GBAtY [0])))<<1;};};if _cgbb .GBAtOverride [1]{_fafd &=0xDFFF;if _cgbb .GBAtY [1]==0&&_cgbb .GBAtX [1]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [1]&0x1))<<13;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [1]),_add +int (_cgbb .GBAtY [1])))<<13;};};if _cgbb .GBAtOverride [2]{_fafd &=0xFDFF;if _cgbb .GBAtY [2]==0&&_cgbb .GBAtX [2]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [2]&0x1))<<9;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [2]),_add +int (_cgbb .GBAtY [2])))<<9;};};if _cgbb .GBAtOverride [3]{_fafd &=0xBFFF;if _cgbb .GBAtY [3]==0&&_cgbb .GBAtX [3]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [3]&0x1))<<14;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [3]),_add +int (_cgbb .GBAtY [3])))<<14;};};if _cgbb .GBAtOverride [4]{_fafd &=0xEFFF;if _cgbb .GBAtY [4]==0&&_cgbb .GBAtX [4]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [4]&0x1))<<12;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [4]),_add +int (_cgbb .GBAtY [4])))<<12;};};if _cgbb .GBAtOverride [5]{_fafd &=0xFFDF;if _cgbb .GBAtY [5]==0&&_cgbb .GBAtX [5]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [5]&0x1))<<5;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [5]),_add +int (_cgbb .GBAtY [5])))<<5;};};if _cgbb .GBAtOverride [6]{_fafd &=0xFFFB;if _cgbb .GBAtY [6]==0&&_cgbb .GBAtX [6]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [6]&0x1))<<2;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [6]),_add +int (_cgbb .GBAtY [6])))<<2;};};if _cgbb .GBAtOverride [7]{_fafd &=0xFFF7;if _cgbb .GBAtY [7]==0&&_cgbb .GBAtX [7]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [7]&0x1))<<3;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [7]),_add +int (_cgbb .GBAtY [7])))<<3;};};if _cgbb .GBAtOverride [8]{_fafd &=0xF7FF;if _cgbb .GBAtY [8]==0&&_cgbb .GBAtX [8]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [8]&0x1))<<11;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [8]),_add +int (_cgbb .GBAtY [8])))<<11;};};if _cgbb .GBAtOverride [9]{_fafd &=0xFFEF;if _cgbb .GBAtY [9]==0&&_cgbb .GBAtX [9]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [9]&0x1))<<4;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [9]),_add +int (_cgbb .GBAtY [9])))<<4;};};if _cgbb .GBAtOverride [10]{_fafd &=0x7FFF;if _cgbb .GBAtY [10]==0&&_cgbb .GBAtX [10]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [10]&0x1))<<15;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [10]),_add +int (_cgbb .GBAtY [10])))<<15;};};if _cgbb .GBAtOverride [11]{_fafd &=0xFDFF;if _cgbb .GBAtY [11]==0&&_cgbb .GBAtX [11]>=-int8 (_fcba ){_fafd |=(_cbcg >>uint (int8 (_bae )-_cgbb .GBAtX [11]&0x1))<<10;}else {_fafd |=int (_cgbb .getPixel (_dade +int (_cgbb .GBAtX [11]),_add +int (_cgbb .GBAtY [11])))<<10;};};return _fafd ;};func (_dbff *GenericRegion )readGBAtPixels (_gec int )error {const _efcd ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_dbff .GBAtX =make ([]int8 ,_gec );_dbff .GBAtY =make ([]int8 ,_gec );for _bgec :=0;_bgec < _gec ;_bgec ++{_ceb ,_egg :=_dbff ._bga .ReadByte ();if _egg !=nil {return _dg .Wrapf (_egg ,_efcd ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bgec );};_dbff .GBAtX [_bgec ]=int8 (_ceb );_ceb ,_egg =_dbff ._bga .ReadByte ();if _egg !=nil {return _dg .Wrapf (_egg ,_efcd ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_bgec );};_dbff .GBAtY [_bgec ]=int8 (_ceb );};return nil ;};func (_bbdc *SymbolDictionary )String ()string {_egdc :=&_f .Builder {};_egdc .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_egdc .WriteString (_fc .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_bbdc .SdrTemplate ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_bbdc .SdTemplate ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_bbdc ._fgb ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_bbdc ._dgcb ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bbdc .SdHuffAggInstanceSelection ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_bbdc .SdHuffBMSizeSelection ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bbdc .SdHuffDecodeWidthSelection ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bbdc .SdHuffDecodeHeightSelection ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bbdc .UseRefinementAggregation ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_bbdc .IsHuffmanEncoded ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bbdc .SdATX ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bbdc .SdATY ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bbdc .SdrATX ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bbdc .SdrATY ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bbdc .NumberOfExportedSymbols ));_egdc .WriteString (_fc .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_bbdc .NumberOfNewSymbols ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bbdc ._bgcgd ));_egdc .WriteString (_fc .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_bbdc ._aedb ));return _egdc .String ();};func (_acea *SymbolDictionary )getSymbol (_abcba int )(*_e .Bitmap ,error ){const _ggbed ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_cdee ,_cabg :=_acea ._eec .GetBitmap (_acea ._gdgg [_abcba ]);if _cabg !=nil {return nil ,_dg .Wrap (_cabg ,_ggbed ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _cdee ,nil ;};func (_eebdf *PageInformationSegment )encodeFlags (_cdg _fb .BinaryWriter )(_bgcg error ){const _aab ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bgcg =_cdg .SkipBits (1);_bgcg !=nil {return _dg .Wrap (_bgcg ,_aab ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _fdea int ;if _eebdf .CombinationOperatorOverrideAllowed (){_fdea =1;};if _bgcg =_cdg .WriteBit (_fdea );_bgcg !=nil {return _dg .Wrap (_bgcg ,_aab ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_fdea =0;if _eebdf ._aefg {_fdea =1;};if _bgcg =_cdg .WriteBit (_fdea );_bgcg !=nil {return _dg .Wrap (_bgcg ,_aab ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _bgcg =_cdg .WriteBit ((int (_eebdf ._ceca )>>1)&0x01);_bgcg !=nil {return _dg .Wrap (_bgcg ,_aab ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _bgcg =_cdg .WriteBit (int (_eebdf ._ceca )&0x01);_bgcg !=nil {return _dg .Wrap (_bgcg ,_aab ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_fdea =int (_eebdf ._dfag );if _bgcg =_cdg .WriteBit (_fdea );_bgcg !=nil {return _dg .Wrap (_bgcg ,_aab ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_fdea =0;if _eebdf ._gdfc {_fdea =1;};if _bgcg =_cdg .WriteBit (_fdea );_bgcg !=nil {return _dg .Wrap (_bgcg ,_aab ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_fdea =0;if _eebdf .IsLossless {_fdea =1;};if _bgcg =_cdg .WriteBit (_fdea );_bgcg !=nil {return _dg .Wrap (_bgcg ,_aab ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_fddb *PatternDictionary )GetDictionary ()([]*_e .Bitmap ,error ){if _fddb .Patterns !=nil {return _fddb .Patterns ,nil ;};if !_fddb .IsMMREncoded {_fddb .setGbAtPixels ();};_aded :=NewGenericRegion (_fddb ._cgad );_aded .setParametersMMR (_fddb .IsMMREncoded ,_fddb .DataOffset ,_fddb .DataLength ,uint32 (_fddb .HdpHeight ),(_fddb .GrayMax +1)*uint32 (_fddb .HdpWidth ),_fddb .HDTemplate ,false ,false ,_fddb .GBAtX ,_fddb .GBAtY );_dgde ,_fefcb :=_aded .GetRegionBitmap ();if _fefcb !=nil {return nil ,_fefcb ;};if _fefcb =_fddb .extractPatterns (_dgde );_fefcb !=nil {return nil ,_fefcb ;};return _fddb .Patterns ,nil ;};func (_dgaf *TextRegion )getSymbols ()error {if _dgaf .Header .RTSegments !=nil {return _dgaf .initSymbols ();};return nil ;};func (_ccef Type )String ()string {switch _ccef {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_bfeg *PatternDictionary )readPatternWidthAndHeight ()error {_gcgb ,_bdg :=_bfeg ._cgad .ReadByte ();if _bdg !=nil {return _bdg ;};_bfeg .HdpWidth =_gcgb ;_gcgb ,_bdg =_bfeg ._cgad .ReadByte ();if _bdg !=nil {return _bdg ;};_bfeg .HdpHeight =_gcgb ;return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_fbae *GenericRefinementRegion )parseHeader ()(_fbd error ){_fcb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_aag :=_dac .Now ();defer func (){if _fbd ==nil {_fcb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_dac .Since (_aag ).Nanoseconds ());}else {_fcb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_fbd );};}();if _fbd =_fbae .RegionInfo .parseHeader ();_fbd !=nil {return _fbd ;};_ ,_fbd =_fbae ._ae .ReadBits (6);if _fbd !=nil {return _fbd ;};_fbae .IsTPGROn ,_fbd =_fbae ._ae .ReadBool ();if _fbd !=nil {return _fbd ;};var _dcc int ;_dcc ,_fbd =_fbae ._ae .ReadBit ();if _fbd !=nil {return _fbd ;};_fbae .TemplateID =int8 (_dcc );switch _fbae .TemplateID {case 0:_fbae .Template =_fbae ._gfg ;if _fbd =_fbae .readAtPixels ();_fbd !=nil {return ;};case 1:_fbae .Template =_fbae ._fa ;};return nil ;};func (_dged *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_cag ,_ddf ,_ada ,_ecg ,_faa ,_gaf ,_dbc ,_bc ,_ce int )error {var (_ffe ,_bbg ,_eac ,_ege ,_eag ,_fef int ;_faf byte ;_fda error ;);if _cag > 0{_faf ,_fda =_dged .RegionBitmap .GetByte (_dbc -_ada );if _fda !=nil {return _fda ;};_eac =int (_faf );};if _bc > 0&&_bc <=_dged .ReferenceBitmap .Height {_faf ,_fda =_dged .ReferenceBitmap .GetByte (_ce -_ecg +_gaf );if _fda !=nil {return _fda ;};_ege =int (_faf )<<4;};if _bc >=0&&_bc < _dged .ReferenceBitmap .Height {_faf ,_fda =_dged .ReferenceBitmap .GetByte (_ce +_gaf );if _fda !=nil {return _fda ;};_eag =int (_faf )<<1;};if _bc > -2&&_bc < _dged .ReferenceBitmap .Height -1{_faf ,_fda =_dged .ReferenceBitmap .GetByte (_ce +_ecg +_gaf );if _fda !=nil {return _fda ;};_fef =int (_faf );};_ffe =((_eac >>5)&0x6)|((_fef >>2)&0x30)|(_eag &0x180)|(_ege &0xc00);var _bgf int ;for _fbg :=0;_fbg < _faa ;_fbg =_bgf {var _fba int ;_bgf =_fbg +8;var _fea int ;if _fea =_ddf -_fbg ;_fea > 8{_fea =8;};_gdg :=_bgf < _ddf ;_caa :=_bgf < _dged .ReferenceBitmap .Width ;_ef :=_gaf +1;if _cag > 0{_faf =0;if _gdg {_faf ,_fda =_dged .RegionBitmap .GetByte (_dbc -_ada +1);if _fda !=nil {return _fda ;};};_eac =(_eac <<8)|int (_faf );};if _bc > 0&&_bc <=_dged .ReferenceBitmap .Height {var _dec int ;if _caa {_faf ,_fda =_dged .ReferenceBitmap .GetByte (_ce -_ecg +_ef );if _fda !=nil {return _fda ;};_dec =int (_faf )<<4;};_ege =(_ege <<8)|_dec ;};if _bc >=0&&_bc < _dged .ReferenceBitmap .Height {var _ac int ;if _caa {_faf ,_fda =_dged .ReferenceBitmap .GetByte (_ce +_ef );if _fda !=nil {return _fda ;};_ac =int (_faf )<<1;};_eag =(_eag <<8)|_ac ;};if _bc > -2&&_bc < (_dged .ReferenceBitmap .Height -1){_faf =0;if _caa {_faf ,_fda =_dged .ReferenceBitmap .GetByte (_ce +_ecg +_ef );if _fda !=nil {return _fda ;};};_fef =(_fef <<8)|int (_faf );};for _bgb :=0;_bgb < _fea ;_bgb ++{var _ccb int ;_bdfg :=false ;_fbag :=(_ffe >>4)&0x1ff;if _fbag ==0x1ff{_bdfg =true ;_ccb =1;}else if _fbag ==0x00{_bdfg =true ;};if !_bdfg {if _dged ._edf {_bbg =_dged .overrideAtTemplate0 (_ffe ,_fbg +_bgb ,_cag ,_fba ,_bgb );_dged ._gd .SetIndex (int32 (_bbg ));}else {_dged ._gd .SetIndex (int32 (_ffe ));};_ccb ,_fda =_dged ._ec .DecodeBit (_dged ._gd );if _fda !=nil {return _fda ;};};_bcg :=uint (7-_bgb );_fba |=int (_ccb <<_bcg );_ffe =((_ffe &0xdb6)<<1)|_ccb |(_eac >>_bcg +5)&0x002|((_fef >>_bcg +2)&0x010)|((_eag >>_bcg )&0x080)|((_ege >>_bcg )&0x400);};_fda =_dged .RegionBitmap .SetByte (_dbc ,byte (_fba ));if _fda !=nil {return _fda ;};_dbc ++;_ce ++;};return nil ;};func (_dbbaf *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _dbbaf .IsHuffmanEncoded {switch _dbbaf .SdHuffDecodeWidthSelection {case 0:_gdde ,_ddcb :=_eb .GetStandardTable (2);if _ddcb !=nil {return 0,_ddcb ;};return _gdde .Decode (_dbbaf ._gae );case 1:_bccgb ,_bacf :=_eb .GetStandardTable (3);if _bacf !=nil {return 0,_bacf ;};return _bccgb .Decode (_dbbaf ._gae );case 3:if _dbbaf ._bgee ==nil {var _dfca int ;if _dbbaf .SdHuffDecodeHeightSelection ==3{_dfca ++;};_cgdb ,_bbafe :=_dbbaf .getUserTable (_dfca );if _bbafe !=nil {return 0,_bbafe ;};_dbbaf ._bgee =_cgdb ;};return _dbbaf ._bgee .Decode (_dbbaf ._gae );};}else {_acee ,_bbab :=_dbbaf ._ggbf .DecodeInt (_dbbaf ._eead );if _bbab !=nil {return 0,_bbab ;};if _acee ==_g .MaxInt32 {return int64 (_g .MaxInt64 ),nil ;};return int64 (_acee ),nil ;};return 0,nil ;};func (_fbgaf *HalftoneRegion )parseHeader ()error {if _agbg :=_fbgaf .RegionSegment .parseHeader ();_agbg !=nil {return _agbg ;};_afg ,_eaffe :=_fbgaf ._fccgb .ReadBit ();if _eaffe !=nil {return _eaffe ;};_fbgaf .HDefaultPixel =int8 (_afg );_adfe ,_eaffe :=_fbgaf ._fccgb .ReadBits (3);if _eaffe !=nil {return _eaffe ;};_fbgaf .CombinationOperator =_e .CombinationOperator (_adfe &0xf);_afg ,_eaffe =_fbgaf ._fccgb .ReadBit ();if _eaffe !=nil {return _eaffe ;};if _afg ==1{_fbgaf .HSkipEnabled =true ;};_adfe ,_eaffe =_fbgaf ._fccgb .ReadBits (2);if _eaffe !=nil {return _eaffe ;};_fbgaf .HTemplate =byte (_adfe &0xf);_afg ,_eaffe =_fbgaf ._fccgb .ReadBit ();if _eaffe !=nil {return _eaffe ;};if _afg ==1{_fbgaf .IsMMREncoded =true ;};_adfe ,_eaffe =_fbgaf ._fccgb .ReadBits (32);if _eaffe !=nil {return _eaffe ;};_fbgaf .HGridWidth =uint32 (_adfe &_g .MaxUint32 );_adfe ,_eaffe =_fbgaf ._fccgb .ReadBits (32);if _eaffe !=nil {return _eaffe ;};_fbgaf .HGridHeight =uint32 (_adfe &_g .MaxUint32 );_adfe ,_eaffe =_fbgaf ._fccgb .ReadBits (32);if _eaffe !=nil {return _eaffe ;};_fbgaf .HGridX =int32 (_adfe &_g .MaxInt32 );_adfe ,_eaffe =_fbgaf ._fccgb .ReadBits (32);if _eaffe !=nil {return _eaffe ;};_fbgaf .HGridY =int32 (_adfe &_g .MaxInt32 );_adfe ,_eaffe =_fbgaf ._fccgb .ReadBits (16);if _eaffe !=nil {return _eaffe ;};_fbgaf .HRegionX =uint16 (_adfe &_g .MaxUint16 );_adfe ,_eaffe =_fbgaf ._fccgb .ReadBits (16);if _eaffe !=nil {return _eaffe ;};_fbgaf .HRegionY =uint16 (_adfe &_g .MaxUint16 );if _eaffe =_fbgaf .computeSegmentDataStructure ();_eaffe !=nil {return _eaffe ;};return _fbgaf .checkInput ();};func (_dfd *HalftoneRegion )computeGrayScalePlanes (_aeec []*_e .Bitmap ,_bbbec int )([][]int ,error ){_adabg :=make ([][]int ,_dfd .HGridHeight );for _fcdb :=0;_fcdb < len (_adabg );_fcdb ++{_adabg [_fcdb ]=make ([]int ,_dfd .HGridWidth );};for _ggga :=0;_ggga < int (_dfd .HGridHeight );_ggga ++{for _bgcc :=0;_bgcc < int (_dfd .HGridWidth );_bgcc +=8{var _bde int ;if _ddc :=int (_dfd .HGridWidth )-_bgcc ;_ddc > 8{_bde =8;}else {_bde =_ddc ;};_fbad :=_aeec [0].GetByteIndex (_bgcc ,_ggga );for _efcc :=0;_efcc < _bde ;_efcc ++{_bbaf :=_efcc +_bgcc ;_adabg [_ggga ][_bbaf ]=0;for _dbga :=0;_dbga < _bbbec ;_dbga ++{_dcd ,_abcf :=_aeec [_dbga ].GetByte (_fbad );if _abcf !=nil {return nil ,_abcf ;};_dca :=_dcd >>uint (7-_bbaf &7);_gfba :=_dca &1;_dce :=1<<uint (_dbga );_acfc :=int (_gfba )*_dce ;_adabg [_ggga ][_bbaf ]+=_acfc ;};};};};return _adabg ,nil ;};func (_baea *PageInformationSegment )readWidthAndHeight ()error {_efce ,_fbcd :=_baea ._ccdd .ReadBits (32);if _fbcd !=nil {return _fbcd ;};_baea .PageBMWidth =int (_efce &_g .MaxInt32 );_efce ,_fbcd =_baea ._ccdd .ReadBits (32);if _fbcd !=nil {return _fbcd ;};_baea .PageBMHeight =int (_efce &_g .MaxInt32 );return nil ;};func (_baf *HalftoneRegion )GetPatterns ()([]*_e .Bitmap ,error ){var (_ggf []*_e .Bitmap ;_dbfdae error ;);for _ ,_gbff :=range _baf ._egbg .RTSegments {var _cffb Segmenter ;_cffb ,_dbfdae =_gbff .GetSegmentData ();if _dbfdae !=nil {_fcb .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_dbfdae );return nil ,_dbfdae ;};_eebd ,_cgaf :=_cffb .(*PatternDictionary );if !_cgaf {_dbfdae =_fc .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_cffb );return nil ,_dbfdae ;};var _eaff []*_e .Bitmap ;_eaff ,_dbfdae =_eebd .GetDictionary ();if _dbfdae !=nil {_fcb .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dbfdae );return nil ,_dbfdae ;};_ggf =append (_ggf ,_eaff ...);};return _ggf ,nil ;};func (_gfa *SymbolDictionary )decodeAggregate (_ecfbd ,_gcef uint32 )error {var (_gbea int64 ;_dcgf error ;);if _gfa .IsHuffmanEncoded {_gbea ,_dcgf =_gfa .huffDecodeRefAggNInst ();if _dcgf !=nil {return _dcgf ;};}else {_bbafa ,_eeee :=_gfa ._ggbf .DecodeInt (_gfa ._cbca );if _eeee !=nil {return _eeee ;};_gbea =int64 (_bbafa );};if _gbea > 1{return _gfa .decodeThroughTextRegion (_ecfbd ,_gcef ,uint32 (_gbea ));}else if _gbea ==1{return _gfa .decodeRefinedSymbol (_ecfbd ,_gcef );};return nil ;};func (_fecf *Header )referenceSize ()uint {switch {case _fecf .SegmentNumber <=255:return 1;case _fecf .SegmentNumber <=65535:return 2;default:return 4;};};func (_ebdb *PageInformationSegment )String ()string {_bage :=&_f .Builder {};_bage .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_bage .WriteString (_fc .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_ebdb .PageBMHeight ));_bage .WriteString (_fc .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_ebdb .PageBMWidth ));_bage .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_ebdb .ResolutionX ));_bage .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_ebdb .ResolutionY ));_bage .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_ebdb ._ceca ));_bage .WriteString (_fc .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_ebdb ._dba ));_bage .WriteString (_fc .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_ebdb .IsLossless ));_bage .WriteString (_fc .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_ebdb ._aefg ));_bage .WriteString (_fc .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_ebdb ._gdfc ));_bage .WriteString (_fc .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_ebdb .IsStripe ));_bage .WriteString (_fc .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_ebdb .MaxStripeSize ));return _bage .String ();};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);type template1 struct{};func (_adad *SymbolDictionary )parseHeader ()(_cgag error ){_fcb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _cgag !=nil {_fcb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_cgag );}else {_fcb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _cgag =_adad .readRegionFlags ();_cgag !=nil {return _cgag ;};if _cgag =_adad .setAtPixels ();_cgag !=nil {return _cgag ;};if _cgag =_adad .setRefinementAtPixels ();_cgag !=nil {return _cgag ;};if _cgag =_adad .readNumberOfExportedSymbols ();_cgag !=nil {return _cgag ;};if _cgag =_adad .readNumberOfNewSymbols ();_cgag !=nil {return _cgag ;};if _cgag =_adad .setInSyms ();_cgag !=nil {return _cgag ;};if _adad ._dgcb {_gbec :=_adad .Header .RTSegments ;for _cbag :=len (_gbec )-1;_cbag >=0;_cbag --{if _gbec [_cbag ].Type ==0{_efbcd ,_bdgd :=_gbec [_cbag ].SegmentData .(*SymbolDictionary );if !_bdgd {_cgag =_fc .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gbec [_cbag ]);return _cgag ;};if _efbcd ._dgcb {_adad .setRetainedCodingContexts (_efbcd );};break ;};};};if _cgag =_adad .checkInput ();_cgag !=nil {return _cgag ;};return nil ;};func (_gdaf *SymbolDictionary )setExportedSymbols (_ggca []int ){for _effe :=uint32 (0);_effe < _gdaf ._bgcgd +_gdaf .NumberOfNewSymbols ;_effe ++{if _ggca [_effe ]==1{var _fdaf *_e .Bitmap ;if _effe < _gdaf ._bgcgd {_fdaf =_gdaf ._edgd [_effe ];}else {_fdaf =_gdaf ._bdga [_effe -_gdaf ._bgcgd ];};_fcb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_fdaf );_gdaf ._deca =append (_gdaf ._deca ,_fdaf );};};};func (_eadg *TableSegment )HtOOB ()int32 {return _eadg ._dcab };func (_fdeg *Header )Encode (w _fb .BinaryWriter )(_fbdc int ,_dcaa error ){const _bagc ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _fbba _fb .BinaryWriter ;_fcb .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _dcaa !=nil {_fcb .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_dcaa );}else {_fcb .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_fdeg );_fcb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _fdeg .SegmentData !=nil {_ffa ,_gbg :=_fdeg .SegmentData .(SegmentEncoder );if !_gbg {return 0,_dg .Errorf (_bagc ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_fdeg .SegmentData );};_fbba =_fb .BufferedMSB ();_fbdc ,_dcaa =_ffa .Encode (_fbba );if _dcaa !=nil {return 0,_dg .Wrap (_dcaa ,_bagc ,"");};_fdeg .SegmentDataLength =uint64 (_fbdc );};if _fdeg .pageSize ()==4{_fdeg .PageAssociationFieldSize =true ;};var _ead int ;_ead ,_dcaa =_fdeg .writeSegmentNumber (w );if _dcaa !=nil {return 0,_dg .Wrap (_dcaa ,_bagc ,"");};_fbdc +=_ead ;if _dcaa =_fdeg .writeFlags (w );_dcaa !=nil {return _fbdc ,_dg .Wrap (_dcaa ,_bagc ,"");};_fbdc ++;_ead ,_dcaa =_fdeg .writeReferredToCount (w );if _dcaa !=nil {return 0,_dg .Wrap (_dcaa ,_bagc ,"");};_fbdc +=_ead ;_ead ,_dcaa =_fdeg .writeReferredToSegments (w );if _dcaa !=nil {return 0,_dg .Wrap (_dcaa ,_bagc ,"");};_fbdc +=_ead ;_ead ,_dcaa =_fdeg .writeSegmentPageAssociation (w );if _dcaa !=nil {return 0,_dg .Wrap (_dcaa ,_bagc ,"");};_fbdc +=_ead ;_ead ,_dcaa =_fdeg .writeSegmentDataLength (w );if _dcaa !=nil {return 0,_dg .Wrap (_dcaa ,_bagc ,"");};_fbdc +=_ead ;_fdeg .HeaderLength =int64 (_fbdc )-int64 (_fdeg .SegmentDataLength );if _fbba !=nil {if _ ,_dcaa =w .Write (_fbba .Data ());_dcaa !=nil {return _fbdc ,_dg .Wrap (_dcaa ,_bagc ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _fbdc ,nil ;};func (_eeea *SymbolDictionary )setInSyms ()error {if _eeea .Header .RTSegments !=nil {return _eeea .retrieveImportSymbols ();};_eeea ._edgd =make ([]*_e .Bitmap ,0);return nil ;};type Type int ;func (_gef *GenericRegion )Size ()int {return _gef .RegionSegment .Size ()+1+2*len (_gef .GBAtX )};func (_abccf *Header )writeReferredToSegments (_gadfe _fb .BinaryWriter )(_afdb int ,_agbd error ){const _bbbef ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_abafc uint16 ;_dafg uint32 ;);_gccg :=_abccf .referenceSize ();_cbbbg :=1;_febcd :=make ([]byte ,_gccg );for _ ,_agde :=range _abccf .RTSNumbers {switch _gccg {case 4:_dafg =uint32 (_agde );_da .BigEndian .PutUint32 (_febcd ,_dafg );_cbbbg ,_agbd =_gadfe .Write (_febcd );if _agbd !=nil {return 0,_dg .Wrap (_agbd ,_bbbef ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_abafc =uint16 (_agde );_da .BigEndian .PutUint16 (_febcd ,_abafc );_cbbbg ,_agbd =_gadfe .Write (_febcd );if _agbd !=nil {return 0,_dg .Wrap (_agbd ,_bbbef ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _agbd =_gadfe .WriteByte (byte (_agde ));_agbd !=nil {return 0,_dg .Wrap (_agbd ,_bbbef ,"\u0075\u0069\u006et\u0038");};};_afdb +=_cbbbg ;};return _afdb ,nil ;};func (_eae *Header )CleanSegmentData (){if _eae .SegmentData !=nil {_eae .SegmentData =nil ;};};func (_dagb *TextRegion )Init (header *Header ,r _fb .StreamReader )error {_dagb .Header =header ;_dagb ._fgfcg =r ;_dagb .RegionInfo =NewRegionSegment (_dagb ._fgfcg );return _dagb .parseHeader ();};func (_cfge *Header )writeSegmentDataLength (_cfgee _fb .BinaryWriter )(_bgea int ,_dcca error ){_agee :=make ([]byte ,4);_da .BigEndian .PutUint32 (_agee ,uint32 (_cfge .SegmentDataLength ));if _bgea ,_dcca =_cfgee .Write (_agee );_dcca !=nil {return 0,_dg .Wrap (_dcca ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _bgea ,nil ;};