//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_a "encoding/binary";_d "fmt";_ba "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/internal/bitwise";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_eg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ega "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_da "io";_b "math";_ef "runtime/debug";);func (_cef *Document )Encode ()(_fg []byte ,_aeg error ){const _ff ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _gge ,_eefa int ;if _cef .FullHeaders {if _gge ,_aeg =_cef .encodeFileHeader (_cef ._eff );_aeg !=nil {return nil ,_bb .Wrap (_aeg ,_ff ,"");};};var (_baf bool ;_bbdf *_ega .Header ;_aea *Page ;);if _aeg =_cef .completeClassifiedPages ();_aeg !=nil {return nil ,_bb .Wrap (_aeg ,_ff ,"");};if _aeg =_cef .produceClassifiedPages ();_aeg !=nil {return nil ,_bb .Wrap (_aeg ,_ff ,"");};if _cef .GlobalSegments !=nil {for _ ,_bbdf =range _cef .GlobalSegments .Segments {if _aeg =_cef .encodeSegment (_bbdf ,&_gge );_aeg !=nil {return nil ,_bb .Wrap (_aeg ,_ff ,"");};};};for _bbba :=1;_bbba <=int (_cef .NumberOfPages );_bbba ++{if _aea ,_baf =_cef .Pages [_bbba ];!_baf {return nil ,_bb .Errorf (_ff ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bbba );};for _ ,_bbdf =range _aea .Segments {if _aeg =_cef .encodeSegment (_bbdf ,&_gge );_aeg !=nil {return nil ,_bb .Wrap (_aeg ,_ff ,"");};};};if _cef .FullHeaders {if _eefa ,_aeg =_cef .encodeEOFHeader (_cef ._eff );_aeg !=nil {return nil ,_bb .Wrap (_aeg ,_ff ,"");};_gge +=_eefa ;};_fg =_cef ._eff .Data ();if len (_fg )!=_gge {_ba .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_gge ,len (_fg ));};return _fg ,nil ;};func (_gbf *Page )GetResolutionY ()(int ,error ){return _gbf .getResolutionY ()};func (_eeec *Page )GetWidth ()(int ,error ){return _eeec .getWidth ()};func (_bbgga *Page )String ()string {return _d .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_bbgga .PageNumber );};func (_decf *Page )GetResolutionX ()(int ,error ){return _decf .getResolutionX ()};func (_dda *Page )lastSegmentNumber ()(_egaf uint32 ,_abb error ){const _gcef ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_dda .Segments )==0{return _egaf ,_bb .Errorf (_gcef ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_dda .PageNumber );};return _dda .Segments [len (_dda .Segments )-1].SegmentNumber ,nil ;};func (_dgaa *Page )createStripedPage (_egg *_ega .PageInformationSegment )error {const _cgc ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_dbef ,_dcg :=_dgaa .collectPageStripes ();if _dcg !=nil {return _bb .Wrap (_dcg ,_cgc ,"");};var _ceab int ;for _ ,_affa :=range _dbef {if _age ,_gdb :=_affa .(*_ega .EndOfStripe );_gdb {_ceab =_age .LineNumber ()+1;}else {_fbg :=_affa .(_ega .Regioner );_add :=_fbg .GetRegionInfo ();_gdg :=_dgaa .getCombinationOperator (_egg ,_add .CombinaionOperator );_deee ,_bbbe :=_fbg .GetRegionBitmap ();if _bbbe !=nil {return _bb .Wrap (_bbbe ,_cgc ,"");};_bbbe =_eg .Blit (_deee ,_dgaa .Bitmap ,int (_add .XLocation ),_ceab ,_gdg );if _bbbe !=nil {return _bb .Wrap (_bbbe ,_cgc ,"");};};};return nil ;};var _c =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_cce *Page )clearSegmentData (){for _cag :=range _cce .Segments {_cce .Segments [_cag ].CleanSegmentData ();};};func (_agf *Document )addSymbolDictionary (_bfc int ,_bfe *_eg .Bitmaps ,_bfa []int ,_cdf map[int ]int ,_aa bool )(*_ega .Header ,error ){const _eb ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";_dg :=&_ega .SymbolDictionary {};if _decb :=_dg .InitEncode (_bfe ,_bfa ,_cdf ,_aa );_decb !=nil {return nil ,_decb ;};_af :=&_ega .Header {Type :_ega .TSymbolDictionary ,PageAssociation :_bfc ,SegmentData :_dg };if _bfc ==0{if _agf .GlobalSegments ==nil {_agf .GlobalSegments =&Globals {};};_agf .GlobalSegments .AddSegment (_af );return _af ,nil ;};_ccf ,_dga :=_agf .Pages [_bfc ];if !_dga {return nil ,_bb .Errorf (_eb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bfc );};var (_egc int ;_ae *_ega .Header ;);for _egc ,_ae =range _ccf .Segments {if _ae .Type ==_ega .TPageInformation {break ;};};_egc ++;_ccf .Segments =append (_ccf .Segments ,nil );copy (_ccf .Segments [_egc +1:],_ccf .Segments [_egc :]);_ccf .Segments [_egc ]=_af ;return _af ,nil ;};func (_dgb *Page )collectPageStripes ()(_eabe []_ega .Segmenter ,_ecdf error ){const _afeb ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _aag _ega .Segmenter ;for _ ,_aec :=range _dgb .Segments {switch _aec .Type {case 6,7,22,23,38,39,42,43:_aag ,_ecdf =_aec .GetSegmentData ();if _ecdf !=nil {return nil ,_bb .Wrap (_ecdf ,_afeb ,"");};_eabe =append (_eabe ,_aag );case 50:_aag ,_ecdf =_aec .GetSegmentData ();if _ecdf !=nil {return nil ,_ecdf ;};_decd ,_dgg :=_aag .(*_ega .EndOfStripe );if !_dgg {return nil ,_bb .Errorf (_afeb ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_aag );};_eabe =append (_eabe ,_decd );_dgb .FinalHeight =_decd .LineNumber ();};};return _eabe ,nil ;};func (_gff *Page )GetBitmap ()(_bfbc *_eg .Bitmap ,_ffb error ){_ba .Log .Trace (_d .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_gff .PageNumber ));defer func (){if _ffb !=nil {_ba .Log .Trace (_d .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gff .PageNumber ,_ffb ));}else {_ba .Log .Trace (_d .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_gff .PageNumber ));};}();if _gff .Bitmap !=nil {return _gff .Bitmap ,nil ;};_ffb =_gff .composePageBitmap ();if _ffb !=nil {return nil ,_ffb ;};return _gff .Bitmap ,nil ;};func (_daa *Page )nextSegmentNumber ()uint32 {return _daa .Document .nextSegmentNumber ()};func (_edc *Document )determineRandomDataOffsets (_ggea []*_ega .Header ,_dge uint64 ){if _edc .OrganizationType !=_ega .ORandom {return ;};for _ ,_cbf :=range _ggea {_cbf .SegmentDataStartOffset =_dge ;_dge +=_cbf .SegmentDataLength ;};};func (_bfba *Document )parseFileHeader ()error {const _fab ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_cca :=_bfba .InputStream .Seek (8,_da .SeekStart );if _cca !=nil {return _bb .Wrap (_cca ,_fab ,"\u0069\u0064");};_ ,_cca =_bfba .InputStream .ReadBits (5);if _cca !=nil {return _bb .Wrap (_cca ,_fab ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_eeb ,_cca :=_bfba .InputStream .ReadBit ();if _cca !=nil {return _bb .Wrap (_cca ,_fab ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _eeb ==1{_bfba .GBUseExtTemplate =true ;};_eeb ,_cca =_bfba .InputStream .ReadBit ();if _cca !=nil {return _bb .Wrap (_cca ,_fab ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _eeb !=1{_bfba .NumberOfPagesUnknown =false ;};_eeb ,_cca =_bfba .InputStream .ReadBit ();if _cca !=nil {return _bb .Wrap (_cca ,_fab ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_bfba .OrganizationType =_ega .OrganizationType (_eeb );if !_bfba .NumberOfPagesUnknown {_bfba .NumberOfPages ,_cca =_bfba .InputStream .ReadUint32 ();if _cca !=nil {return _bb .Wrap (_cca ,_fab ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_bfba ._f =13;};return nil ;};func (_ab *Document )AddGenericPage (bm *_eg .Bitmap ,duplicateLineRemoval bool )(_gb error ){const _bbg ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_ab .FullHeaders &&_ab .NumberOfPages !=0{return _bb .Error (_bbg ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};_gdc :=&Page {Segments :[]*_ega .Header {},Bitmap :bm ,Document :_ab ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true };_gdc .PageNumber =int (_ab .nextPageNumber ());_ab .Pages [_gdc .PageNumber ]=_gdc ;_gdc .AddPageInformationSegment ();if _gb =_gdc .AddGenericRegion (bm ,0,0,0,_ega .TImmediateGenericRegion ,duplicateLineRemoval );_gb !=nil {return _bb .Wrap (_gb ,_bbg ,"");};if _ab .FullHeaders {_gdc .AddEndOfPageSegment ();};return nil ;};func (_gabf *Page )countRegions ()int {var _ege int ;for _ ,_eabf :=range _gabf .Segments {switch _eabf .Type {case 6,7,22,23,38,39,42,43:_ege ++;};};return _ege ;};func _bg (_gbb int )int {_fdb :=0;_dbe :=(_gbb &(_gbb -1))==0;_gbb >>=1;for ;_gbb !=0;_gbb >>=1{_fdb ++;};if _dbe {return _fdb ;};return _fdb +1;};func (_effa *Page )getPageInformationSegment ()*_ega .Header {for _ ,_dagc :=range _effa .Segments {if _dagc .Type ==_ega .TPageInformation {return _dagc ;};};_ba .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_effa );return nil ;};func (_egf *Document )produceClassifiedPages ()(_gaf error ){const _fd ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _egf .Classer ==nil {return nil ;};var (_ccg *Page ;_cde bool ;_db *_ega .Header ;);for _ggc :=1;_ggc <=int (_egf .NumberOfPages );_ggc ++{if _ccg ,_cde =_egf .Pages [_ggc ];!_cde {return _bb .Errorf (_fd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ggc );};if _ccg .EncodingMethod ==GenericEM {continue ;};if _db ==nil {if _db ,_gaf =_egf .GlobalSegments .GetSymbolDictionary ();_gaf !=nil {return _bb .Wrap (_gaf ,_fd ,"");};};if _gaf =_egf .produceClassifiedPage (_ccg ,_db );_gaf !=nil {return _bb .Wrapf (_gaf ,_fd ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ggc );};};return nil ;};func (_fgcb *Document )nextSegmentNumber ()uint32 {_fcb :=_fgcb .CurrentSegmentNumber ;_fgcb .CurrentSegmentNumber ++;return _fcb ;};func (_fbe *Document )encodeFileHeader (_fag _g .BinaryWriter )(_eefd int ,_fgb error ){const _gcb ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_eefd ,_fgb =_fag .Write (_c );if _fgb !=nil {return _eefd ,_bb .Wrap (_fgb ,_gcb ,"\u0069\u0064");};if _fgb =_fag .WriteByte (0x01);_fgb !=nil {return _eefd ,_bb .Wrap (_fgb ,_gcb ,"\u0066\u006c\u0061g\u0073");};_eefd ++;_egfb :=make ([]byte ,4);_a .BigEndian .PutUint32 (_egfb ,_fbe .NumberOfPages );_afc ,_fgb :=_fag .Write (_egfb );if _fgb !=nil {return _afc ,_bb .Wrap (_fgb ,_gcb ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_eefd +=_afc ;return _eefd ,nil ;};func (_dca *Page )AddPageInformationSegment (){_bbbc :=&_ega .PageInformationSegment {PageBMWidth :_dca .FinalWidth ,PageBMHeight :_dca .FinalHeight ,ResolutionX :_dca .ResolutionX ,ResolutionY :_dca .ResolutionY ,IsLossless :_dca .IsLossless };_abd :=&_ega .Header {PageAssociation :_dca .PageNumber ,SegmentDataLength :uint64 (_bbbc .Size ()),SegmentData :_bbbc ,Type :_ega .TPageInformation };_dca .Segments =append (_dca .Segments ,_abd );};func (_dcgb *Page )getCombinationOperator (_egb *_ega .PageInformationSegment ,_ebcf _eg .CombinationOperator )_eg .CombinationOperator {if _egb .CombinationOperatorOverrideAllowed (){return _ebcf ;};return _egb .CombinationOperator ();};func (_dcf *Document )mapData ()error {const _ffe ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_bee []*_ega .Header ;_fea int64 ;_aga _ega .Type ;);_bec ,_daf :=_dcf .isFileHeaderPresent ();if _daf !=nil {return _bb .Wrap (_daf ,_ffe ,"");};if _bec {if _daf =_dcf .parseFileHeader ();_daf !=nil {return _bb .Wrap (_daf ,_ffe ,"");};_fea +=int64 (_dcf ._f );_dcf .FullHeaders =true ;};var (_cbg *Page ;_bbgf bool ;);for _aga !=51&&!_bbgf {_gcf ,_fed :=_ega .NewHeader (_dcf ,_dcf .InputStream ,_fea ,_dcf .OrganizationType );if _fed !=nil {return _bb .Wrap (_fed ,_ffe ,"");};_ba .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_gcf .SegmentNumber ,_gcf .Type );_aga =_gcf .Type ;if _aga !=_ega .TEndOfFile {if _gcf .PageAssociation !=0{_cbg =_dcf .Pages [_gcf .PageAssociation ];if _cbg ==nil {_cbg =_gef (_dcf ,_gcf .PageAssociation );_dcf .Pages [_gcf .PageAssociation ]=_cbg ;if _dcf .NumberOfPagesUnknown {_dcf .NumberOfPages ++;};};_cbg .Segments =append (_cbg .Segments ,_gcf );}else {_dcf .GlobalSegments .AddSegment (_gcf );};};_bee =append (_bee ,_gcf );_fea =_dcf .InputStream .StreamPosition ();if _dcf .OrganizationType ==_ega .OSequential {_fea +=int64 (_gcf .SegmentDataLength );};_bbgf ,_fed =_dcf .reachedEOF (_fea );if _fed !=nil {_ba .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fed );return _bb .Wrap (_fed ,_ffe ,"");};};_dcf .determineRandomDataOffsets (_bee ,uint64 (_fea ));return nil ;};func (_edd *Page )createNormalPage (_baa *_ega .PageInformationSegment )error {const _eddd ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_edd .Bitmap =_eg .New (_baa .PageBMWidth ,_baa .PageBMHeight );if _baa .DefaultPixelValue ()!=0{_edd .Bitmap .SetDefaultPixel ();};for _ ,_ecd :=range _edd .Segments {switch _ecd .Type {case 6,7,22,23,38,39,42,43:_ba .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_ecd .SegmentNumber );_edfg ,_bbce :=_ecd .GetSegmentData ();if _bbce !=nil {return _bbce ;};_fcce ,_bddg :=_edfg .(_ega .Regioner );if !_bddg {_ba .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_edfg );return _bb .Errorf (_eddd ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_edfg );};_ffdb ,_bbce :=_fcce .GetRegionBitmap ();if _bbce !=nil {return _bb .Wrap (_bbce ,_eddd ,"");};if _edd .fitsPage (_baa ,_ffdb ){_edd .Bitmap =_ffdb ;}else {_beg :=_fcce .GetRegionInfo ();_aae :=_edd .getCombinationOperator (_baa ,_beg .CombinaionOperator );_bbce =_eg .Blit (_ffdb ,_edd .Bitmap ,int (_beg .XLocation ),int (_beg .YLocation ),_aae );if _bbce !=nil {return _bb .Wrap (_bbce ,_eddd ,"");};};};};return nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_eff :_g .BufferedMSB (),Pages :map[int ]*Page {},_cb :map[int ][]int {},_cc :map[int ]int {},_gg :map[int ][]int {}};};func DecodeDocument (input _g .StreamReader ,globals *Globals )(*Document ,error ){return _dfg (input ,globals );};type Globals struct{Segments []*_ega .Header ;};func (_bafb *Page )GetSegment (number int )(*_ega .Header ,error ){const _ebd ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_adef :=range _bafb .Segments {if _adef .SegmentNumber ==uint32 (number ){return _adef ,nil ;};};_bgbg :=make ([]uint32 ,len (_bafb .Segments ));for _egdd ,_ggf :=range _bafb .Segments {_bgbg [_egdd ]=_ggf .SegmentNumber ;};return nil ,_bb .Errorf (_ebd ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_bafb .PageNumber ,_bgbg );};func _gef (_acc *Document ,_agc int )*Page {return &Page {Document :_acc ,PageNumber :_agc ,Segments :[]*_ega .Header {}};};type EncodingMethod int ;func (_ebdf *Page )getHeight ()(int ,error ){const _ecde ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _ebdf .FinalHeight !=0{return _ebdf .FinalHeight ,nil ;};_ageb :=_ebdf .getPageInformationSegment ();if _ageb ==nil {return 0,_bb .Error (_ecde ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dff ,_afgd :=_ageb .GetSegmentData ();if _afgd !=nil {return 0,_bb .Wrap (_afgd ,_ecde ,"");};_cbd ,_egee :=_dff .(*_ega .PageInformationSegment );if !_egee {return 0,_bb .Errorf (_ecde ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dff );};if _cbd .PageBMHeight ==_b .MaxInt32 {_ ,_afgd =_ebdf .GetBitmap ();if _afgd !=nil {return 0,_bb .Wrap (_afgd ,_ecde ,"");};}else {_ebdf .FinalHeight =_cbd .PageBMHeight ;};return _ebdf .FinalHeight ,nil ;};func _dfg (_egd _g .StreamReader ,_fcf *Globals )(*Document ,error ){_bgb :=&Document {Pages :make (map[int ]*Page ),InputStream :_egd ,OrganizationType :_ega .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_fcf ,_f :9};if _bgb .GlobalSegments ==nil {_bgb .GlobalSegments =&Globals {};};if _gaa :=_bgb .mapData ();_gaa !=nil {return nil ,_gaa ;};return _bgb ,nil ;};func (_ge *Document )completeClassifiedPages ()(_ce error ){const _ed ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _ge .Classer ==nil {return nil ;};_ge ._bf =make ([]int ,_ge .Classer .UndilatedTemplates .Size ());for _ga :=0;_ga < _ge .Classer .ClassIDs .Size ();_ga ++{_bd ,_gae :=_ge .Classer .ClassIDs .Get (_ga );if _gae !=nil {return _bb .Wrapf (_gae ,_ed ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_ga );};_ge ._bf [_bd ]++;};var _fc []int ;for _ee :=0;_ee < _ge .Classer .UndilatedTemplates .Size ();_ee ++{if _ge .NumberOfPages ==1||_ge ._bf [_ee ]> 1{_fc =append (_fc ,_ee );};};var (_gde *Page ;_cg bool ;);for _edf ,_ea :=range *_ge .Classer .ComponentPageNumbers {if _gde ,_cg =_ge .Pages [_ea ];!_cg {return _bb .Errorf (_ed ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_edf );};if _gde .EncodingMethod ==GenericEM {_ba .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_edf );continue ;};_ge ._gg [_ea ]=append (_ge ._gg [_ea ],_edf );_dab ,_ca :=_ge .Classer .ClassIDs .Get (_edf );if _ca !=nil {return _bb .Wrapf (_ca ,_ed ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_edf );};if _ge ._bf [_dab ]==1&&_ge .NumberOfPages !=1{_cgb :=append (_ge ._cb [_ea ],_dab );_ge ._cb [_ea ]=_cgb ;};};if _ce =_ge .Classer .ComputeLLCorners ();_ce !=nil {return _bb .Wrap (_ce ,_ed ,"");};if _ ,_ce =_ge .addSymbolDictionary (0,_ge .Classer .UndilatedTemplates ,_fc ,_ge ._cc ,false );_ce !=nil {return _bb .Wrap (_ce ,_ed ,"");};return nil ;};func (_fgc *Document )nextPageNumber ()uint32 {_fgc .NumberOfPages ++;return _fgc .NumberOfPages };func (_afe *Page )addTextRegionSegment (_gea []*_ega .Header ,_bbc ,_bgg map[int ]int ,_egfbf []int ,_gded *_eg .Points ,_fba *_eg .Bitmaps ,_eabg *_gc .IntSlice ,_bbe *_eg .Boxes ,_ade ,_eefc int ){_bda :=&_ega .TextRegion {NumberOfSymbols :uint32 (_eefc )};_bda .InitEncode (_bbc ,_bgg ,_egfbf ,_gded ,_fba ,_eabg ,_bbe ,_afe .FinalWidth ,_afe .FinalHeight ,_ade );_efge :=&_ega .Header {RTSegments :_gea ,SegmentData :_bda ,PageAssociation :_afe .PageNumber ,Type :_ega .TImmediateTextRegion };_fbeg :=_ega .TPageInformation ;if _bgg !=nil {_fbeg =_ega .TSymbolDictionary ;};var _dgea int ;for ;_dgea < len (_afe .Segments );_dgea ++{if _afe .Segments [_dgea ].Type ==_fbeg {_dgea ++;break ;};};_afe .Segments =append (_afe .Segments ,nil );copy (_afe .Segments [_dgea +1:],_afe .Segments [_dgea :]);_afe .Segments [_dgea ]=_efge ;};func (_ag *Document )AddClassifiedPage (bm *_eg .Bitmap ,method _gd .Method )(_gba error ){const _gf ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_ag .FullHeaders &&_ag .NumberOfPages !=0{return _bb .Error (_gf ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};if _ag .Classer ==nil {if _ag .Classer ,_gba =_gd .Init (_gd .DefaultSettings ());_gba !=nil {return _bb .Wrap (_gba ,_gf ,"");};};_de :=int (_ag .nextPageNumber ());_def :=&Page {Segments :[]*_ega .Header {},Bitmap :bm ,Document :_ag ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_de };_ag .Pages [_de ]=_def ;switch method {case _gd .RankHaus :_def .EncodingMethod =RankHausEM ;case _gd .Correlation :_def .EncodingMethod =CorrelationEM ;};_def .AddPageInformationSegment ();if _gba =_ag .Classer .AddPage (bm ,_de ,method );_gba !=nil {return _bb .Wrap (_gba ,_gf ,"");};if _ag .FullHeaders {_def .AddEndOfPageSegment ();};return nil ;};func (_aac *Document )isFileHeaderPresent ()(bool ,error ){_aac .InputStream .Mark ();for _ ,_eec :=range _c {_adc ,_eab :=_aac .InputStream .ReadByte ();if _eab !=nil {return false ,_eab ;};if _eec !=_adc {_aac .InputStream .Reset ();return false ,nil ;};};_aac .InputStream .Reset ();return true ,nil ;};func (_cea *Globals )GetSegment (segmentNumber int )(*_ega .Header ,error ){const _efg ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _cea ==nil {return nil ,_bb .Error (_efg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_cea .Segments )==0{return nil ,_bb .Error (_efg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _gfgc *_ega .Header ;for _ ,_gfgc =range _cea .Segments {if _gfgc .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _gfgc ==nil {return nil ,_bb .Error (_efg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _gfgc ,nil ;};func (_fdbe *Page )getResolutionX ()(int ,error ){const _eba ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _fdbe .ResolutionX !=0{return _fdbe .ResolutionX ,nil ;};_gac :=_fdbe .getPageInformationSegment ();if _gac ==nil {return 0,_bb .Error (_eba ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fda ,_agdg :=_gac .GetSegmentData ();if _agdg !=nil {return 0,_bb .Wrap (_agdg ,_eba ,"");};_aaa ,_bbcg :=_fda .(*_ega .PageInformationSegment );if !_bbcg {return 0,_bb .Errorf (_eba ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fda );};_fdbe .ResolutionX =_aaa .ResolutionX ;return _fdbe .ResolutionX ,nil ;};func (_dea *Page )fitsPage (_cae *_ega .PageInformationSegment ,_aced *_eg .Bitmap )bool {return _dea .countRegions ()==1&&_cae .DefaultPixelValue ()==0&&_cae .PageBMWidth ==_aced .Width &&_cae .PageBMHeight ==_aced .Height ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _g .StreamReader ;GlobalSegments *Globals ;OrganizationType _ega .OrganizationType ;Classer *_gd .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_eg .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_f uint8 ;_eff *_g .BufferedWriter ;EncodeGlobals bool ;_ec int ;_cb map[int ][]int ;_gg map[int ][]int ;_bf []int ;_cc map[int ]int ;};func (_agg *Document )encodeSegment (_fe *_ega .Header ,_bafd *int )error {const _dba ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_fe .SegmentNumber =_agg .nextSegmentNumber ();_ffa ,_bfaf :=_fe .Encode (_agg ._eff );if _bfaf !=nil {return _bb .Wrapf (_bfaf ,_dba ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fe .SegmentNumber );};*_bafd +=_ffa ;return nil ;};func (_cbe *Document )GetGlobalSegment (i int )(*_ega .Header ,error ){_ad ,_bbgg :=_cbe .GlobalSegments .GetSegment (i );if _bbgg !=nil {return nil ,_bb .Wrap (_bbgg ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _ad ,nil ;};func (_dee *Document )encodeEOFHeader (_ace _g .BinaryWriter )(_fb int ,_edbb error ){_ebf :=&_ega .Header {SegmentNumber :_dee .nextSegmentNumber (),Type :_ega .TEndOfFile };if _fb ,_edbb =_ebf .Encode (_ace );_edbb !=nil {return 0,_bb .Wrap (_edbb ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _fb ,nil ;};func (_gda *Document )reachedEOF (_ebg int64 )(bool ,error ){const _gcfa ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_ccd :=_gda .InputStream .Seek (_ebg ,_da .SeekStart );if _ccd !=nil {_ba .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ccd );return false ,_bb .Wrap (_ccd ,_gcfa ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_ccd =_gda .InputStream .ReadBits (32);if _ccd ==_da .EOF {return true ,nil ;}else if _ccd !=nil {return false ,_bb .Wrap (_ccd ,_gcfa ,"");};return false ,nil ;};func (_gce *Page )AddEndOfPageSegment (){_ece :=&_ega .Header {Type :_ega .TEndOfPage ,PageAssociation :_gce .PageNumber };_gce .Segments =append (_gce .Segments ,_ece );};func (_eeeb *Document )GetPage (pageNumber int )(_ega .Pager ,error ){const _ffd ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_ba .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_ef .Stack ());return nil ,_bb .Errorf (_ffd ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );};if pageNumber > len (_eeeb .Pages ){_ba .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ef .Stack ());return nil ,_bb .Error (_ffd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};_gbg ,_aff :=_eeeb .Pages [pageNumber ];if !_aff {_ba .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_ef .Stack ());return nil ,_bb .Errorf (_ffd ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _gbg ,nil ;};func (_gca *Page )composePageBitmap ()error {const _bad ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _gca .PageNumber ==0{return nil ;};_gfc :=_gca .getPageInformationSegment ();if _gfc ==nil {return _bb .Error (_bad ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eecd ,_eaa :=_gfc .GetSegmentData ();if _eaa !=nil {return _eaa ;};_adf ,_bga :=_eecd .(*_ega .PageInformationSegment );if !_bga {return _bb .Error (_bad ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};if _eaa =_gca .createPage (_adf );_eaa !=nil {return _bb .Wrap (_eaa ,_bad ,"");};_gca .clearSegmentData ();return nil ;};func (_aacf *Page )getWidth ()(int ,error ){const _eefe ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _aacf .FinalWidth !=0{return _aacf .FinalWidth ,nil ;};_bgc :=_aacf .getPageInformationSegment ();if _bgc ==nil {return 0,_bb .Error (_eefe ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_ebga ,_fbgc :=_bgc .GetSegmentData ();if _fbgc !=nil {return 0,_bb .Wrap (_fbgc ,_eefe ,"");};_aba ,_dcgc :=_ebga .(*_ega .PageInformationSegment );if !_dcgc {return 0,_bb .Errorf (_eefe ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_ebga );};_aacf .FinalWidth =_aba .PageBMWidth ;return _aacf .FinalWidth ,nil ;};func (_dc *Document )completeSymbols ()(_edb error ){const _eee ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _dc .Classer ==nil {return nil ;};if _dc .Classer .UndilatedTemplates ==nil {return _bb .Error (_eee ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_bbd :=len (_dc .Pages )==1;_gfe :=make ([]int ,_dc .Classer .UndilatedTemplates .Size ());var _bfb int ;for _bbgd :=0;_bbgd < _dc .Classer .ClassIDs .Size ();_bbgd ++{_bfb ,_edb =_dc .Classer .ClassIDs .Get (_bbgd );if _edb !=nil {return _bb .Wrap (_edb ,_eee ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");};_gfe [_bfb ]++;};var _dd []int ;for _fa :=0;_fa < _dc .Classer .UndilatedTemplates .Size ();_fa ++{if _gfe [_fa ]==0{return _bb .Error (_eee ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");};if _gfe [_fa ]> 1||_bbd {_dd =append (_dd ,_fa );};};_dc ._ec =len (_dd );var _eef ,_geg int ;for _gfg :=0;_gfg < _dc .Classer .ComponentPageNumbers .Size ();_gfg ++{_eef ,_edb =_dc .Classer .ComponentPageNumbers .Get (_gfg );if _edb !=nil {return _bb .Wrapf (_edb ,_eee ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_gfg );};_geg ,_edb =_dc .Classer .ClassIDs .Get (_gfg );if _edb !=nil {return _bb .Wrapf (_edb ,_eee ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_eef );};if _gfe [_geg ]==1&&!_bbd {_dc ._cb [_eef ]=append (_dc ._cb [_eef ],_geg );};};if _edb =_dc .Classer .ComputeLLCorners ();_edb !=nil {return _bb .Wrap (_edb ,_eee ,"");};return nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);type Page struct{Segments []*_ega .Header ;PageNumber int ;Bitmap *_eg .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;};func (_bfcd *Page )createPage (_fcfg *_ega .PageInformationSegment )error {var _gcca error ;if !_fcfg .IsStripe ||_fcfg .PageBMHeight !=-1{_gcca =_bfcd .createNormalPage (_fcfg );}else {_gcca =_bfcd .createStripedPage (_fcfg );};return _gcca ;};func (_ebc *Page )GetHeight ()(int ,error ){return _ebc .getHeight ()};func (_aggd *Globals )AddSegment (segment *_ega .Header ){_aggd .Segments =append (_aggd .Segments ,segment );};func (_abc *Page )AddGenericRegion (bm *_eg .Bitmap ,xloc ,yloc ,template int ,tp _ega .Type ,duplicateLineRemoval bool )error {const _ddc ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_dbff :=&_ega .GenericRegion {};if _ecg :=_dbff .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_ecg !=nil {return _bb .Wrap (_ecg ,_ddc ,"");};_beef :=&_ega .Header {Type :_ega .TImmediateGenericRegion ,PageAssociation :_abc .PageNumber ,SegmentData :_dbff };_abc .Segments =append (_abc .Segments ,_beef );return nil ;};func (_dbf *Document )produceClassifiedPage (_bdd *Page ,_bc *_ega .Header )(_ac error ){const _be ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _efd map[int ]int ;_gab :=_dbf ._ec ;_dag :=[]*_ega .Header {_bc };if len (_dbf ._cb [_bdd .PageNumber ])> 0{_efd =map[int ]int {};_bbb ,_dec :=_dbf .addSymbolDictionary (_bdd .PageNumber ,_dbf .Classer .UndilatedTemplates ,_dbf ._cb [_bdd .PageNumber ],_efd ,false );if _dec !=nil {return _bb .Wrap (_dec ,_be ,"");};_dag =append (_dag ,_bbb );_gab +=len (_dbf ._cb [_bdd .PageNumber ]);};_df :=_dbf ._gg [_bdd .PageNumber ];_ba .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_bdd .PageNumber ,_df );_bdd .addTextRegionSegment (_dag ,_dbf ._cc ,_efd ,_dbf ._gg [_bdd .PageNumber ],_dbf .Classer .PtaLL ,_dbf .Classer .UndilatedTemplates ,_dbf .Classer .ClassIDs ,nil ,_bg (_gab ),len (_dbf ._gg [_bdd .PageNumber ]));return nil ;};func (_efdg *Globals )GetSymbolDictionary ()(*_ega .Header ,error ){const _afg ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _efdg ==nil {return nil ,_bb .Error (_afg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_efdg .Segments )==0{return nil ,_bb .Error (_afg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_bcc :=range _efdg .Segments {if _bcc .Type ==_ega .TSymbolDictionary {return _bcc ,nil ;};};return nil ,_bb .Error (_afg ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_gedc *Globals )GetSegmentByIndex (index int )(*_ega .Header ,error ){const _gcc ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _gedc ==nil {return nil ,_bb .Error (_gcc ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gedc .Segments )==0{return nil ,_bb .Error (_gcc ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_gedc .Segments )-1{return nil ,_bb .Error (_gcc ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _gedc .Segments [index ],nil ;};func (_afd *Page )getResolutionY ()(int ,error ){const _fbgf ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _afd .ResolutionY !=0{return _afd .ResolutionY ,nil ;};_gbd :=_afd .getPageInformationSegment ();if _gbd ==nil {return 0,_bb .Error (_fbgf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gcg ,_fbd :=_gbd .GetSegmentData ();if _fbd !=nil {return 0,_bb .Wrap (_fbd ,_fbgf ,"");};_ada ,_fgd :=_gcg .(*_ega .PageInformationSegment );if !_fgd {return 0,_bb .Errorf (_fbgf ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_gcg );};_afd .ResolutionY =_ada .ResolutionY ;return _afd .ResolutionY ,nil ;};func (_fbag *Page )Encode (w _g .BinaryWriter )(_fdd int ,_bde error ){const _fgf ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _beeb int ;for _ ,_abf :=range _fbag .Segments {if _beeb ,_bde =_abf .Encode (w );_bde !=nil {return _fdd ,_bb .Wrap (_bde ,_fgf ,"");};_fdd +=_beeb ;};return _fdd ,nil ;};func (_cge *Document )GetNumberOfPages ()(uint32 ,error ){if _cge .NumberOfPagesUnknown ||_cge .NumberOfPages ==0{if len (_cge .Pages )==0{if _dfe :=_cge .mapData ();_dfe !=nil {return 0,_bb .Wrap (_dfe ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_cge .Pages )),nil ;};return _cge .NumberOfPages ,nil ;};