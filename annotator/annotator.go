//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_aa "bytes";_fe "errors";_g "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/contentstream";_faf "github.com/unidoc/unipdf/v3/contentstream/draw";_be "github.com/unidoc/unipdf/v3/core";_f "github.com/unidoc/unipdf/v3/internal/textencoding";_e "github.com/unidoc/unipdf/v3/model";_cb "image";_ce "math";_c "strings";_fa "unicode";);func _ceeg (_ccef _cb .Image ,_aagc string ,_dcee *SignatureFieldOpts ,_egc []float64 ,_cdea *_b .ContentCreator )(*_be .PdfObjectName ,*_e .XObjectImage ,error ){_baf ,_fbe :=_e .DefaultImageHandler {}.NewImageFromGoImage (_ccef );if _fbe !=nil {return nil ,nil ,_fbe ;};_afdg ,_fbe :=_e .NewXObjectImageFromImage (_baf ,nil ,_dcee .Encoder );if _fbe !=nil {return nil ,nil ,_fbe ;};_fbaa ,_fcg :=float64 (*_afdg .Width ),float64 (*_afdg .Height );_bdcd :=_egc [2]-_egc [0];_caab :=_egc [3]-_egc [1];if _dcee .AutoSize {_aebb :=_ce .Min (_bdcd /_fbaa ,_caab /_fcg );_fbaa *=_aebb ;_fcg *=_aebb ;_egc [0]=_egc [0]+(_bdcd /2)-(_fbaa /2);_egc [1]=_egc [1]+(_caab /2)-(_fcg /2);};var _abge *_be .PdfObjectName ;if _gag ,_caff :=_be .GetName (_afdg .Name );_caff {_abge =_gag ;}else {_abge =_be .MakeName (_aagc );};if _cdea !=nil {_cdea .Add_q ().Translate (_egc [0],_egc [1]).Scale (_fbaa ,_fcg ).Add_Do (*_abge ).Add_Q ();}else {return nil ,nil ,_fe .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");};return _abge ,_afdg ,nil ;};func (_ceef *AppearanceStyle )processDA (_dgd *_e .PdfField ,_feab *_b .ContentStreamOperations ,_fdac ,_gdgc *_e .PdfPageResources ,_gffe *_b .ContentCreator )(*AppearanceFont ,bool ,error ){var _fef *AppearanceFont ;var _gacb bool ;if _ceef .Fonts !=nil {if _ceef .Fonts .Fallback !=nil {_fef =_ceef .Fonts .Fallback ;};if _cbda :=_ceef .Fonts .FieldFallbacks ;_cbda !=nil {if _dcb ,_gdae :=_cbda [_dgd .PartialName ()];_gdae {_fef =_dcb ;}else if _aeab ,_gggb :=_dgd .FullName ();_gggb ==nil {if _ebcdd ,_dcbc :=_cbda [_aeab ];_dcbc {_fef =_ebcdd ;};};};_gacb =_ceef .Fonts .ForceReplace ;};var _beg string ;var _fggf float64 ;var _fdgg bool ;if _feab !=nil {for _ ,_geb :=range *_feab {if _geb .Operand =="\u0054\u0066"&&len (_geb .Params )==2{if _bed ,_cad :=_be .GetNameVal (_geb .Params [0]);_cad {_beg =_bed ;};if _bff ,_gfgf :=_be .GetNumberAsFloat (_geb .Params [1]);_gfgf ==nil {_fggf =_bff ;};_fdgg =true ;continue ;};_gffe .AddOperand (*_geb );};};var _afdc *AppearanceFont ;var _dce _be .PdfObject ;if _gacb &&_fef !=nil {_afdc =_fef ;}else {if _fdac !=nil &&_beg !=""{if _gcgb ,_eaf :=_fdac .GetFontByName (*_be .MakeName (_beg ));_eaf {if _ecfa ,_gea :=_e .NewPdfFontFromPdfObject (_gcgb );_gea ==nil {_dce =_gcgb ;_afdc =&AppearanceFont {Name :_beg ,Font :_ecfa ,Size :_fggf };}else {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_gea );};};};if _afdc ==nil &&_fef !=nil {_afdc =_fef ;};if _afdc ==nil {_efggd ,_dffa :=_e .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _dffa !=nil {return nil ,false ,_dffa ;};_afdc =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_efggd ,Size :_fggf };};};_cgb :=*_be .MakeName (_afdc .Name );if _dce ==nil {_dce =_afdc .Font .ToPdfObject ();};if _fdac !=nil &&!_fdac .HasFontByName (_cgb ){_fdac .SetFontByName (_cgb ,_dce );};if _gdgc !=nil &&!_gdgc .HasFontByName (_cgb ){_gdgc .SetFontByName (_cgb ,_dce );};return _afdc ,_fdgg ,nil ;};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};func _ded (_cgc *_e .PdfAnnotationWidget ,_fbca *_e .PdfFieldText ,_bb *_e .PdfPageResources ,_aee AppearanceStyle )(*_be .PdfObjectDictionary ,error ){_bgb :=_e .NewPdfPageResources ();_db ,_gb :=_be .GetArray (_cgc .Rect );if !_gb {return nil ,_fe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_cd ,_cda :=_e .NewPdfRectangle (*_db );if _cda !=nil {return nil ,_cda ;};_dba ,_ec :=_cd .Width (),_cd .Height ();_acd ,_ee :=_dba ,_ec ;_ed ,_bge :=_be .GetDict (_cgc .MK );if _bge {_ca ,_ :=_be .GetDict (_cgc .BS );_dbg :=_aee .applyAppearanceCharacteristics (_ed ,_ca ,nil );if _dbg !=nil {return nil ,_dbg ;};};_aea ,_cda :=_b .NewContentStreamParser (_bbg (_fbca .PdfField )).Parse ();if _cda !=nil {return nil ,_cda ;};_dff :=_b .NewContentCreator ();if _aee .BorderSize > 0{_bacf (_dff ,_aee ,_dba ,_ec );};if _aee .DrawAlignmentReticle {_bgbc :=_aee ;_bgbc .BorderSize =0.2;_ggb (_dff ,_bgbc ,_dba ,_ec );};_dff .Add_BMC ("\u0054\u0078");_dff .Add_q ();_dba ,_ec =_aee .applyRotation (_ed ,_dba ,_ec ,_dff );_dff .Add_BT ();_gbd ,_bga ,_cda :=_aee .processDA (_fbca .PdfField ,_aea ,_bb ,_bgb ,_dff );if _cda !=nil {return nil ,_cda ;};_ead :=_gbd .Font ;_eaa :=_gbd .Size ;_edc :=_be .MakeName (_gbd .Name );_cc :=_eaa ==0;if _cc &&_bga {_eaa =_ec *_aee .AutoFontSizeFraction ;};_fae :=_ead .Encoder ();if _fae ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_fae =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_ege ,_cda :=_ead .GetFontDescriptor ();if _cda !=nil {_g .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _fgg string ;if _dcd ,_bbd :=_be .GetString (_fbca .V );_bbd {_fgg =_dcd .Decoded ();};if len (_fgg )==0{return nil ,nil ;};_bcd :=[]string {_fgg };_gf :=false ;if _fbca .Flags ().Has (_e .FieldFlagMultiline ){_gf =true ;_fgg =_c .Replace (_fgg ,"\u000d\u000a","\u000a",-1);_fgg =_c .Replace (_fgg ,"\u000d","\u000a",-1);_bcd =_c .Split (_fgg ,"\u000a");};_efg :=0.0;_cfb :=0;if _fae !=nil {_cdb :=len (_bcd );_ff :=0;for _ff < _cdb {var _gde float64 ;_eca :=-1;_abf :=0.0;for _dd ,_dfd :=range _bcd [_ff ]{if _dfd ==' '{_eca =_dd ;_gde =_abf ;};_aeb ,_ccb :=_ead .GetRuneMetrics (_dfd );if !_ccb {_g .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_dfd );continue ;};_abf +=_aeb .Wx ;if _gf &&!_cc &&_eaa *_abf /1000.0> _dba &&_eca > 0{_gaf :=_bcd [_ff ][_eca +1:];if _ff < len (_bcd )-1{_bcd =append (_bcd [:_ff +1],_bcd [_ff :]...);_bcd [_ff +1]=_gaf ;}else {_bcd =append (_bcd ,_gaf );};_cdb ++;_bcd [_ff ]=_bcd [_ff ][0:_eca ];_abf =_gde ;break ;};};if _abf > _efg {_efg =_abf ;};_bcd [_ff ]=string (_fae .Encode (_bcd [_ff ]));if len (_bcd [_ff ])> 0{_cfb ++;};_ff ++;};};_edd :=2.0;if _eaa ==0||_cc &&_efg > 0&&_edd +_efg *_eaa /1000.0> _dba {_eaa =0.95*1000.0*(_dba -_edd )/_efg ;};_cbg :=_ebg ;{if _egf ,_ad :=_be .GetIntVal (_fbca .Q );_ad {switch _egf {case 0:_cbg =_ebg ;case 1:_cbg =_aac ;case 2:_cbg =_fgc ;default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_egf );};};};_gfd :=_aee .MultilineLineHeight ;_gcag :=_eaa ;if _gf &&_cfb > 1{_gcag =_gfd *_eaa ;};var _bdeg float64 ;if _ege !=nil {_bdeg ,_cda =_ege .GetCapHeight ();if _cda !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_cda );};};if int (_bdeg )<=0{_g .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_bdeg =1000;};_ebc :=_bdeg /1000.0*_eaa ;_fbb :=0.0;{_fdg :=float64 (_cfb )*_gcag ;if _cc &&_fbb +_fdg > _ec {_eaa =0.95*(_ec -_fbb )/float64 (_cfb );_gcag =_eaa ;if _gf &&_cfb > 1{_gcag =_gfd *_eaa ;};_ebc =_bdeg /1000.0*_eaa ;_fdg =float64 (_cfb )*_gcag ;};if _ec > _fdg {if _gf {if _aee .MultilineVAlignMiddle {_bcb :=(_ec -_fdg )/2.0;_gdf :=_bcb +_fdg -_gcag ;_fbb =_gdf ;}else {_fbb =_ec -_gcag ;_fbb -=_eaa *0.5;};}else {_fbb =(_ec -_ebc )/2.0;};};};_dff .Add_Tf (*_edc ,_eaa );_dff .Add_Td (_edd ,_fbb );_ccc :=_edd ;_gef :=_edd ;for _dg ,_ecc :=range _bcd {_gbf :=0.0;for _ ,_dad :=range _ecc {_ecf ,_gbe :=_ead .GetRuneMetrics (_dad );if !_gbe {continue ;};_gbf +=_ecf .Wx ;};_bgd :=_gbf /1000.0*_eaa ;_cae :=_dba -_bgd ;var _fdae float64 ;switch _cbg {case _ebg :_fdae =_ccc ;case _aac :_fdae =_cae /2;case _fgc :_fdae =_cae ;};_edd =_fdae -_gef ;if _edd > 0.0{_dff .Add_Td (_edd ,0);};_gef =_fdae ;_dff .Add_Tj (*_be .MakeString (_ecc ));if _dg < len (_bcd )-1{_dff .Add_Td (0,-_gcag *_gfd );};};_dff .Add_ET ();_dff .Add_Q ();_dff .Add_EMC ();_ccd :=_e .NewXObjectForm ();_ccd .Resources =_bgb ;_ccd .BBox =_be .MakeArrayFromFloats ([]float64 {0,0,_acd ,_ee });_ccd .SetContentStream (_dff .Bytes (),_bbeb ());_fab :=_be .MakeDict ();_fab .Set ("\u004e",_ccd .ToPdfObject ());return _fab ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_e .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_e .PdfColorDeviceRGB ;Opacity float64 ;};func _ggb (_dcc *_b .ContentCreator ,_bdb AppearanceStyle ,_cbbc ,_ecef float64 ){_dcc .Add_q ().Add_re (0,0,_cbbc ,_ecef ).Add_re (0,_ecef /2,_cbbc ,_ecef /2).Add_re (0,0,_cbbc ,_ecef ).Add_re (_cbbc /2,0,_cbbc /2,_ecef ).Add_w (_bdb .BorderSize ).SetStrokingColor (_bdb .BorderColor ).SetNonStrokingColor (_bdb .FillColor ).Add_B ().Add_Q ();};const (_ebg quadding =0;_aac quadding =1;_fgc quadding =2;);func _eed (_fbea RectangleAnnotationDef ,_dacd string )([]byte ,*_e .PdfRectangle ,*_e .PdfRectangle ,error ){_beff :=_faf .Rectangle {X :0,Y :0,Width :_fbea .Width ,Height :_fbea .Height ,FillEnabled :_fbea .FillEnabled ,FillColor :_fbea .FillColor ,BorderEnabled :_fbea .BorderEnabled ,BorderWidth :2*_fbea .BorderWidth ,BorderColor :_fbea .BorderColor ,Opacity :_fbea .Opacity };_dcaa ,_bafg ,_deaa :=_beff .Draw (_dacd );if _deaa !=nil {return nil ,nil ,nil ,_deaa ;};_cgbc :=&_e .PdfRectangle {};_cgbc .Llx =_fbea .X +_bafg .Llx ;_cgbc .Lly =_fbea .Y +_bafg .Lly ;_cgbc .Urx =_fbea .X +_bafg .Urx ;_cgbc .Ury =_fbea .Y +_bafg .Ury ;return _dcaa ,_bafg ,_cgbc ,nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_e .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_e .PdfFieldButton ,error ){if page ==nil {return nil ,_fe .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_fe .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bbbd ,_adga :=_e .NewStandard14Font (_e .ZapfDingbatsName );if _adga !=nil {return nil ,_adga ;};_feba :=_e .NewPdfField ();_cdfb :=&_e .PdfFieldButton {};_feba .SetContext (_cdfb );_cdfb .PdfField =_feba ;_cdfb .T =_be .MakeString (name );_cdfb .SetType (_e .ButtonTypeCheckbox );_bfbd :="\u004f\u0066\u0066";if opt .Checked {_bfbd ="\u0059\u0065\u0073";};_cdfb .V =_be .MakeName (_bfbd );_bfbb :=_e .NewPdfAnnotationWidget ();_bfbb .Rect =_be .MakeArrayFromFloats (rect );_bfbb .P =page .ToPdfObject ();_bfbb .F =_be .MakeInteger (4);_bfbb .Parent =_cdfb .ToPdfObject ();_dbaef :=rect [2]-rect [0];_gfa :=rect [3]-rect [1];var _fed _aa .Buffer ;_fed .WriteString ("\u0071\u000a");_fed .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_fed .WriteString ("\u0042\u0054\u000a");_fed .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_fed .WriteString ("\u0045\u0054\u000a");_fed .WriteString ("\u0051\u000a");_cfff :=_b .NewContentCreator ();_cfff .Add_q ();_cfff .Add_rg (0,0,1);_cfff .Add_BT ();_cfff .Add_Tf (*_be .MakeName ("\u005a\u0061\u0044\u0062"),12);_cfff .Add_Td (0,0);_cfff .Add_ET ();_cfff .Add_Q ();_aad :=_e .NewXObjectForm ();_aad .SetContentStream (_cfff .Bytes (),_be .NewRawEncoder ());_aad .BBox =_be .MakeArrayFromFloats ([]float64 {0,0,_dbaef ,_gfa });_aad .Resources =_e .NewPdfPageResources ();_aad .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_bbbd .ToPdfObject ());_cfff =_b .NewContentCreator ();_cfff .Add_q ();_cfff .Add_re (0,0,_dbaef ,_gfa );_cfff .Add_W ().Add_n ();_cfff .Add_rg (0,0,1);_cfff .Translate (0,3.0);_cfff .Add_BT ();_cfff .Add_Tf (*_be .MakeName ("\u005a\u0061\u0044\u0062"),12);_cfff .Add_Td (0,0);_cfff .Add_Tj (*_be .MakeString ("\u0034"));_cfff .Add_ET ();_cfff .Add_Q ();_gffa :=_e .NewXObjectForm ();_gffa .SetContentStream (_cfff .Bytes (),_be .NewRawEncoder ());_gffa .BBox =_be .MakeArrayFromFloats ([]float64 {0,0,_dbaef ,_gfa });_gffa .Resources =_e .NewPdfPageResources ();_gffa .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_bbbd .ToPdfObject ());_gddg :=_be .MakeDict ();_gddg .Set ("\u004f\u0066\u0066",_aad .ToPdfObject ());_gddg .Set ("\u0059\u0065\u0073",_gffa .ToPdfObject ());_bcef :=_be .MakeDict ();_bcef .Set ("\u004e",_gddg );_bfbb .AP =_bcef ;_bfbb .AS =_be .MakeName (_bfbd );_cdfb .Annotations =append (_cdfb .Annotations ,_bfbb );return _cdfb ,nil ;};func _bbg (_acfa *_e .PdfField )string {if _acfa ==nil {return "";};_eaee ,_bacb :=_acfa .GetContext ().(*_e .PdfFieldText );if !_bacb {return _bbg (_acfa .Parent );};if _eaee .DA !=nil {return _eaee .DA .Str ();};return _bbg (_eaee .Parent );};func _gff (_fc *_e .PdfAnnotationWidget ,_cbce *_e .PdfFieldText ,_efgb *_e .PdfPageResources ,_fgca AppearanceStyle )(*_be .PdfObjectDictionary ,error ){_cef :=_e .NewPdfPageResources ();_ffd ,_acf :=_be .GetArray (_fc .Rect );if !_acf {return nil ,_fe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_egea ,_ede :=_e .NewPdfRectangle (*_ffd );if _ede !=nil {return nil ,_ede ;};_bcg ,_gfdc :=_egea .Width (),_egea .Height ();_abfb ,_cec :=_bcg ,_gfdc ;_bef ,_bgbg :=_be .GetDict (_fc .MK );if _bgbg {_dbgf ,_ :=_be .GetDict (_fc .BS );_beb :=_fgca .applyAppearanceCharacteristics (_bef ,_dbgf ,nil );if _beb !=nil {return nil ,_beb ;};};_cbe ,_bgbg :=_be .GetIntVal (_cbce .MaxLen );if !_bgbg {return nil ,_fe .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _cbe <=0{return nil ,_fe .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_abd :=float64 (_bcg )/float64 (_cbe );_gad ,_ede :=_b .NewContentStreamParser (_bbg (_cbce .PdfField )).Parse ();if _ede !=nil {return nil ,_ede ;};_bdd :=_b .NewContentCreator ();if _fgca .BorderSize > 0{_bacf (_bdd ,_fgca ,_bcg ,_gfdc );};if _fgca .DrawAlignmentReticle {_fafe :=_fgca ;_fafe .BorderSize =0.2;_ggb (_bdd ,_fafe ,_bcg ,_gfdc );};_bdd .Add_BMC ("\u0054\u0078");_bdd .Add_q ();_bcg ,_gfdc =_fgca .applyRotation (_bef ,_bcg ,_gfdc ,_bdd );_bdd .Add_BT ();_efgf ,_cbb ,_ede :=_fgca .processDA (_cbce .PdfField ,_gad ,_efgb ,_cef ,_bdd );if _ede !=nil {return nil ,_ede ;};_cge :=_efgf .Font ;_gbda :=_be .MakeName (_efgf .Name );_afd :=_efgf .Size ;_fca :=_afd ==0;if _fca &&_cbb {_afd =_gfdc *_fgca .AutoFontSizeFraction ;};_bbe :=_cge .Encoder ();if _bbe ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_bbe =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _ffe string ;if _bec ,_gfda :=_be .GetString (_cbce .V );_gfda {_ffe =_bec .Decoded ();};_bdd .Add_Tf (*_gbda ,_afd );var _efc float64 ;for _ ,_afca :=range _ffe {_dfa ,_gg :=_cge .GetRuneMetrics (_afca );if !_gg {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_afca );continue ;};_aag :=_dfa .Wy ;if int (_aag )<=0{_aag =_dfa .Wx ;};if _aag > _efc {_efc =_aag ;};};if int (_efc )==0{_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");_efc =1000;};_ece ,_ede :=_cge .GetFontDescriptor ();if _ede !=nil {_g .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _bddf float64 ;if _ece !=nil {_bddf ,_ede =_ece .GetCapHeight ();if _ede !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_ede );};};if int (_bddf )<=0{_g .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_bddf =1000.0;};_abb :=_bddf /1000.0*_afd ;_efgd :=0.0;_bfd :=1.0*_afd *(_efc /1000.0);{_adg :=_bfd ;if _fca &&_efgd +_adg > _gfdc {_afd =0.95*(_gfdc -_efgd );_bfd =1.0*_afd ;_adg =_bfd ;_abb =_bddf /1000.0*_afd ;};if _gfdc > _abb {_efgd =(_gfdc -_abb )/2.0;};};_bdd .Add_Td (0,_efgd );if _ba ,_aab :=_be .GetIntVal (_cbce .Q );_aab {switch _ba {case 2:if len (_ffe )< _cbe {_ebd :=float64 (_cbe -len (_ffe ))*_abd ;_bdd .Add_Td (_ebd ,0);};};};for _abc ,_abfe :=range _ffe {_caa :=2.0;_eec :=string (_abfe );if _bbe !=nil {_afa ,_bbdc :=_cge .GetRuneMetrics (_abfe );if !_bbdc {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_abfe );continue ;};_eec =string (_bbe .Encode (_eec ));_fac :=_afd *_afa .Wx /1000.0;_efe :=(_abd -_fac )/2;_caa =_efe ;};_bdd .Add_Td (_caa ,0);_bdd .Add_Tj (*_be .MakeString (_eec ));if _abc !=len (_ffe )-1{_bdd .Add_Td (_abd -_caa ,0);};};_bdd .Add_ET ();_bdd .Add_Q ();_bdd .Add_EMC ();_aabc :=_e .NewXObjectForm ();_aabc .Resources =_cef ;_aabc .BBox =_be .MakeArrayFromFloats ([]float64 {0,0,_abfb ,_cec });_aabc .SetContentStream (_bdd .Bytes (),_bbeb ());_agb :=_be .MakeDict ();_agb .Set ("\u004e",_aabc .ToPdfObject ());return _agb ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _deeb (_ebe LineAnnotationDef )(*_be .PdfObjectDictionary ,*_e .PdfRectangle ,error ){_cbcc :=_e .NewXObjectForm ();_cbcc .Resources =_e .NewPdfPageResources ();_fad :="";if _ebe .Opacity < 1.0{_afcc :=_be .MakeDict ();_afcc .Set ("\u0063\u0061",_be .MakeFloat (_ebe .Opacity ));_acca :=_cbcc .Resources .AddExtGState ("\u0067\u0073\u0031",_afcc );if _acca !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_acca ;};_fad ="\u0067\u0073\u0031";};_edec ,_effb ,_bccc ,_feac :=_ggd (_ebe ,_fad );if _feac !=nil {return nil ,nil ,_feac ;};_feac =_cbcc .SetContentStream (_edec ,nil );if _feac !=nil {return nil ,nil ,_feac ;};_cbcc .BBox =_effb .ToPdfObject ();_fbdd :=_be .MakeDict ();_fbdd .Set ("\u004e",_cbcc .ToPdfObject ());return _fbdd ,_bccc ,nil ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;func _ggd (_ebad LineAnnotationDef ,_gebe string )([]byte ,*_e .PdfRectangle ,*_e .PdfRectangle ,error ){_dda :=_faf .Line {X1 :0,Y1 :0,X2 :_ebad .X2 -_ebad .X1 ,Y2 :_ebad .Y2 -_ebad .Y1 ,LineColor :_ebad .LineColor ,Opacity :_ebad .Opacity ,LineWidth :_ebad .LineWidth ,LineEndingStyle1 :_ebad .LineEndingStyle1 ,LineEndingStyle2 :_ebad .LineEndingStyle2 };_ebff ,_cbcce ,_bece :=_dda .Draw (_gebe );if _bece !=nil {return nil ,nil ,nil ,_bece ;};_bggc :=&_e .PdfRectangle {};_bggc .Llx =_ebad .X1 +_cbcce .Llx ;_bggc .Lly =_ebad .Y1 +_cbcce .Lly ;_bggc .Urx =_ebad .X1 +_cbcce .Urx ;_bggc .Ury =_ebad .Y1 +_cbcce .Ury ;return _ebff ,_cbcce ,_bggc ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_e .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _faf .LineEndingStyle ;LineEndingStyle2 _faf .LineEndingStyle ;};func (_bacg *AppearanceStyle )applyRotation (_baa *_be .PdfObjectDictionary ,_gadf ,_eab float64 ,_bgfd *_b .ContentCreator )(float64 ,float64 ){if !_bacg .AllowMK {return _gadf ,_eab ;};if _baa ==nil {return _gadf ,_eab ;};_gee ,_ :=_be .GetNumberAsFloat (_baa .Get ("\u0052"));if _gee ==0{return _gadf ,_eab ;};_aefa :=-_gee ;_efa :=_faf .Path {Points :[]_faf .Point {_faf .NewPoint (0,0).Rotate (_aefa ),_faf .NewPoint (_gadf ,0).Rotate (_aefa ),_faf .NewPoint (0,_eab ).Rotate (_aefa ),_faf .NewPoint (_gadf ,_eab ).Rotate (_aefa )}}.GetBoundingBox ();_bgfd .RotateDeg (_gee );_bgfd .Translate (_efa .X ,_efa .Y );return _efa .Width ,_efa .Height ;};func _cbc (_eb CircleAnnotationDef ,_ea string )([]byte ,*_e .PdfRectangle ,*_e .PdfRectangle ,error ){_cg :=_faf .Circle {X :_eb .X ,Y :_eb .Y ,Width :_eb .Width ,Height :_eb .Height ,FillEnabled :_eb .FillEnabled ,FillColor :_eb .FillColor ,BorderEnabled :_eb .BorderEnabled ,BorderWidth :_eb .BorderWidth ,BorderColor :_eb .BorderColor ,Opacity :_eb .Opacity };_ge ,_feg ,_bcc :=_cg .Draw (_ea );if _bcc !=nil {return nil ,nil ,nil ,_bcc ;};_de :=&_e .PdfRectangle {};_de .Llx =_eb .X +_feg .Llx ;_de .Lly =_eb .Y +_feg .Lly ;_de .Urx =_eb .X +_feg .Urx ;_de .Ury =_eb .Y +_feg .Ury ;return _ge ,_feg ,_de ,nil ;};func (_aeaeb *AppearanceStyle )applyAppearanceCharacteristics (_cfgf *_be .PdfObjectDictionary ,_ebgb *_be .PdfObjectDictionary ,_bggg *_e .PdfFont )error {if !_aeaeb .AllowMK {return nil ;};if CA ,_ccbd :=_be .GetString (_cfgf .Get ("\u0043\u0041"));_ccbd &&_bggg !=nil {_dagbb :=CA .Bytes ();if len (_dagbb )!=0{_aef :=[]rune (_bggg .Encoder ().Decode (_dagbb ));if len (_aef )==1{_aeaeb .CheckmarkRune =_aef [0];};};};if BC ,_bggd :=_be .GetArray (_cfgf .Get ("\u0042\u0043"));_bggd {_egd ,_bad :=BC .ToFloat64Array ();if _bad !=nil {return _bad ;};switch len (_egd ){case 1:_aeaeb .BorderColor =_e .NewPdfColorDeviceGray (_egd [0]);case 3:_aeaeb .BorderColor =_e .NewPdfColorDeviceRGB (_egd [0],_egd [1],_egd [2]);case 4:_aeaeb .BorderColor =_e .NewPdfColorDeviceCMYK (_egd [0],_egd [1],_egd [2],_egd [3]);default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_egd ));};if _ebgb !=nil {if _dbeb ,_eea :=_be .GetNumberAsFloat (_ebgb .Get ("\u0057"));_eea ==nil {_aeaeb .BorderSize =_dbeb ;};};};if BG ,_gaa :=_be .GetArray (_cfgf .Get ("\u0042\u0047"));_gaa {_afdb ,_cce :=BG .ToFloat64Array ();if _cce !=nil {return _cce ;};switch len (_afdb ){case 1:_aeaeb .FillColor =_e .NewPdfColorDeviceGray (_afdb [0]);case 3:_aeaeb .FillColor =_e .NewPdfColorDeviceRGB (_afdb [0],_afdb [1],_afdb [2]);case 4:_aeaeb .FillColor =_e .NewPdfColorDeviceCMYK (_afdb [0],_afdb [1],_afdb [2],_afdb [3]);default:_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_afdb ));};};return nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_e .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_e .PdfFieldText ,error ){if page ==nil {return nil ,_fe .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_fe .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ccac :=_e .NewPdfField ();_egb :=&_e .PdfFieldText {};_ccac .SetContext (_egb );_egb .PdfField =_ccac ;_egb .T =_be .MakeString (name );if opt .MaxLen > 0{_egb .MaxLen =_be .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_egb .V =_be .MakeString (opt .Value );};_bbbg :=_e .NewPdfAnnotationWidget ();_bbbg .Rect =_be .MakeArrayFromFloats (rect );_bbbg .P =page .ToPdfObject ();_bbbg .F =_be .MakeInteger (4);_bbbg .Parent =_egb .ToPdfObject ();_egb .Annotations =append (_egb .Annotations ,_bbbg );return _egb ,nil ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_e .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_e .NewPdfColorDeviceGray (0),BorderColor :_e .NewPdfColorDeviceGray (0),FillColor :_e .NewPdfColorDeviceGray (1),Encoder :_be .NewFlateEncoder (),ImagePosition :SignatureImageLeft };};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_eg FieldAppearance )GenerateAppearanceDict (form *_e .PdfAcroForm ,field *_e .PdfField ,wa *_e .PdfAnnotationWidget )(*_be .PdfObjectDictionary ,error ){_g .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );_ ,_bgc :=field .GetContext ().(*_e .PdfFieldText );_ebb ,_dec :=_be .GetDict (wa .AP );if _dec &&_eg .OnlyIfMissing &&(!_bgc ||!_eg .RegenerateTextFields ){_g .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");return _ebb ,nil ;};if form .DR ==nil {form .DR =_e .NewPdfPageResources ();};switch _dc :=field .GetContext ().(type ){case *_e .PdfFieldText :_afc :=_dc ;switch {case _afc .Flags ().Has (_e .FieldFlagPassword ):return nil ,nil ;case _afc .Flags ().Has (_e .FieldFlagFileSelect ):return nil ,nil ;case _afc .Flags ().Has (_e .FieldFlagComb ):if _afc .MaxLen !=nil {_bde ,_gda :=_gff (wa ,_afc ,form .DR ,_eg .Style ());if _gda !=nil {return nil ,_gda ;};return _bde ,nil ;};};_ac ,_ab :=_ded (wa ,_afc ,form .DR ,_eg .Style ());if _ab !=nil {return nil ,_ab ;};return _ac ,nil ;case *_e .PdfFieldButton :_acc :=_dc ;if _acc .IsCheckbox (){_df ,_da :=_bgag (wa ,_acc ,form .DR ,_eg .Style ());if _da !=nil {return nil ,_da ;};return _df ,nil ;};_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_acc .GetType ());case *_e .PdfFieldChoice :_bdfg :=_dc ;switch {case _bdfg .Flags ().Has (_e .FieldFlagCombo ):_gae ,_ef :=_fbd (form ,wa ,_bdfg ,_eg .Style ());if _ef !=nil {return nil ,_ef ;};return _gae ,nil ;default:_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_bdfg .Flags ().String ());};default:_g .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dc );};return nil ,nil ;};func _ae (_fd CircleAnnotationDef )(*_be .PdfObjectDictionary ,*_e .PdfRectangle ,error ){_gd :=_e .NewXObjectForm ();_gd .Resources =_e .NewPdfPageResources ();_fbc :="";if _fd .Opacity < 1.0{_bgg :=_be .MakeDict ();_bgg .Set ("\u0063\u0061",_be .MakeFloat (_fd .Opacity ));_bgg .Set ("\u0043\u0041",_be .MakeFloat (_fd .Opacity ));_bea :=_gd .Resources .AddExtGState ("\u0067\u0073\u0031",_bgg );if _bea !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_bea ;};_fbc ="\u0067\u0073\u0031";};_gdg ,_feb ,_d ,_fg :=_cbc (_fd ,_fbc );if _fg !=nil {return nil ,nil ,_fg ;};_fg =_gd .SetContentStream (_gdg ,nil );if _fg !=nil {return nil ,nil ,_fg ;};_gd .BBox =_feb .ToPdfObject ();_gc :=_be .MakeDict ();_gc .Set ("\u004e",_gd .ToPdfObject ());return _gc ,_d ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// SetStyle applies appearance `style` to `fa`.
func (_aga *FieldAppearance )SetStyle (style AppearanceStyle ){_aga ._gca =&style };

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_e .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_e .PdfColorDeviceRGB ;Opacity float64 ;};func _abg (_afad []*SignatureLine ,_cggd *SignatureFieldOpts )(*_be .PdfObjectDictionary ,error ){if _cggd ==nil {_cggd =NewSignatureFieldOpts ();};var _gdc error ;var _fdaa *_be .PdfObjectName ;_facd :=_cggd .Font ;if _facd !=nil {_dab ,_ :=_facd .GetFontDescriptor ();if _dab !=nil {if _cca ,_gggg :=_dab .FontName .(*_be .PdfObjectName );_gggg {_fdaa =_cca ;};};if _fdaa ==nil {_fdaa =_be .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _facd ,_gdc =_e .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_gdc !=nil {return nil ,_gdc ;};_fdaa =_be .MakeName ("\u0048\u0065\u006c\u0076");};_edb :=_cggd .FontSize ;if _edb <=0{_edb =10;};if _cggd .LineHeight <=0{_cggd .LineHeight =1;};_abfbc :=_cggd .LineHeight *_edb ;_ccaa ,_ddef :=_facd .GetRuneMetrics (' ');if !_ddef {return nil ,_fe .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_faa :=_ccaa .Wx ;var _dbb float64 ;var _egdf []string ;for _ ,_fbg :=range _afad {if _fbg .Text ==""{continue ;};_gefa :=_fbg .Text ;if _fbg .Desc !=""{_gefa =_fbg .Desc +"\u003a\u0020"+_gefa ;};_egdf =append (_egdf ,_gefa );var _ecfb float64 ;for _ ,_aeee :=range _gefa {_caac ,_acda :=_facd .GetRuneMetrics (_aeee );if !_acda {continue ;};_ecfb +=_caac .Wx ;};if _ecfb > _dbb {_dbb =_ecfb ;};};_dbb =_dbb *_edb /1000.0;_ebfd :=float64 (len (_egdf ))*_abfbc ;_fcbe :=_cggd .Image !=nil ;_bfa :=_cggd .Rect ;if _bfa ==nil {_bfa =[]float64 {0,0,_dbb ,_ebfd };if _fcbe {_bfa [2]=_dbb *2;_bfa [3]=_ebfd *2;};_cggd .Rect =_bfa ;};_gfge :=_bfa [2]-_bfa [0];_dea :=_bfa [3]-_bfa [1];_ccbg ,_bfc :=_bfa ,_bfa ;var _afaf ,_gded float64 ;if _fcbe &&len (_egdf )> 0{if _cggd .ImagePosition <=SignatureImageRight {_agdd :=[]float64 {_bfa [0],_bfa [1],_bfa [0]+(_gfge /2),_bfa [3]};_dge :=[]float64 {_bfa [0]+(_gfge /2),_bfa [1],_bfa [2],_bfa [3]};if _cggd .ImagePosition ==SignatureImageLeft {_ccbg ,_bfc =_agdd ,_dge ;}else {_ccbg ,_bfc =_dge ,_agdd ;};}else {_ccbgb :=[]float64 {_bfa [0],_bfa [1],_bfa [2],_bfa [1]+(_dea /2)};_bdc :=[]float64 {_bfa [0],_bfa [1]+(_dea /2),_bfa [2],_bfa [3]};if _cggd .ImagePosition ==SignatureImageTop {_ccbg ,_bfc =_bdc ,_ccbgb ;}else {_ccbg ,_bfc =_ccbgb ,_bdc ;};};};_afaf =_bfc [2]-_bfc [0];_gded =_bfc [3]-_bfc [1];var _feeb float64 ;if _cggd .AutoSize {if _dbb > _afaf ||_ebfd > _gded {_gfb :=_ce .Min (_afaf /_dbb ,_gded /_ebfd );_edb *=_gfb ;};_abfbc =_cggd .LineHeight *_edb ;_feeb +=(_gded -float64 (len (_egdf ))*_abfbc )/2;};_bcgb :=_b .NewContentCreator ();_fcag :=_e .NewPdfPageResources ();_fcag .SetFontByName (*_fdaa ,_facd .ToPdfObject ());if _cggd .BorderSize <=0{_cggd .BorderSize =0;_cggd .BorderColor =_e .NewPdfColorDeviceGray (1);};if _cggd .BorderColor ==nil {_cggd .BorderColor =_e .NewPdfColorDeviceGray (1);};if _cggd .FillColor ==nil {_cggd .FillColor =_e .NewPdfColorDeviceGray (1);};_bcgb .Add_q ().SetNonStrokingColor (_cggd .FillColor ).SetStrokingColor (_cggd .BorderColor ).Add_w (_cggd .BorderSize ).Add_re (_bfa [0],_bfa [1],_gfge ,_dea ).Add_B ().Add_Q ();if _cggd .WatermarkImage !=nil {_dcae :=[]float64 {_bfa [0],_bfa [1],_bfa [2],_bfa [3]};_abfa ,_cde ,_cea :=_ceeg (_cggd .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_cggd ,_dcae ,_bcgb );if _cea !=nil {return nil ,_cea ;};_fcag .SetXObjectImageByName (*_abfa ,_cde );};_bcgb .Add_q ();_bcgb .Translate (_bfc [0],_bfc [3]-_abfbc -_feeb );_bcgb .Add_BT ();_eee :=_facd .Encoder ();for _ ,_afac :=range _egdf {var _efb []byte ;for _ ,_bbdf :=range _afac {if _fa .IsSpace (_bbdf ){if len (_efb )> 0{_bcgb .SetNonStrokingColor (_cggd .TextColor ).Add_Tf (*_fdaa ,_edb ).Add_TL (_abfbc ).Add_TJ ([]_be .PdfObject {_be .MakeStringFromBytes (_efb )}...);_efb =nil ;};_bcgb .Add_Tf (*_fdaa ,_edb ).Add_TL (_abfbc ).Add_TJ ([]_be .PdfObject {_be .MakeFloat (-_faa )}...);}else {_efb =append (_efb ,_eee .Encode (string (_bbdf ))...);};};if len (_efb )> 0{_bcgb .SetNonStrokingColor (_cggd .TextColor ).Add_Tf (*_fdaa ,_edb ).Add_TL (_abfbc ).Add_TJ ([]_be .PdfObject {_be .MakeStringFromBytes (_efb )}...);};_bcgb .Add_Td (0,-_abfbc );};_bcgb .Add_ET ();_bcgb .Add_Q ();if _fcbe {_aaa ,_gdd ,_edff :=_ceeg (_cggd .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_cggd ,_ccbg ,_bcgb );if _edff !=nil {return nil ,_edff ;};_fcag .SetXObjectImageByName (*_aaa ,_gdd );};_caf :=_e .NewXObjectForm ();_caf .Resources =_fcag ;_caf .BBox =_be .MakeArrayFromFloats (_bfa );_caf .SetContentStream (_bcgb .Bytes (),_bbeb ());_ddea :=_be .MakeDict ();_ddea .Set ("\u004e",_caf .ToPdfObject ());return _ddea ,nil ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_e .PdfAnnotation ,error ){_abee :=_e .NewPdfAnnotationLine ();_abee .L =_be .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_bedd :=_be .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle1 ==_faf .LineEndingStyleArrow {_bedd =_be .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_ddgf :=_be .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_faf .LineEndingStyleArrow {_ddgf =_be .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_abee .LE =_be .MakeArray (_bedd ,_ddgf );if lineDef .Opacity < 1.0{_abee .CA =_be .MakeFloat (lineDef .Opacity );};_ecfd ,_gfae ,_aefg :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_abee .IC =_be .MakeArrayFromFloats ([]float64 {_ecfd ,_gfae ,_aefg });_abee .C =_be .MakeArrayFromFloats ([]float64 {_ecfd ,_gfae ,_aefg });_dgbd :=_e .NewBorderStyle ();_dgbd .SetBorderWidth (lineDef .LineWidth );_abee .BS =_dgbd .ToPdfObject ();_ccbb ,_gbdd ,_adf :=_deeb (lineDef );if _adf !=nil {return nil ,_adf ;};_abee .AP =_ccbb ;_abee .Rect =_be .MakeArrayFromFloats ([]float64 {_gbdd .Llx ,_gbdd .Lly ,_gbdd .Urx ,_gbdd .Ury });return _abee .PdfAnnotation ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_e .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};func _cgg (_aeae *_e .PdfField ,_cgde ,_fee float64 ,_edf string ,_edcb AppearanceStyle ,_dagb *_b .ContentStreamOperations ,_dfac *_e .PdfPageResources ,_gfg *_be .PdfObjectDictionary )(*_e .XObjectForm ,error ){_ffb :=_e .NewPdfPageResources ();_abeb ,_dbe :=_cgde ,_fee ;_bgf :=_b .NewContentCreator ();if _edcb .BorderSize > 0{_bacf (_bgf ,_edcb ,_cgde ,_fee );};if _edcb .DrawAlignmentReticle {_dacb :=_edcb ;_dacb .BorderSize =0.2;_ggb (_bgf ,_dacb ,_cgde ,_fee );};_bgf .Add_BMC ("\u0054\u0078");_bgf .Add_q ();_bgf .Add_BT ();_cgde ,_fee =_edcb .applyRotation (_gfg ,_cgde ,_fee ,_bgf );_gab ,_cgcc ,_gbc :=_edcb .processDA (_aeae ,_dagb ,_dfac ,_ffb ,_bgf );if _gbc !=nil {return nil ,_gbc ;};_cdf :=_gab .Font ;_aeg :=_gab .Size ;_bce :=_be .MakeName (_gab .Name );_dfab :=_aeg ==0;if _dfab &&_cgcc {_aeg =_fee *_edcb .AutoFontSizeFraction ;};_dgb :=_cdf .Encoder ();if _dgb ==nil {_g .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_dgb =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_edf )==0{return nil ,nil ;};_gfdb :=2.0;_ebcd :=0.0;if _dgb !=nil {for _ ,_dee :=range _edf {_aed ,_fafea :=_cdf .GetRuneMetrics (_dee );if !_fafea {_g .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_dee );continue ;};_ebcd +=_aed .Wx ;};_edf =string (_dgb .Encode (_edf ));};if _aeg ==0||_dfab &&_ebcd > 0&&_gfdb +_ebcd *_aeg /1000.0> _cgde {_aeg =0.95*1000.0*(_cgde -_gfdb )/_ebcd ;};_gdee :=1.0*_aeg ;_bfb :=2.0;{_bcdc :=_gdee ;if _dfab &&_bfb +_bcdc > _fee {_aeg =0.95*(_fee -_bfb );_gdee =1.0*_aeg ;_bcdc =_gdee ;};if _fee > _bcdc {_bfb =(_fee -_bcdc )/2.0;_bfb +=1.50;};};_bgf .Add_Tf (*_bce ,_aeg );_bgf .Add_Td (_gfdb ,_bfb );_bgf .Add_Tj (*_be .MakeString (_edf ));_bgf .Add_ET ();_bgf .Add_Q ();_bgf .Add_EMC ();_ggg :=_e .NewXObjectForm ();_ggg .Resources =_ffb ;_ggg .BBox =_be .MakeArrayFromFloats ([]float64 {0,0,_abeb ,_dbe });_ggg .SetContentStream (_bgf .Bytes (),_bbeb ());return _ggg ,nil ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_e .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_e .PdfFieldSignature ,error ){if signature ==nil {return nil ,_fe .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_agg ,_gadb :=_abg (lines ,opts );if _gadb !=nil {return nil ,_gadb ;};_agde :=_e .NewPdfFieldSignature (signature );_agde .Rect =_be .MakeArrayFromFloats (opts .Rect );_agde .AP =_agg ;return _agde ,nil ;};func _fbd (_acdf *_e .PdfAcroForm ,_bfee *_e .PdfAnnotationWidget ,_fggg *_e .PdfFieldChoice ,_ffg AppearanceStyle )(*_be .PdfObjectDictionary ,error ){_cff ,_bac :=_be .GetArray (_bfee .Rect );if !_bac {return nil ,_fe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_eaag ,_egfb :=_e .NewPdfRectangle (*_cff );if _egfb !=nil {return nil ,_egfb ;};_bbef ,_abe :=_eaag .Width (),_eaag .Height ();_g .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_bfee .BS );_ddb ,_egfb :=_b .NewContentStreamParser (_bbg (_fggg .PdfField )).Parse ();if _egfb !=nil {return nil ,_egfb ;};_efd ,_gfdaf :=_be .GetDict (_bfee .MK );if _gfdaf {_fea ,_ :=_be .GetDict (_bfee .BS );_cdg :=_ffg .applyAppearanceCharacteristics (_efd ,_fea ,nil );if _cdg !=nil {return nil ,_cdg ;};};_bdg :=_be .MakeDict ();for _ ,_dbae :=range _fggg .Opt .Elements (){if _eae ,_daa :=_be .GetArray (_dbae );_daa &&_eae .Len ()==2{_dbae =_eae .Get (1);};var _caee string ;if _dac ,_ddc :=_be .GetString (_dbae );_ddc {_caee =_dac .Decoded ();}else if _gbeg ,_cdbe :=_be .GetName (_dbae );_cdbe {_caee =_gbeg .String ();}else {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_dbae );return nil ,_fe .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_caee )> 0{_bbc ,_cbd :=_cgg (_fggg .PdfField ,_bbef ,_abe ,_caee ,_ffg ,_ddb ,_acdf .DR ,_efd );if _cbd !=nil {return nil ,_cbd ;};_bdg .Set (*_be .MakeName (_caee ),_bbc .ToPdfObject ());};};_afb :=_be .MakeDict ();_afb .Set ("\u004e",_bdg );return _afb ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_e .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_e .PdfFieldChoice ,error ){if page ==nil {return nil ,_fe .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_fe .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fcc :=_e .NewPdfField ();_deff :=&_e .PdfFieldChoice {};_fcc .SetContext (_deff );_deff .PdfField =_fcc ;_deff .T =_be .MakeString (name );_deff .Opt =_be .MakeArray ();for _ ,_eff :=range opt .Choices {_deff .Opt .Append (_be .MakeString (_eff ));};_deff .SetFlag (_e .FieldFlagCombo );_dfe :=_e .NewPdfAnnotationWidget ();_dfe .Rect =_be .MakeArrayFromFloats (rect );_dfe .P =page .ToPdfObject ();_dfe .F =_be .MakeInteger (4);_dfe .Parent =_deff .ToPdfObject ();_deff .Annotations =append (_deff .Annotations ,_dfe );return _deff ,nil ;};func _bacf (_fegf *_b .ContentCreator ,_aec AppearanceStyle ,_cacg ,_ddg float64 ){_fegf .Add_q ().Add_re (0,0,_cacg ,_ddg ).Add_w (_aec .BorderSize ).SetStrokingColor (_aec .BorderColor ).SetNonStrokingColor (_aec .FillColor ).Add_B ().Add_Q ();};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_e .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _e .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _e .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _e .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _cb .Image ;

// Image represents the image used for the signature appearance.
Image _cb .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _be .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};func _bgag (_fgd *_e .PdfAnnotationWidget ,_gac *_e .PdfFieldButton ,_bae *_e .PdfPageResources ,_fcb AppearanceStyle )(*_be .PdfObjectDictionary ,error ){_gaeg ,_dbge :=_be .GetArray (_fgd .Rect );if !_dbge {return nil ,_fe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_add ,_eba :=_e .NewPdfRectangle (*_gaeg );if _eba !=nil {return nil ,_eba ;};_fdd ,_fba :=_add .Width (),_add .Height ();_edce ,_fdc :=_fdd ,_fba ;_g .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_fgd .BS );_cdag ,_eba :=_e .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _eba !=nil {return nil ,_eba ;};_efee ,_ggc :=_be .GetDict (_fgd .MK );if _ggc {_dbc ,_ :=_be .GetDict (_fgd .BS );_ebdc :=_fcb .applyAppearanceCharacteristics (_efee ,_dbc ,_cdag );if _ebdc !=nil {return nil ,_ebdc ;};};_efea :=_e .NewXObjectForm ();{_cdc :=_b .NewContentCreator ();if _fcb .BorderSize > 0{_bacf (_cdc ,_fcb ,_fdd ,_fba );};if _fcb .DrawAlignmentReticle {_gace :=_fcb ;_gace .BorderSize =0.2;_ggb (_cdc ,_gace ,_fdd ,_fba );};_fdd ,_fba =_fcb .applyRotation (_efee ,_fdd ,_fba ,_cdc );_cgd :=_fcb .AutoFontSizeFraction *_fba ;_bccd ,_ebf :=_cdag .GetRuneMetrics (_fcb .CheckmarkRune );if !_ebf {return nil ,_fe .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_efgg :=_cdag .Encoder ();_dde :=_efgg .Encode (string (_fcb .CheckmarkRune ));_fge :=_bccd .Wx *_cgd /1000.0;_bggf :=705.0;_cac :=_bggf /1000.0*_cgd ;_cba :=2.0;_dfdg :=1.0;if _fge < _fdd {_cba =(_fdd -_fge )/2.0;};if _cac < _fba {_dfdg =(_fba -_cac )/2.0;};_cdc .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_cgd ).Add_Td (_cba ,_dfdg ).Add_Tj (*_be .MakeStringFromBytes (_dde )).Add_ET ().Add_Q ();_efea .Resources =_e .NewPdfPageResources ();_efea .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cdag .ToPdfObject ());_efea .BBox =_be .MakeArrayFromFloats ([]float64 {0,0,_edce ,_fdc });_efea .SetContentStream (_cdc .Bytes (),_bbeb ());};_gce :=_e .NewXObjectForm ();{_dag :=_b .NewContentCreator ();if _fcb .BorderSize > 0{_bacf (_dag ,_fcb ,_fdd ,_fba );};_gce .BBox =_be .MakeArrayFromFloats ([]float64 {0,0,_edce ,_fdc });_gce .SetContentStream (_dag .Bytes (),_bbeb ());};_bbb :=_be .MakeDict ();_bbb .Set ("\u004f\u0066\u0066",_gce .ToPdfObject ());_bbb .Set ("\u0059\u0065\u0073",_efea .ToPdfObject ());_cbcec :=_be .MakeDict ();_cbcec .Set ("\u004e",_bbb );return _cbcec ,nil ;};func _bbeb ()_be .StreamEncoder {return _be .NewFlateEncoder ()};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_bfe FieldAppearance )Style ()AppearanceStyle {if _bfe ._gca !=nil {return *_bfe ._gca ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_e .NewPdfColorDeviceGray (0),FillColor :_e .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };};func _ffda (_bfea RectangleAnnotationDef )(*_be .PdfObjectDictionary ,*_e .PdfRectangle ,error ){_geg :=_e .NewXObjectForm ();_geg .Resources =_e .NewPdfPageResources ();_bgef :="";if _bfea .Opacity < 1.0{_aaac :=_be .MakeDict ();_aaac .Set ("\u0063\u0061",_be .MakeFloat (_bfea .Opacity ));_aaac .Set ("\u0043\u0041",_be .MakeFloat (_bfea .Opacity ));_bdga :=_geg .Resources .AddExtGState ("\u0067\u0073\u0031",_aaac );if _bdga !=nil {_g .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_bdga ;};_bgef ="\u0067\u0073\u0031";};_ggbb ,_ddf ,_adda ,_gaee :=_eed (_bfea ,_bgef );if _gaee !=nil {return nil ,nil ,_gaee ;};_gaee =_geg .SetContentStream (_ggbb ,nil );if _gaee !=nil {return nil ,nil ,_gaee ;};_geg .BBox =_ddf .ToPdfObject ();_gbffc :=_be .MakeDict ();_gbffc .Set ("\u004e",_geg .ToPdfObject ());return _gbffc ,_adda ,nil ;};type quadding int ;

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_e .PdfAnnotation ,error ){_bc :=_e .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_cf ,_cee ,_bd :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_bc .C =_be .MakeArrayFromFloats ([]float64 {_cf ,_cee ,_bd });_bf :=_e .NewBorderStyle ();_bf .SetBorderWidth (circDef .BorderWidth );_bc .BS =_bf .ToPdfObject ();};if circDef .FillEnabled {_bdf ,_af ,_ga :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_bc .IC =_be .MakeArrayFromFloats ([]float64 {_bdf ,_af ,_ga });}else {_bc .IC =_be .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_bc .CA =_be .MakeFloat (circDef .Opacity );};_fb ,_ag ,_bg :=_ae (circDef );if _bg !=nil {return nil ,_bg ;};_bc .AP =_fb ;_bc .Rect =_be .MakeArrayFromFloats ([]float64 {_ag .Llx ,_ag .Lly ,_ag .Urx ,_ag .Ury });return _bc .PdfAnnotation ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_bcbb FieldAppearance )WrapContentStream (page *_e .PdfPage )error {_gceb ,_bbcd :=page .GetAllContentStreams ();if _bbcd !=nil {return _bbcd ;};_ffeg :=_b .NewContentStreamParser (_gceb );_ffdg ,_bbcd :=_ffeg .Parse ();if _bbcd !=nil {return _bbcd ;};_ffdg .WrapIfNeeded ();_gbff :=[]string {_ffdg .String ()};return page .SetContentStreams (_gbff ,_bbeb ());};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_gca *AppearanceStyle ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _e .PdfColor ;FillColor _e .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_e .PdfAnnotation ,error ){_cgee :=_e .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_acdc ,_adfe ,_gbfe :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();_cgee .C =_be .MakeArrayFromFloats ([]float64 {_acdc ,_adfe ,_gbfe });_egbb :=_e .NewBorderStyle ();_egbb .SetBorderWidth (rectDef .BorderWidth );_cgee .BS =_egbb .ToPdfObject ();};if rectDef .FillEnabled {_efcc ,_gcb ,_adc :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();_cgee .IC =_be .MakeArrayFromFloats ([]float64 {_efcc ,_gcb ,_adc });}else {_cgee .IC =_be .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_cgee .CA =_be .MakeFloat (rectDef .Opacity );};_eaed ,_dbec ,_caaf :=_ffda (rectDef );if _caaf !=nil {return nil ,_caaf ;};_cgee .AP =_eaed ;_cgee .Rect =_be .MakeArrayFromFloats ([]float64 {_dbec .Llx ,_dbec .Lly ,_dbec .Urx ,_dbec .Ury });return _cgee .PdfAnnotation ,nil ;};