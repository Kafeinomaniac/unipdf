//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_fg "errors";_d "fmt";_fb "github.com/golang/freetype/raster";_db "github.com/unidoc/unipdf/v3/common";_dg "github.com/unidoc/unipdf/v3/internal/transform";_eg "github.com/unidoc/unipdf/v3/render/internal/context";_af "golang.org/x/image/draw";_c "golang.org/x/image/font";_afg "golang.org/x/image/math/f64";_ea "golang.org/x/image/math/fixed";_de "image";_e "image/color";_adg "image/draw";_g "math";_ad "sort";_f "strings";);func (_fgcg *solidPattern )ColorAt (x ,y int )_e .Color {return _fgcg ._gad };func (_bcb *Context )Transform (x ,y float64 )(_fgf ,_gdb float64 ){return _bcb ._fefg .Transform (x ,y )};func (_bcf *Context )TextState ()*_eg .TextState {return _bcf ._gc };func _ebae (_fbae _dg .Point )_ea .Point26_6 {return _ea .Point26_6 {X :_eddac (_fbae .X ),Y :_eddac (_fbae .Y )};};func (_cdab *Context )SetPixel (x ,y int ){_cdab ._ba .Set (x ,y ,_cdab ._bde )};func (_agda *patternPainter )Paint (ss []_fb .Span ,done bool ){_dab :=_agda ._bafc .Bounds ();for _ ,_fbad :=range ss {if _fbad .Y < _dab .Min .Y {continue ;};if _fbad .Y >=_dab .Max .Y {return ;};if _fbad .X0 < _dab .Min .X {_fbad .X0 =_dab .Min .X ;};if _fbad .X1 > _dab .Max .X {_fbad .X1 =_dab .Max .X ;};if _fbad .X0 >=_fbad .X1 {continue ;};const _adfc =1<<16-1;_cgac :=_fbad .Y -_agda ._bafc .Rect .Min .Y ;_gfabb :=_fbad .X0 -_agda ._bafc .Rect .Min .X ;_babd :=(_fbad .Y -_agda ._bafc .Rect .Min .Y )*_agda ._bafc .Stride +(_fbad .X0 -_agda ._bafc .Rect .Min .X )*4;_agfg :=_babd +(_fbad .X1 -_fbad .X0 )*4;for _eeeb ,_febc :=_babd ,_gfabb ;_eeeb < _agfg ;_eeeb ,_febc =_eeeb +4,_febc +1{_fga :=_fbad .Alpha ;if _agda ._ffee !=nil {_fga =_fga *uint32 (_agda ._ffee .AlphaAt (_febc ,_cgac ).A )/255;if _fga ==0{continue ;};};_ceff :=_agda ._eae .ColorAt (_febc ,_cgac );_fafa ,_dccb ,_daa ,_bebf :=_ceff .RGBA ();_abd :=uint32 (_agda ._bafc .Pix [_eeeb +0]);_ggag :=uint32 (_agda ._bafc .Pix [_eeeb +1]);_eage :=uint32 (_agda ._bafc .Pix [_eeeb +2]);_fbbc :=uint32 (_agda ._bafc .Pix [_eeeb +3]);_efead :=(_adfc -(_bebf *_fga /_adfc ))*0x101;_agda ._bafc .Pix [_eeeb +0]=uint8 ((_abd *_efead +_fafa *_fga )/_adfc >>8);_agda ._bafc .Pix [_eeeb +1]=uint8 ((_ggag *_efead +_dccb *_fga )/_adfc >>8);_agda ._bafc .Pix [_eeeb +2]=uint8 ((_eage *_efead +_daa *_fga )/_adfc >>8);_agda ._bafc .Pix [_eeeb +3]=uint8 ((_fbbc *_efead +_bebf *_fga )/_adfc >>8);};};};func (_decgc *Context )SetMatrix (m _dg .Matrix ){_decgc ._fefg =m };func (_ebb *Context )SetFillStyle (pattern _eg .Pattern ){if _baf ,_ddc :=pattern .(*solidPattern );_ddc {_ebb ._bde =_baf ._gad ;};_ebb ._ed =pattern ;};func (_ebd *Context )SetRGB (r ,g ,b float64 ){_ebd .SetRGBA (r ,g ,b ,1)};func _ffga (_ega _de .Image )*_de .RGBA {_gecda :=_ega .Bounds ();_acb :=_de .NewRGBA (_gecda );_adg .Draw (_acb ,_gecda ,_ega ,_gecda .Min ,_adg .Src );return _acb ;};func (_dbfg *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_acg ,_ffae :=_dbfg .MeasureString (s );x -=ax *_acg ;y +=ay *_ffae ;if _dbfg ._adf ==nil {_dbfg .drawString (_dbfg ._ba ,s ,x ,y );}else {_afeb :=_de .NewRGBA (_de .Rect (0,0,_dbfg ._fbg ,_dbfg ._faf ));_dbfg .drawString (_afeb ,s ,x ,y );_af .DrawMask (_dbfg ._ba ,_dbfg ._ba .Bounds (),_afeb ,_de .ZP ,_dbfg ._adf ,_de .ZP ,_af .Over );};};func (_fge *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_fge ._bc {_fge .MoveTo (x1 ,y1 );};x1 ,y1 =_fge .Transform (x1 ,y1 );x2 ,y2 =_fge .Transform (x2 ,y2 );_cddd :=_dg .NewPoint (x1 ,y1 );_aef :=_dg .NewPoint (x2 ,y2 );_aga :=_ebae (_cddd );_ecf :=_ebae (_aef );_fge ._dbc .Add2 (_aga ,_ecf );_fge ._facf .Add2 (_aga ,_ecf );_fge ._fdg =_aef ;};type radialGradient struct{_acfc ,_fdc ,_aacg circle ;_eaa ,_dcc float64 ;_ebde float64 ;_cdb stops ;};func _bdfc (_egca ,_edbd _e .Color ,_dad float64 )_e .Color {_fcbc ,_egda ,_eea ,_cbcg :=_egca .RGBA ();_fde ,_ccfe ,_efb ,_ddbb :=_edbd .RGBA ();return _e .RGBA {_eccf (_fcbc ,_fde ,_dad ),_eccf (_egda ,_ccfe ,_dad ),_eccf (_eea ,_efb ,_dad ),_eccf (_cbcg ,_ddbb ,_dad )};};func (_ecb *Context )Fill (){_ecb .FillPreserve ();_ecb .ClearPath ()};func (_faa *Context )LineTo (x ,y float64 ){if !_faa ._bc {_faa .MoveTo (x ,y );}else {x ,y =_faa .Transform (x ,y );_cgbg :=_dg .NewPoint (x ,y );_ccf :=_ebae (_cgbg );_faa ._dbc .Add1 (_ccf );_faa ._facf .Add1 (_ccf );_faa ._fdg =_cgbg ;};};func (_ageb *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_ageb .MoveTo (x1 ,y1 );_ageb .LineTo (x2 ,y2 )};func (_ecc *Context )setFillAndStrokeColor (_bec _e .Color ){_ecc ._bde =_bec ;_ecc ._ed =_add (_bec );_ecc ._eca =_add (_bec );};func _cabd (_ded ,_bcaa ,_gbc ,_fdgf ,_ccfg ,_efea float64 )float64 {return _ded *_fdgf +_bcaa *_ccfg +_gbc *_efea ;};func NewContextForRGBA (im *_de .RGBA )*Context {_fafc :=im .Bounds ().Size ().X ;_eb :=im .Bounds ().Size ().Y ;return &Context {_fbg :_fafc ,_faf :_eb ,_cdc :_fb .NewRasterizer (_fafc ,_eb ),_ba :im ,_bde :_e .Transparent ,_ed :_bb ,_eca :_fd ,_ce :1,_dfd :_eg .FillRuleWinding ,_fefg :_dg .IdentityMatrix (),_gc :_eg .NewTextState ()};};func (_acf *Context )MeasureString (s string )(_dfc ,_gbgf float64 ){_dff :=&_c .Drawer {Face :_acf ._gc .Tf .Face };_bdff :=_dff .MeasureString (s );return float64 (_bdff >>6),_acf ._gc .Tf .Size ;};func (_dac *Context )NewSubPath (){if _dac ._bc {_dac ._facf .Add1 (_ebae (_dac ._da ));};_dac ._bc =false ;};func _gegg (_aebf _fb .Path )[][]_dg .Point {var _facfd [][]_dg .Point ;var _fdb []_dg .Point ;var _abc ,_ddf float64 ;for _aggc :=0;_aggc < len (_aebf );{switch _aebf [_aggc ]{case 0:if len (_fdb )> 0{_facfd =append (_facfd ,_fdb );_fdb =nil ;};_bfc :=_egaf (_aebf [_aggc +1]);_fcde :=_egaf (_aebf [_aggc +2]);_fdb =append (_fdb ,_dg .NewPoint (_bfc ,_fcde ));_abc ,_ddf =_bfc ,_fcde ;_aggc +=4;case 1:_ffgc :=_egaf (_aebf [_aggc +1]);_dae :=_egaf (_aebf [_aggc +2]);_fdb =append (_fdb ,_dg .NewPoint (_ffgc ,_dae ));_abc ,_ddf =_ffgc ,_dae ;_aggc +=4;case 2:_edda :=_egaf (_aebf [_aggc +1]);_ffadd :=_egaf (_aebf [_aggc +2]);_faaf :=_egaf (_aebf [_aggc +3]);_baef :=_egaf (_aebf [_aggc +4]);_dgba :=_ca (_abc ,_ddf ,_edda ,_ffadd ,_faaf ,_baef );_fdb =append (_fdb ,_dgba ...);_abc ,_ddf =_faaf ,_baef ;_aggc +=6;case 3:_bed :=_egaf (_aebf [_aggc +1]);_baeb :=_egaf (_aebf [_aggc +2]);_gdcb :=_egaf (_aebf [_aggc +3]);_ffeb :=_egaf (_aebf [_aggc +4]);_ggcd :=_egaf (_aebf [_aggc +5]);_eddd :=_egaf (_aebf [_aggc +6]);_agea :=_eee (_abc ,_ddf ,_bed ,_baeb ,_gdcb ,_ffeb ,_ggcd ,_eddd );_fdb =append (_fdb ,_agea ...);_abc ,_ddf =_ggcd ,_eddd ;_aggc +=8;default:_db .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_aebf );return _facfd ;};};if len (_fdb )> 0{_facfd =append (_facfd ,_fdb );};return _facfd ;};func (_afc *Context )joiner ()_fb .Joiner {switch _afc ._cb {case _eg .LineJoinBevel :return _fb .BevelJoiner ;case _eg .LineJoinRound :return _fb .RoundJoiner ;};return nil ;};func (_bfge *radialGradient )AddColorStop (offset float64 ,color _e .Color ){_bfge ._cdb =append (_bfge ._cdb ,stop {_eba :offset ,_cdfc :color });_ad .Sort (_bfge ._cdb );};func (_fgc *Context )capper ()_fb .Capper {switch _fgc ._dbdb {case _eg .LineCapButt :return _fb .ButtCapper ;case _eg .LineCapRound :return _fb .RoundCapper ;case _eg .LineCapSquare :return _fb .SquareCapper ;};return nil ;};func (_edb *Context )SetDashOffset (offset float64 ){_edb ._bf =offset };func (_gcb *Context )ClipPreserve (){_ffc :=_de .NewAlpha (_de .Rect (0,0,_gcb ._fbg ,_gcb ._faf ));_gcc :=_fb .NewAlphaOverPainter (_ffc );_gcb .fill (_gcc );if _gcb ._adf ==nil {_gcb ._adf =_ffc ;}else {_fbb :=_de .NewAlpha (_de .Rect (0,0,_gcb ._fbg ,_gcb ._faf ));_af .DrawMask (_fbb ,_fbb .Bounds (),_ffc ,_de .ZP ,_gcb ._adf ,_de .ZP ,_af .Over );_gcb ._adf =_fbb ;};};func (_bce *Context )drawString (_facd *_de .RGBA ,_eeg string ,_gae ,_defg float64 ){_cfe :=&_c .Drawer {Dst :_facd ,Src :_de .NewUniform (_bce ._bde ),Face :_bce ._gc .Tf .Face ,Dot :_ebae (_dg .NewPoint (_gae ,_defg ))};_eegc :=rune (-1);for _ ,_bgde :=range _eeg {if _eegc >=0{_cfe .Dot .X +=_cfe .Face .Kern (_eegc ,_bgde );};_eegd ,_cef ,_fgb ,_bca ,_fbd :=_cfe .Face .Glyph (_cfe .Dot ,_bgde );if !_fbd {continue ;};_aggb :=_eegd .Sub (_eegd .Min );_efad :=_af .BiLinear ;_dee :=_bce ._fefg .Clone ();_dee .Translate (float64 (_eegd .Min .X ),float64 (_eegd .Min .Y ));_babc :=_afg .Aff3 {_dee [0],_dee [3],_dee [6],_dee [1],_dee [4],_dee [7]};_efad .Transform (_cfe .Dst ,_babc ,_cfe .Src ,_aggb ,_af .Over ,&_af .Options {SrcMask :_cef ,SrcMaskP :_fgb });_cfe .Dot .X +=_bca ;_eegc =_bgde ;};};func _add (_eeb _e .Color )_eg .Pattern {return &solidPattern {_gad :_eeb }};func NewContextForImage (im _de .Image )*Context {return NewContextForRGBA (_ffga (im ))};func (_gdc *Context )SetRGBA (r ,g ,b ,a float64 ){_gdc ._bde =_e .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gdc .setFillAndStrokeColor (_gdc ._bde );};func (_def *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_def .NewSubPath ();_def .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_g .Pi );_def .ClosePath ();};type Context struct{_fbg int ;_faf int ;_cdc *_fb .Rasterizer ;_ba *_de .RGBA ;_adf *_de .Alpha ;_bde _e .Color ;_ed _eg .Pattern ;_eca _eg .Pattern ;_dbc _fb .Path ;_facf _fb .Path ;_da _dg .Point ;_fdg _dg .Point ;_bc bool ;_fefc []float64 ;_bf float64 ;_ce float64 ;_dbdb _eg .LineCap ;_cb _eg .LineJoin ;_dfd _eg .FillRule ;_fefg _dg .Matrix ;_gc *_eg .TextState ;_cbc []*Context ;};func (_cge *Context )DrawPoint (x ,y ,r float64 ){_cge .Push ();_bdc ,_ege :=_cge .Transform (x ,y );_cge .Identity ();_cge .DrawCircle (_bdc ,_ege ,r );_cge .Pop ();};func (_gfaa *Context )StrokePreserve (){var _gfd _fb .Painter ;if _gfaa ._adf ==nil {if _fag ,_aac :=_gfaa ._eca .(*solidPattern );_aac {_caa :=_fb .NewRGBAPainter (_gfaa ._ba );_caa .SetColor (_fag ._gad );_gfd =_caa ;};};if _gfd ==nil {_gfd =_cacb (_gfaa ._ba ,_gfaa ._adf ,_gfaa ._eca );};_gfaa .stroke (_gfd );};func _beef (_gd ,_ge ,_gec ,_aec ,_dec ,_gb ,_ee ,_ggc ,_ac float64 )(_bgb ,_ec float64 ){_adc :=1-_ac ;_dcb :=_adc *_adc *_adc ;_ff :=3*_adc *_adc *_ac ;_bd :=3*_adc *_ac *_ac ;_adgf :=_ac *_ac *_ac ;_bgb =_dcb *_gd +_ff *_gec +_bd *_dec +_adgf *_ee ;_ec =_dcb *_ge +_ff *_aec +_bd *_gb +_adgf *_ggc ;return ;};type patternPainter struct{_bafc *_de .RGBA ;_ffee *_de .Alpha ;_eae _eg .Pattern ;};func (_ab *Context )Width ()int {return _ab ._fbg };func (_gde *Context )SetStrokeStyle (pattern _eg .Pattern ){_gde ._eca =pattern };func (_baba *Context )Clear (){_eeed :=_de .NewUniform (_baba ._bde );_af .Draw (_baba ._ba ,_baba ._ba .Bounds (),_eeed ,_de .ZP ,_af .Src );};func (_ccc *Context )Height ()int {return _ccc ._faf };func (_ccce *Context )ResetClip (){_ccce ._adf =nil };func (_cc *Context )Image ()_de .Image {return _cc ._ba };func _egaf (_afdc _ea .Int26_6 )float64 {const _bbgg ,_gbf =6,1<<6-1;if _afdc >=0{return float64 (_afdc >>_bbgg )+float64 (_afdc &_gbf )/64;};_afdc =-_afdc ;if _afdc >=0{return -(float64 (_afdc >>_bbgg )+float64 (_afdc &_gbf )/64);};return 0;};func (_beec *Context )DrawRectangle (x ,y ,w ,h float64 ){_beec .NewSubPath ();_beec .MoveTo (x ,y );_beec .LineTo (x +w ,y );_beec .LineTo (x +w ,y +h );_beec .LineTo (x ,y +h );_beec .ClosePath ();};func (_eff *Context )DrawString (s string ,x ,y float64 ){_eff .DrawStringAnchored (s ,x ,y ,0,0)};func (_efe *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _bcd =16;for _gda :=0;_gda < _bcd ;_gda ++{_bdef :=float64 (_gda +0)/_bcd ;_febg :=float64 (_gda +1)/_bcd ;_gaa :=angle1 +(angle2 -angle1 )*_bdef ;_ace :=angle1 +(angle2 -angle1 )*_febg ;_cgc :=x +rx *_g .Cos (_gaa );_bbd :=y +ry *_g .Sin (_gaa );_bfd :=x +rx *_g .Cos ((_gaa +_ace )/2);_ggf :=y +ry *_g .Sin ((_gaa +_ace )/2);_gga :=x +rx *_g .Cos (_ace );_cged :=y +ry *_g .Sin (_ace );_eag :=2*_bfd -_cgc /2-_gga /2;_gef :=2*_ggf -_bbd /2-_cged /2;if _gda ==0{if _efe ._bc {_efe .LineTo (_cgc ,_bbd );}else {_efe .MoveTo (_cgc ,_bbd );};};_efe .QuadraticTo (_eag ,_gef ,_gga ,_cged );};};func (_ffe *Context )stroke (_efg _fb .Painter ){_bae :=_ffe ._dbc ;if len (_ffe ._fefc )> 0{_bae =_cffc (_bae ,_ffe ._fefc ,_ffe ._bf );}else {_bae =_beaf (_gegg (_bae ));};_geb :=_ffe ._cdc ;_geb .UseNonZeroWinding =true ;_geb .Clear ();_geb .AddStroke (_bae ,_eddac (_ffe ._ce ),_ffe .capper (),_ffe .joiner ());_geb .Rasterize (_efg );};func (_eafd *surfacePattern )ColorAt (x ,y int )_e .Color {_aeeg :=_eafd ._gab .Bounds ();switch _eafd ._edbb {case _aaba :if y >=_aeeg .Dy (){return _e .Transparent ;};case _decf :if x >=_aeeg .Dx (){return _e .Transparent ;};case _ecce :if x >=_aeeg .Dx ()||y >=_aeeg .Dy (){return _e .Transparent ;};};x =x %_aeeg .Dx ()+_aeeg .Min .X ;y =y %_aeeg .Dy ()+_aeeg .Min .Y ;return _eafd ._gab .At (x ,y );};func (_dgc *Context )DrawCircle (x ,y ,r float64 ){_dgc .NewSubPath ();_dgc .DrawEllipticalArc (x ,y ,r ,r ,0,2*_g .Pi );_dgc .ClosePath ();};func (_efd *linearGradient )AddColorStop (offset float64 ,color _e .Color ){_efd ._eaf =append (_efd ._eaf ,stop {_eba :offset ,_cdfc :color });_ad .Sort (_efd ._eaf );};const (_egb repeatOp =iota ;_aaba ;_decf ;_ecce ;);func (_faeb *Context )RotateAbout (angle ,x ,y float64 ){_faeb .Translate (x ,y );_faeb .Rotate (angle );_faeb .Translate (-x ,-y );};func (_cgg *Context )SetMask (mask *_de .Alpha )error {if mask .Bounds ().Size ()!=_cgg ._ba .Bounds ().Size (){return _fg .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_cgg ._adf =mask ;return nil ;};func _fbf (_fgcd ,_cga ,_fgec ,_agf float64 )_eg .Gradient {_gfab :=&linearGradient {_dgf :_fgcd ,_deb :_cga ,_gfg :_fgec ,_cdabe :_agf };return _gfab ;};func _eddac (_abcg float64 )_ea .Int26_6 {return _ea .Int26_6 (_abcg *64)};func _dfe (_dcf ,_fedb ,_caag ,_faef ,_fec ,_ada float64 )_eg .Gradient {_bfb :=circle {_dcf ,_fedb ,_caag };_edd :=circle {_faef ,_fec ,_ada };_effc :=circle {_faef -_dcf ,_fec -_fedb ,_ada -_caag };_gbe :=_cabd (_effc ._dbb ,_effc ._bff ,-_effc ._gee ,_effc ._dbb ,_effc ._bff ,_effc ._gee );var _ebbg float64 ;if _gbe !=0{_ebbg =1.0/_gbe ;};_agdc :=-_bfb ._gee ;_ccg :=&radialGradient {_acfc :_bfb ,_fdc :_edd ,_aacg :_effc ,_eaa :_gbe ,_dcc :_ebbg ,_ebde :_agdc };return _ccg ;};func _bcdf (_adfcd string )(_bbg ,_abca ,_eaga ,_aed int ){_adfcd =_f .TrimPrefix (_adfcd ,"\u0023");_aed =255;if len (_adfcd )==3{_egf :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_d .Sscanf (_adfcd ,_egf ,&_bbg ,&_abca ,&_eaga );_bbg |=_bbg <<4;_abca |=_abca <<4;_eaga |=_eaga <<4;};if len (_adfcd )==6{_gfdce :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_d .Sscanf (_adfcd ,_gfdce ,&_bbg ,&_abca ,&_eaga );};if len (_adfcd )==8{_ggfe :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_d .Sscanf (_adfcd ,_ggfe ,&_bbg ,&_abca ,&_eaga ,&_aed );};return ;};func (_abe *Context )Clip (){_abe .ClipPreserve ();_abe .ClearPath ()};func (_cec *Context )SetHexColor (x string ){_cgba ,_ddcc ,_cff ,_fcb :=_bcdf (x );_cec .SetRGBA255 (_cgba ,_ddcc ,_cff ,_fcb );};func (_ffad *Context )ShearAbout (sx ,sy ,x ,y float64 ){_ffad .Translate (x ,y );_ffad .Shear (sx ,sy );_ffad .Translate (-x ,-y );};func (_ggd *Context )SetRGB255 (r ,g ,b int ){_ggd .SetRGBA255 (r ,g ,b ,255)};func (_abec stops )Swap (i ,j int ){_abec [i ],_abec [j ]=_abec [j ],_abec [i ]};func (_bdfe *Context )Rotate (angle float64 ){_bdfe ._fefg .Rotate (angle )};func (_bafb *Context )Shear (x ,y float64 ){_bafb ._fefg .Shear (x ,y )};func _beaf (_fff [][]_dg .Point )_fb .Path {var _daee _fb .Path ;for _ ,_bcbb :=range _fff {var _deff _ea .Point26_6 ;for _dbdeda ,_bfba :=range _bcbb {_gfe :=_ebae (_bfba );if _dbdeda ==0{_daee .Start (_gfe );}else {_abfb :=_gfe .X -_deff .X ;_bcc :=_gfe .Y -_deff .Y ;if _abfb < 0{_abfb =-_abfb ;};if _bcc < 0{_bcc =-_bcc ;};if _abfb +_bcc > 8{_daee .Add1 (_gfe );};};_deff =_gfe ;};};return _daee ;};func (_aff *linearGradient )ColorAt (x ,y int )_e .Color {if len (_aff ._eaf )==0{return _e .Transparent ;};_fdf ,_bfea :=float64 (x ),float64 (y );_defd ,_cdag ,_ced ,_ebbb :=_aff ._dgf ,_aff ._deb ,_aff ._gfg ,_aff ._cdabe ;_aaca ,_cab :=_ced -_defd ,_ebbb -_cdag ;if _cab ==0&&_aaca !=0{return _fagd ((_fdf -_defd )/_aaca ,_aff ._eaf );};if _aaca ==0&&_cab !=0{return _fagd ((_bfea -_cdag )/_cab ,_aff ._eaf );};_bbf :=_aaca *(_fdf -_defd )+_cab *(_bfea -_cdag );if _bbf < 0{return _aff ._eaf [0]._cdfc ;};_egc :=_g .Hypot (_aaca ,_cab );_eabf :=((_fdf -_defd )*-_cab +(_bfea -_cdag )*_aaca )/(_egc *_egc );_dbded ,_bdgc :=_defd +_eabf *-_cab ,_cdag +_eabf *_aaca ;_acd :=_g .Hypot (_fdf -_dbded ,_bfea -_bdgc )/_egc ;return _fagd (_acd ,_aff ._eaf );};func (_cdd *Context )SetDash (dashes ...float64 ){_cdd ._fefc =dashes };func _eccf (_bfa ,_gcbc uint32 ,_ead float64 )uint8 {return uint8 (int32 (float64 (_bfa )*(1.0-_ead )+float64 (_gcbc )*_ead )>>8);};func (_ddg *Context )Identity (){_ddg ._fefg =_dg .IdentityMatrix ()};func (_efcd *Context )fill (_bgg _fb .Painter ){_cbf :=_efcd ._facf ;if _efcd ._bc {_cbf =make (_fb .Path ,len (_efcd ._facf ));copy (_cbf ,_efcd ._facf );_cbf .Add1 (_ebae (_efcd ._da ));};_beae :=_efcd ._cdc ;_beae .UseNonZeroWinding =_efcd ._dfd ==_eg .FillRuleWinding ;_beae .Clear ();_beae .AddPath (_cbf );_beae .Rasterize (_bgg );};func (_cde *Context )Stroke (){_cde .StrokePreserve ();_cde .ClearPath ()};type circle struct{_dbb ,_bff ,_gee float64 };type solidPattern struct{_gad _e .Color };func _cffc (_fcdef _fb .Path ,_baa []float64 ,_gaag float64 )_fb .Path {return _beaf (_fedfe (_gegg (_fcdef ),_baa ,_gaag ));};func _cacb (_gfbb *_de .RGBA ,_becb *_de .Alpha ,_acec _eg .Pattern )*patternPainter {return &patternPainter {_gfbb ,_becb ,_acec };};func (_bgc *Context )SetRGBA255 (r ,g ,b ,a int ){_bgc ._bde =_e .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_bgc .setFillAndStrokeColor (_bgc ._bde );};func (_fedf *Context )SetLineCap (lineCap _eg .LineCap ){_fedf ._dbdb =lineCap };func (_ade *Context )MoveTo (x ,y float64 ){if _ade ._bc {_ade ._facf .Add1 (_ebae (_ade ._da ));};x ,y =_ade .Transform (x ,y );_decd :=_dg .NewPoint (x ,y );_ffa :=_ebae (_decd );_ade ._dbc .Start (_ffa );_ade ._facf .Start (_ffa );_ade ._da =_decd ;_ade ._fdg =_decd ;_ade ._bc =true ;};type stops []stop ;func _gf (_dbd ,_ga ,_ef ,_ae ,_ag ,_afd ,_cg float64 )(_cd ,_agd float64 ){_eab :=1-_cg ;_cf :=_eab *_eab ;_gg :=2*_eab *_cg ;_b :=_cg *_cg ;_cd =_cf *_dbd +_gg *_ef +_b *_ag ;_agd =_cf *_ga +_gg *_ae +_b *_afd ;return ;};type stop struct{_eba float64 ;_cdfc _e .Color ;};type linearGradient struct{_dgf ,_deb ,_gfg ,_cdabe float64 ;_eaf stops ;};func (_cdcd *Context )drawRegularPolygon (_bfe int ,_eefe ,_ffgf ,_fba ,_gbg float64 ){_bbb :=2*_g .Pi /float64 (_bfe );_gbg -=_g .Pi /2;if _bfe %2==0{_gbg +=_bbb /2;};_cdcd .NewSubPath ();for _bgd :=0;_bgd < _bfe ;_bgd ++{_gecd :=_gbg +_bbb *float64 (_bgd );_cdcd .LineTo (_eefe +_fba *_g .Cos (_gecd ),_ffgf +_fba *_g .Sin (_gecd ));};_cdcd .ClosePath ();};func _ca (_fe ,_dd ,_fa ,_cda ,_feb ,_cfb float64 )[]_dg .Point {_bg :=(_g .Hypot (_fa -_fe ,_cda -_dd )+_g .Hypot (_feb -_fa ,_cfb -_cda ));_be :=int (_bg +0.5);if _be < 4{_be =4;};_bge :=float64 (_be )-1;_fae :=make ([]_dg .Point ,_be );for _bee :=0;_bee < _be ;_bee ++{_agc :=float64 (_bee )/_bge ;_dc ,_fed :=_gf (_fe ,_dd ,_fa ,_cda ,_feb ,_cfb ,_agc );_fae [_bee ]=_dg .NewPoint (_dc ,_fed );};return _fae ;};func (_dga *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_dga .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_bab *Context )LineWidth ()float64 {return _bab ._ce };func (_cba *Context )Push (){_dbfgg :=*_cba ;_cba ._cbc =append (_cba ._cbc ,&_dbfgg )};func (_ddb *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_ddb .Translate (x ,y );_ddb .Scale (sx ,sy );_ddb .Translate (-x ,-y );};type surfacePattern struct{_gab _de .Image ;_edbb repeatOp ;};func (_cdf *Context )DrawImageAnchored (im _de .Image ,x ,y int ,ax ,ay float64 ){_efa :=im .Bounds ().Size ();x -=int (ax *float64 (_efa .X ));y -=int (ay *float64 (_efa .Y ));_ggde :=_af .BiLinear ;_ddd :=_cdf ._fefg .Clone ();_ddd .Translate (float64 (x ),float64 (y ));_dacg :=_afg .Aff3 {_ddd [0],_ddd [3],_ddd [6],_ddd [1],_ddd [4],_ddd [7]};if _cdf ._adf ==nil {_ggde .Transform (_cdf ._ba ,_dacg ,im ,im .Bounds (),_af .Over ,nil );}else {_ggde .Transform (_cdf ._ba ,_dacg ,im ,im .Bounds (),_af .Over ,&_af .Options {DstMask :_cdf ._adf ,DstMaskP :_de .ZP });};};func (_dea *Context )SetLineWidth (lineWidth float64 ){_dea ._ce =lineWidth };func (_aae *Context )Translate (x ,y float64 ){_aae ._fefg .Translate (x ,y )};func _fedfe (_gfc [][]_dg .Point ,_bcfd []float64 ,_bgeg float64 )[][]_dg .Point {var _bafbg [][]_dg .Point ;if len (_bcfd )==0{return _gfc ;};if len (_bcfd )==1{_bcfd =append (_bcfd ,_bcfd [0]);};for _ ,_bbc :=range _gfc {if len (_bbc )< 2{continue ;};_dgda :=_bbc [0];_decc :=1;_bfgeb :=0;_cfbb :=0.0;if _bgeg !=0{var _gaeg float64 ;for _ ,_efec :=range _bcfd {_gaeg +=_efec ;};_bgeg =_g .Mod (_bgeg ,_gaeg );if _bgeg < 0{_bgeg +=_gaeg ;};for _ggfa ,_egcg :=range _bcfd {_bgeg -=_egcg ;if _bgeg < 0{_bfgeb =_ggfa ;_cfbb =_egcg +_bgeg ;break ;};};};var _fagg []_dg .Point ;_fagg =append (_fagg ,_dgda );for _decc < len (_bbc ){_bfbc :=_bcfd [_bfgeb ];_bgbg :=_bbc [_decc ];_fad :=_dgda .Distance (_bgbg );_bbfe :=_bfbc -_cfbb ;if _fad > _bbfe {_fecd :=_bbfe /_fad ;_baebe :=_dgda .Interpolate (_bgbg ,_fecd );_fagg =append (_fagg ,_baebe );if _bfgeb %2==0&&len (_fagg )> 1{_bafbg =append (_bafbg ,_fagg );};_fagg =nil ;_fagg =append (_fagg ,_baebe );_cfbb =0;_dgda =_baebe ;_bfgeb =(_bfgeb +1)%len (_bcfd );}else {_fagg =append (_fagg ,_bgbg );_dgda =_bgbg ;_cfbb +=_fad ;_decc ++;};};if _bfgeb %2==0&&len (_fagg )> 1{_bafbg =append (_bafbg ,_fagg );};};return _bafbg ;};func _dgfe (_bfde float64 )float64 {return _bfde *_g .Pi /180};func (_dgd *Context )Matrix ()_dg .Matrix {return _dgd ._fefg };func (_gge *Context )SetFillRule (fillRule _eg .FillRule ){_gge ._dfd =fillRule };func (_ccfb stops )Less (i ,j int )bool {return _ccfb [i ]._eba < _ccfb [j ]._eba };func (_cgb *Context )SetColor (c _e .Color ){_cgb .setFillAndStrokeColor (c )};func (_afe *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_dbde ,_ede ,_abf ,_dfg :=x ,x +r ,x +w -r ,x +w ;_ecg ,_agdg ,_dbe ,_afcc :=y ,y +r ,y +h -r ,y +h ;_afe .NewSubPath ();_afe .MoveTo (_ede ,_ecg );_afe .LineTo (_abf ,_ecg );_afe .DrawArc (_abf ,_agdg ,r ,_dgfe (270),_dgfe (360));_afe .LineTo (_dfg ,_dbe );_afe .DrawArc (_abf ,_dbe ,r ,_dgfe (0),_dgfe (90));_afe .LineTo (_ede ,_afcc );_afe .DrawArc (_ede ,_dbe ,r ,_dgfe (90),_dgfe (180));_afe .LineTo (_dbde ,_agdg );_afe .DrawArc (_ede ,_agdg ,r ,_dgfe (180),_dgfe (270));_afe .ClosePath ();};func (_aecb *Context )FillPreserve (){var _gfb _fb .Painter ;if _aecb ._adf ==nil {if _bfg ,_aab :=_aecb ._ed .(*solidPattern );_aab {_ffgd :=_fb .NewRGBAPainter (_aecb ._ba );_ffgd .SetColor (_bfg ._gad );_gfb =_ffgd ;};};if _gfb ==nil {_gfb =_cacb (_aecb ._ba ,_aecb ._adf ,_aecb ._ed );};_aecb .fill (_gfb );};func (_cac *Context )SetFillRGBA (r ,g ,b ,a float64 ){_aba :=_e .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cac ._bde =_aba ;_cac ._ed =_add (_aba );};func (_afb *Context )Pop (){_gaf :=*_afb ;_fgfb :=_afb ._cbc ;_ggb ,_fgfb :=_fgfb [len (_fgfb )-1],_fgfb [:len (_fgfb )-1];*_afb =*_ggb ;_afb ._dbc =_gaf ._dbc ;_afb ._facf =_gaf ._facf ;_afb ._da =_gaf ._da ;_afb ._fdg =_gaf ._fdg ;_afb ._bc =_gaf ._bc ;_afb ._gc =_gaf ._gc ;};func _aaa (_aca _de .Image ,_fdba repeatOp )_eg .Pattern {return &surfacePattern {_gab :_aca ,_edbb :_fdba };};func (_aa *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_ffd :=_e .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_aa ._eca =_add (_ffd );};func (_fgbd *radialGradient )ColorAt (x ,y int )_e .Color {if len (_fgbd ._cdb )==0{return _e .Transparent ;};_fbba ,_ebab :=float64 (x )+0.5-_fgbd ._acfc ._dbb ,float64 (y )+0.5-_fgbd ._acfc ._bff ;_cgad :=_cabd (_fbba ,_ebab ,_fgbd ._acfc ._gee ,_fgbd ._aacg ._dbb ,_fgbd ._aacg ._bff ,_fgbd ._aacg ._gee );_gafg :=_cabd (_fbba ,_ebab ,-_fgbd ._acfc ._gee ,_fbba ,_ebab ,_fgbd ._acfc ._gee );if _fgbd ._eaa ==0{if _cgad ==0{return _e .Transparent ;};_bffa :=0.5*_gafg /_cgad ;if _bffa *_fgbd ._aacg ._gee >=_fgbd ._ebde {return _fagd (_bffa ,_fgbd ._cdb );};return _e .Transparent ;};_aeb :=_cabd (_cgad ,_fgbd ._eaa ,0,_cgad ,-_gafg ,0);if _aeb >=0{_fcd :=_g .Sqrt (_aeb );_bbfa :=(_cgad +_fcd )*_fgbd ._dcc ;_ggbg :=(_cgad -_fcd )*_fgbd ._dcc ;if _bbfa *_fgbd ._aacg ._gee >=_fgbd ._ebde {return _fagd (_bbfa ,_fgbd ._cdb );}else if _ggbg *_fgbd ._aacg ._gee >=_fgbd ._ebde {return _fagd (_ggbg ,_fgbd ._cdb );};};return _e .Transparent ;};type repeatOp int ;func (_age *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_age ._bc {_age .MoveTo (x1 ,y1 );};_dfa ,_dce :=_age ._fdg .X ,_age ._fdg .Y ;x1 ,y1 =_age .Transform (x1 ,y1 );x2 ,y2 =_age .Transform (x2 ,y2 );x3 ,y3 =_age .Transform (x3 ,y3 );_eabe :=_eee (_dfa ,_dce ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_bdg :=_ebae (_age ._fdg );for _ ,_efc :=range _eabe [1:]{_dde :=_ebae (_efc );if _dde ==_bdg {continue ;};_bdg =_dde ;_age ._dbc .Add1 (_dde );_age ._facf .Add1 (_dde );_age ._fdg =_efc ;};};func (_afdd *Context )Scale (x ,y float64 ){_afdd ._fefg .Scale (x ,y )};func _fagd (_fca float64 ,_egd stops )_e .Color {if _fca <=0.0||len (_egd )==1{return _egd [0]._cdfc ;};_ceb :=_egd [len (_egd )-1];if _fca >=_ceb ._eba {return _ceb ._cdfc ;};for _faac ,_gdg :=range _egd [1:]{if _fca < _gdg ._eba {_fca =(_fca -_egd [_faac ]._eba )/(_gdg ._eba -_egd [_faac ]._eba );return _bdfc (_egd [_faac ]._cdfc ,_gdg ._cdfc ,_fca );};};return _ceb ._cdfc ;};func _eee (_decg ,_fef ,_aee ,_fc ,_df ,_bea ,_fac ,_ffg float64 )[]_dg .Point {_eef :=(_g .Hypot (_aee -_decg ,_fc -_fef )+_g .Hypot (_df -_aee ,_bea -_fc )+_g .Hypot (_fac -_df ,_ffg -_bea ));_geg :=int (_eef +0.5);if _geg < 4{_geg =4;};_dge :=float64 (_geg )-1;_gfa :=make ([]_dg .Point ,_geg );for _bdf :=0;_bdf < _geg ;_bdf ++{_agg :=float64 (_bdf )/_dge ;_dbf ,_beb :=_beef (_decg ,_fef ,_aee ,_fc ,_df ,_bea ,_fac ,_ffg ,_agg );_gfa [_bdf ]=_dg .NewPoint (_dbf ,_beb );};return _gfa ;};func NewContext (width ,height int )*Context {return NewContextForRGBA (_de .NewRGBA (_de .Rect (0,0,width ,height )));};func (_bdb stops )Len ()int {return len (_bdb )};func (_ecd *Context )ClosePath (){if _ecd ._bc {_ecfc :=_ebae (_ecd ._da );_ecd ._dbc .Add1 (_ecfc );_ecd ._facf .Add1 (_ecfc );_ecd ._fdg =_ecd ._da ;};};func (_bgea *Context )InvertMask (){if _bgea ._adf ==nil {_bgea ._adf =_de .NewAlpha (_bgea ._ba .Bounds ());}else {for _gfdc ,_cddb :=range _bgea ._adf .Pix {_bgea ._adf .Pix [_gfdc ]=255-_cddb ;};};};func (_bfda *Context )DrawImage (im _de .Image ,x ,y int ){_bfda .DrawImageAnchored (im ,x ,y ,0,0)};func (_fda *Context )SetLineJoin (lineJoin _eg .LineJoin ){_fda ._cb =lineJoin };var (_bb =_add (_e .White );_fd =_add (_e .Black ););func (_fbe *Context )AsMask ()*_de .Alpha {_cdg :=_de .NewAlpha (_fbe ._ba .Bounds ());_af .Draw (_cdg ,_fbe ._ba .Bounds (),_fbe ._ba ,_de .ZP ,_af .Src );return _cdg ;};func (_dgb *Context )ClearPath (){_dgb ._dbc .Clear ();_dgb ._facf .Clear ();_dgb ._bc =false };